(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(s){if(s.ep)return;s.ep=!0;const a=t(s);fetch(s.href,a)}})();let GameEngine$1=class{constructor(){this.canvas=null,this.context=null,this.isRunning=!1,this.isPaused=!1,this.lastTime=0,this.targetFPS=60,this.frameInterval=1e3/this.targetFPS,this.sceneManager=null,this.assetManager=null,this.audioManager=null,this.progressManager=null,this.uiManager=null,this.visualFeedback=null,this.sceneTransitions=null,this.autoSaveInterval=3e4,this.lastAutoSave=0,this.gameState={currentScene:"welcome",progress:{selection:!1,processing:!1,preparation:!1,drying:!1,roasting:!1,slicing:!1},score:0,completedSteps:[],settings:{soundEnabled:!0,language:"zh-TW"}}}async init(){try{if(!this.checkBrowserCompatibility())throw new Error("瀏覽器不支援此遊戲所需的功能");if(this.canvas=document.getElementById("gameCanvas"),!this.canvas)throw new Error("找不到遊戲Canvas元素");if(this.context=this.canvas.getContext("2d"),!this.context)throw new Error("無法獲取Canvas 2D上下文");return console.log("初始化 AssetManager..."),this.assetManager=new AssetManager,console.log("初始化 AudioManager..."),this.audioManager=new AudioManager,console.log("初始化 ProgressManager..."),this.progressManager=new ProgressManager,console.log("初始化 UIManager..."),this.uiManager=new UIManager,console.log("初始化 VisualFeedbackManager..."),this.visualFeedback=new VisualFeedbackManager,console.log("初始化 SceneTransitionManager..."),this.sceneTransitions=new SceneTransitionManager,console.log("初始化 SceneManager..."),this.sceneManager=new SceneManager(this),this.progressManager.setVisualFeedback(this.visualFeedback),this.progressManager.setEventCallbacks({onScoreChange:(l,e,t)=>{console.log(`分數從 ${l} 增加到 ${e} (+${t})`)},onStepComplete:(l,e)=>{console.log(`步驟完成: ${l}, 總進度: ${e.toFixed(1)}%`)},onAchievementUnlock:l=>{console.log(`解鎖成就: ${l.name}`);const e=new AchievementNotification({achievement:l,x:400,y:100});this.visualFeedback.feedbackElements.push(e)}}),this.audioManager.setSoundEnabled(this.gameState.settings.soundEnabled),this.optimizePerformance(),this.setupInputHandlers(),await this.loadGameAssets(),console.log("遊戲引擎初始化完成"),!0}catch(l){return console.error("遊戲引擎初始化失敗:",l),!1}}async loadGameAssets(){try{console.log("開始載入遊戲資源...");const l=[{type:"image",name:"background_welcome",path:"assets/images/backgrounds/welcome_bg.png"},{type:"image",name:"logo",path:"assets/images/ui/game_logo.png"},{type:"image",name:"button_start",path:"assets/images/ui/button_start.png"},{type:"image",name:"processing_duck",path:"assets/images/duck/processing_duck.png"}];this.assetManager.preloadAssets(l).catch(e=>{console.warn("部分資源載入失敗，遊戲將使用佔位符:",e)}),this.audioManager.preloadSounds().catch(e=>{console.warn("音效資源載入失敗，遊戲將以靜音模式運行:",e)}),console.log("遊戲資源載入程序已啟動")}catch(l){console.warn("資源載入過程中發生錯誤，遊戲將繼續運行:",l)}}setupInputHandlers(){this.canvas.addEventListener("click",l=>{if(this.sceneManager.currentScene){const e=this.canvas.getBoundingClientRect(),t=l.clientX-e.left,i=l.clientY-e.top;this.sceneManager.currentScene.handleInput({type:"click",x:t,y:i})}}),this.canvas.addEventListener("mousemove",l=>{if(this.sceneManager.currentScene){const e=this.canvas.getBoundingClientRect(),t=l.clientX-e.left,i=l.clientY-e.top;this.sceneManager.currentScene.handleInput({type:"mousemove",x:t,y:i})}}),this.canvas.addEventListener("mouseup",l=>{if(this.sceneManager.currentScene){const e=this.canvas.getBoundingClientRect(),t=l.clientX-e.left,i=l.clientY-e.top;this.sceneManager.currentScene.handleInput({type:"mouseup",x:t,y:i})}}),this.canvas.addEventListener("mousedown",l=>{if(this.sceneManager.currentScene){const e=this.canvas.getBoundingClientRect(),t=l.clientX-e.left,i=l.clientY-e.top;this.sceneManager.currentScene.handleInput({type:"mousedown",x:t,y:i})}}),this.canvas.addEventListener("touchstart",l=>{if(l.preventDefault(),this.sceneManager.currentScene&&l.touches.length>0){const e=this.canvas.getBoundingClientRect(),t=l.touches[0],i=t.clientX-e.left,s=t.clientY-e.top;this.sceneManager.currentScene.handleInput({type:"click",x:i,y:s})}}),this.canvas.addEventListener("touchmove",l=>{if(l.preventDefault(),this.sceneManager.currentScene&&l.touches.length>0){const e=this.canvas.getBoundingClientRect(),t=l.touches[0],i=t.clientX-e.left,s=t.clientY-e.top;this.sceneManager.currentScene.handleInput({type:"mousemove",x:i,y:s})}}),this.canvas.addEventListener("touchend",l=>{l.preventDefault(),this.sceneManager.currentScene&&this.sceneManager.currentScene.handleInput({type:"mouseup",x:0,y:0})})}start(){this.isRunning||(this.isRunning=!0,this.isPaused=!1,this.lastTime=performance.now(),this.sceneManager.changeScene("welcome"),this.gameLoop(),console.log("遊戲開始運行"))}gameLoop(){if(!this.isRunning)return;const l=performance.now(),e=l-this.lastTime;e>=this.frameInterval&&(this.isPaused||(this.update(e),this.render()),this.lastTime=l),requestAnimationFrame(()=>this.gameLoop())}update(l){try{this.monitorPerformance(),this.progressManager.updatePlayTime(l),this.lastAutoSave+=l,this.lastAutoSave>=this.autoSaveInterval&&(this.saveGameProgress(),this.lastAutoSave=0),this.sceneManager.currentScene&&this.sceneManager.currentScene.update(l),this.uiManager.update(l),this.visualFeedback.update(l),this.sceneTransitions.update(l)}catch(e){console.error("更新邏輯錯誤:",e),this.handleUpdateError(e)}}handleUpdateError(l){console.error("遊戲更新錯誤，嘗試恢復:",l);try{l.message.includes("sceneManager")&&(console.log("重置場景管理器"),this.sceneManager.changeScene("welcome")),l.message.includes("uiManager")&&(console.log("重置UI管理器"),this.uiManager=new UIManager)}catch(e){console.error("無法恢復遊戲狀態:",e),this.showFatalError("遊戲狀態錯誤，請重新載入頁面")}}render(){try{this.optimizeCanvasRendering(),this.context.clearRect(0,0,this.canvas.width,this.canvas.height);const l=this.context.createLinearGradient(0,0,this.canvas.width,this.canvas.height);l.addColorStop(0,"#ffffff"),l.addColorStop(1,"#f8f9fa"),this.context.fillStyle=l,this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.sceneManager.currentScene&&this.sceneManager.currentScene.render(this.context),this.uiManager.render(this.context),this.visualFeedback.render(this.context),this.sceneTransitions.render(this.context)}catch(l){console.error("渲染錯誤:",l),this.handleRenderError(l)}}optimizeCanvasRendering(){this.context.imageSmoothingEnabled=!0,this.context.imageSmoothingQuality="high",this.context.textBaseline="top",this.context.textAlign="left"}handleRenderError(l){console.error("渲染系統錯誤，嘗試恢復:",l);try{this.context=this.canvas.getContext("2d"),this.context.save(),this.context.restore(),this.enableLowPerformanceMode()}catch(e){console.error("無法恢復渲染系統:",e),this.showFatalError("渲染系統故障，請重新載入頁面")}}showFatalError(l){const e=document.createElement("div");e.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.8);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: Arial, sans-serif;
            font-size: 18px;
            text-align: center;
            z-index: 10000;
        `,e.innerHTML=`
            <div>
                <h2>遊戲錯誤</h2>
                <p>${l}</p>
                <button onclick="location.reload()" style="
                    padding: 10px 20px;
                    font-size: 16px;
                    background: #007bff;
                    color: white;
                    border: none;
                    border-radius: 5px;
                    cursor: pointer;
                    margin-top: 20px;
                ">重新載入遊戲</button>
            </div>
        `,document.body.appendChild(e)}performMemoryCleanup(){try{this.assetManager&&this.assetManager.cleanupUnusedAssets(),this.audioManager&&this.audioManager.cleanupUnusedSounds(),this.visualFeedback&&this.visualFeedback.cleanup(),window.gc&&window.gc(),console.log("記憶體清理完成")}catch(l){console.error("記憶體清理失敗:",l)}}monitorPerformance(){if(!performance.mark)return;const l=performance.now();this.performanceStats||(this.performanceStats={frameCount:0,lastFPSCheck:l,currentFPS:0,memoryUsage:0}),this.performanceStats.frameCount++,l-this.performanceStats.lastFPSCheck>=1e3&&(this.performanceStats.currentFPS=this.performanceStats.frameCount,this.performanceStats.frameCount=0,this.performanceStats.lastFPSCheck=l,performance.memory&&(this.performanceStats.memoryUsage=performance.memory.usedJSHeapSize),this.performanceStats.currentFPS<this.targetFPS*.7&&(console.warn(`FPS過低 (${this.performanceStats.currentFPS})，啟用效能優化`),this.enableLowPerformanceMode()),this.performanceStats.memoryUsage>1e8&&(console.warn("記憶體使用過高，執行清理"),this.performMemoryCleanup()))}pause(){this.isPaused=!0,console.log("遊戲已暫停")}resume(){this.isPaused=!1,this.lastTime=performance.now(),console.log("遊戲已恢復")}stop(){this.isRunning=!1,this.isPaused=!1,console.log("遊戲已停止")}getGameState(){return{...this.gameState}}updateGameState(l){this.gameState={...this.gameState,...l},this.progressManager.saveProgress(this.gameState)}createSceneTransition(l,e,t={}){return this.sceneTransitions.startTransition(l,{...t,onMidpoint:()=>{e&&this.sceneManager&&this.sceneManager.changeScene(e)}})}completeStep(l,e,t){this.progressManager.completeStep(l,e,t)}addScore(l,e,t,i){this.progressManager.addScore(l,e,t,i)}startNewGame(){console.log("開始新遊戲");const l=this.progressManager.startNewGame();return this.gameState={...l},this.sceneManager.changeScene("welcome"),l}completeCurrentGame(){console.log("完成當前遊戲");const l=this.progressManager.completeGame();return this.updateGameState({gameCompleted:!0,completionData:l}),l}resetGameProgress(){console.log("重置遊戲進度"),this.progressManager.resetProgress(),this.gameState=this.progressManager.getCurrentProgress(),this.sceneManager.changeScene("welcome")}loadGameProgress(){console.log("載入遊戲進度"),this.progressManager.loadProgress(),this.gameState=this.progressManager.getCurrentProgress();const l=this.gameState.currentScene||"welcome";return this.sceneManager.changeScene(l),this.gameState}saveGameProgress(){return console.log("保存遊戲進度"),this.progressManager.saveProgress(this.gameState),!0}isGameCompleted(){return this.progressManager.isGameCompleted()}getGameStatistics(){return this.progressManager.getStatistics()}getGameAchievements(){return this.progressManager.getAchievements()}setSoundEnabled(l){this.gameState.settings.soundEnabled=l,this.audioManager.setSoundEnabled(l),this.saveGameProgress()}setMusicVolume(l){this.audioManager.setMusicVolume(l)}setSoundVolume(l){this.audioManager.setSoundVolume(l)}playSound(l,e=null){this.gameState.settings.soundEnabled&&this.audioManager.playSound(l,e)}playBackgroundMusic(l,e=!0){this.gameState.settings.soundEnabled&&this.audioManager.playBackgroundMusic(l,e)}stopBackgroundMusic(){this.audioManager.stopBackgroundMusic()}checkBrowserCompatibility(){const compatibility={canvas:!1,audio:!1,localStorage:!1,requestAnimationFrame:!1,es6:!1};try{const testCanvas=document.createElement("canvas");compatibility.canvas=!!(testCanvas.getContext&&testCanvas.getContext("2d")),compatibility.audio=!!window.Audio,compatibility.localStorage=!!window.localStorage,compatibility.requestAnimationFrame=!!window.requestAnimationFrame;try{eval("const test = () => {}; let x = 1;"),compatibility.es6=!0}catch(l){compatibility.es6=!1}console.log("瀏覽器相容性檢查:",compatibility);const required=["canvas","localStorage","requestAnimationFrame"],missing=required.filter(l=>!compatibility[l]);return missing.length>0?(console.error("缺少必要功能:",missing),this.showCompatibilityError(missing),!1):(compatibility.audio||(console.warn("音效功能不可用，遊戲將以靜音模式運行"),this.gameState.settings.soundEnabled=!1),compatibility.es6||console.warn("ES6功能不完全支援，可能影響遊戲效能"),!0)}catch(l){return console.error("相容性檢查失敗:",l),!1}}showCompatibilityError(l){const e=`
            <div style="
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background: #fff;
                border: 2px solid #ff0000;
                padding: 20px;
                border-radius: 10px;
                box-shadow: 0 4px 8px rgba(0,0,0,0.3);
                z-index: 9999;
                font-family: Arial, sans-serif;
                text-align: center;
                max-width: 400px;
            ">
                <h3 style="color: #ff0000; margin-top: 0;">瀏覽器不相容</h3>
                <p>您的瀏覽器缺少以下必要功能：</p>
                <ul style="text-align: left; color: #666;">
                    ${l.map(t=>`<li>${this.getFeatureName(t)}</li>`).join("")}
                </ul>
                <p>請更新您的瀏覽器或使用以下推薦瀏覽器：</p>
                <ul style="text-align: left; color: #333;">
                    <li>Chrome 60+</li>
                    <li>Firefox 55+</li>
                    <li>Safari 11+</li>
                    <li>Edge 79+</li>
                </ul>
            </div>
        `;document.body.insertAdjacentHTML("beforeend",e)}getFeatureName(l){return{canvas:"HTML5 Canvas",audio:"HTML5 Audio",localStorage:"Local Storage",requestAnimationFrame:"Request Animation Frame",es6:"ES6 JavaScript"}[l]||l}optimizePerformance(){const l=this.detectPerformance();l==="low"?(console.log("檢測到低效能裝置，啟用效能優化模式"),this.targetFPS=30,this.frameInterval=1e3/this.targetFPS,this.enableLowPerformanceMode()):l==="medium"?(console.log("檢測到中等效能裝置，使用標準設定"),this.targetFPS=45,this.frameInterval=1e3/this.targetFPS):(console.log("檢測到高效能裝置，使用最佳品質設定"),this.targetFPS=60,this.frameInterval=1e3/this.targetFPS)}detectPerformance(){const e=document.createElement("canvas").getContext("2d"),t=performance.now();for(let r=0;r<1e3;r++)e.fillRect(Math.random()*100,Math.random()*100,10,10);const i=performance.now()-t,s=performance.memory,a=s?s.jsHeapSizeLimit:0,n=navigator.hardwareConcurrency||1;return console.log(`效能檢測 - 渲染時間: ${i.toFixed(2)}ms, 記憶體: ${a}, CPU核心: ${n}`),i>50||a<5e7||n<2?"low":i>20||a<1e8||n<4?"medium":"high"}enableLowPerformanceMode(){this.visualFeedback&&this.visualFeedback.setLowPerformanceMode(!0),this.sceneTransitions&&this.sceneTransitions.setLowPerformanceMode(!0),console.log("低效能模式已啟用")}};window.GameEngine=GameEngine$1;let Scene$1=class{constructor(e,t){this.name=e,this.gameEngine=t,this.isActive=!1,this.isLoaded=!1,this.isLoading=!1,this.assets=[],this.backgroundImage=null,this.uiElements=[],this.miniGames=[],this.currentMiniGame=null}async enter(){this.isActive||(this.isActive=!0),this.isLoading||(this.isLoading=!0),this.cleanup(),this.isLoaded||(await this.loadSceneAssets(),this.isLoaded=!0),this.isLoading=!1,this.setupScene(),console.log(`進入場景: ${this.name}`)}exit(){this.isActive=!1,this.cleanup(),console.log(`離開場景: ${this.name}`)}async loadSceneAssets(){console.log(`載入場景資源: ${this.name}`)}setupScene(){}update(e){this.isActive&&(this.currentMiniGame&&this.currentMiniGame.update(e),this.uiElements.forEach(t=>{t.update&&t.update(e)}))}render(e){if(this.isActive){if(this.isLoading){this.renderLoadingScreen(e);return}this.backgroundImage&&e.drawImage(this.backgroundImage,0,0,e.canvas.width,e.canvas.height),this.renderScene(e),this.currentMiniGame&&this.currentMiniGame.render(e),this.isLoading||this.uiElements.forEach(t=>{t.render&&t.render(e)})}}renderLoadingScreen(e){const t=e.canvas,i=e.createLinearGradient(0,0,0,t.height);i.addColorStop(0,"#2c3e50"),i.addColorStop(1,"#34495e"),e.fillStyle=i,e.fillRect(0,0,t.width,t.height);const s=this.gameEngine.assetManager.getAsset("logo");if(s&&s.width){const r=(t.width-150)/2,h=t.height/2-150/2-40;e.drawImage(s,r,h,150,150)}e.fillStyle="#FFFFFF",e.font="bold 24px Microsoft JhengHei, sans-serif",e.textAlign="center",e.textBaseline="middle",e.fillText("Loading",t.width/2,t.height/2+80);const a=".".repeat(Math.floor(Date.now()/500)%4);e.fillStyle="#FFFFFF",e.font="bold 24px Microsoft JhengHei, sans-serif",e.fillText(a,t.width/2+80,t.height/2+80)}renderScene(e){}handleInput(e){if(this.isActive&&!(this.currentMiniGame&&this.currentMiniGame.handleInput&&this.currentMiniGame.handleInput(e))){for(let t of this.uiElements)if(t.handleInput&&t.handleInput(e))return;this.handleSceneInput(e)}}handleSceneInput(e){}startMiniGame(e,t={}){this.currentMiniGame&&this.currentMiniGame.cleanup(),this.currentMiniGame=new e(t),this.currentMiniGame.start(),this.currentMiniGame.onComplete=(i,s)=>{this.onMiniGameComplete(i,s)},this.currentMiniGame.onBack=()=>{console.log("玩家點擊返回按鈕"),this.currentMiniGame.cleanup(),this.currentMiniGame=null,this.onMiniGameBack()},this.currentMiniGame.onSkip=()=>{console.log("玩家點擊跳過按鈕"),this.currentMiniGame.cleanup(),this.currentMiniGame=null,this.onMiniGameSkip()}}onMiniGameComplete(e,t){e?(console.log("迷你遊戲完成成功",t),this.gameEngine.progressManager.completeStep(this.name)):console.log("迷你遊戲失敗，可以重試"),this.currentMiniGame=null}onMiniGameBack(){console.log("從迷你遊戲返回"),this.showSceneUI&&this.showSceneUI()}onMiniGameSkip(){console.log("跳過迷你遊戲"),this.onMiniGameComplete(!0,{score:0,skipped:!0}),this.showSceneUI&&this.showSceneUI()}transitionToScene(e){this.gameEngine.sceneManager.changeScene(e)}cleanup(){this.currentMiniGame&&(this.currentMiniGame.cleanup(),this.currentMiniGame=null),this.uiElements=[]}addUIElement(e){this.uiElements.push(e)}removeUIElement(e){const t=this.uiElements.indexOf(e);t>-1&&this.uiElements.splice(t,1)}},SceneManager$1=class{constructor(e){this.gameEngine=e,this.scenes=new Map,this.currentScene=null,this.isTransitioning=!1}registerScene(e,t){this.scenes.set(e,t)}async changeScene(e){if(this.isTransitioning){console.warn("場景切換進行中，忽略新的切換請求");return}const t=this.scenes.get(e);if(!t){console.error(`找不到場景: ${e}`),console.error("已註冊的場景:",Array.from(this.scenes.keys()));return}this.isTransitioning=!0;try{const i=new t(e,this.gameEngine);i.isActive=!0,i.isLoading=!0,this.currentScene&&await this.currentScene.exit(),this.currentScene=i,await this.currentScene.enter(),this.gameEngine.updateGameState({currentScene:e}),console.log(`場景切換完成: ${e}`)}catch(i){console.error("場景切換失敗:",i),console.error("錯誤堆疊:",i.stack)}finally{this.isTransitioning=!1}}getCurrentScene(){return this.currentScene}initializeScenes(){this.registerScene("welcome",WelcomeScene),this.registerScene("selection",SelectionScene),this.registerScene("processing",ProcessingScene),this.registerScene("preparation",PreparationScene),this.registerScene("drying",DryingScene),this.registerScene("roasting",RoastingScene),this.registerScene("slicing",SlicingScene),this.registerScene("completion",CompletionScene)}};window.Scene=Scene$1;window.SceneManager=SceneManager$1;let MiniGame$1=class{constructor(e={}){this.name=e.name||"MiniGame",this.gameEngine=e.gameEngine,this.scene=e.scene,this.isActive=!1,this.isCompleted=!1,this.isSuccessful=!1,this.progress=0,this.config={timeLimit:e.timeLimit||0,maxAttempts:e.maxAttempts||0,successThreshold:e.successThreshold||1,...e},this.stats={attempts:0,startTime:0,endTime:0,score:0},this.onComplete=null,this.onProgress=null,this.onFail=null,this.uiElements=[],this.instructions=null,this.progressBar=null,this.gameArea={x:e.gameAreaX||100,y:e.gameAreaY||150,width:e.gameAreaWidth||600,height:e.gameAreaHeight||300}}start(){this.isActive=!0,this.isCompleted=!1,this.isSuccessful=!1,this.progress=0,this.stats.startTime=Date.now(),this.stats.attempts++,this.setupGame(),this.createUI(),console.log(`開始迷你遊戲: ${this.name}`)}setupGame(){}createUI(){if(!this.gameEngine||!this.gameEngine.uiManager)return;const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.instructions=e.createLabel({x:t.width/2,y:80,text:this.getInstructions(),fontSize:16,color:"#654321",align:"center"}),this.progressBar=e.createProgressBar({x:this.gameArea.x,y:this.gameArea.y-30,width:this.gameArea.width,height:20,progress:this.progress,color:"#32CD32"}),this.backButton=e.createButton({x:20,y:t.height-70,width:100,height:40,text:"返回",fontSize:16,onClick:()=>this.handleBack()}),this.skipButton=e.createButton({x:t.width-120,y:t.height-70,width:100,height:40,text:"跳過",fontSize:16,onClick:()=>this.handleSkip()}),this.uiElements.push(this.instructions,this.progressBar,this.backButton,this.skipButton)}getInstructions(){return"請按照提示完成操作"}update(e){if(!(!this.isActive||this.isCompleted)){if(this.config.timeLimit>0&&Date.now()-this.stats.startTime>this.config.timeLimit){this.fail("時間到了！");return}this.updateGame(e),this.progressBar&&this.progressBar.setProgress(this.progress),this.checkCompletion()}}updateGame(e){}render(e){this.isActive&&(this.renderGameArea(e),this.renderGame(e),this.renderGameStatus(e))}renderGameArea(e){const t=this.gameArea;e.fillStyle="#FFFFFF",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height)}renderGame(e){}renderGameStatus(e){this.config.maxAttempts>0&&(e.fillStyle="#654321",e.font="14px Microsoft JhengHei",e.textAlign="right",e.fillText(`嘗試次數: ${this.stats.attempts}/${this.config.maxAttempts}`,this.gameArea.x+this.gameArea.width-10,this.gameArea.y+20));const t=Date.now()-this.stats.startTime;if(this.config.timeLimit>0){const i=Math.max(0,this.config.timeLimit-t),s=Math.ceil(i/1e3);e.fillStyle=s<=10?"#FF6B6B":"#654321",e.font="14px Microsoft JhengHei",e.textAlign="left",e.fillText(`剩餘時間: ${s}秒`,this.gameArea.x+10,this.gameArea.y+20)}else{const i=Math.floor(t/1e3);e.fillStyle="#654321",e.font="14px Microsoft JhengHei",e.textAlign="left",e.fillText(`經過時間: ${i}秒`,this.gameArea.x+10,this.gameArea.y+20)}}handleInput(e){return!this.isActive||this.isCompleted||!this.isPointInGameArea(e.x,e.y)?!1:this.handleGameInput(e)}handleGameInput(e){return!1}isPointInGameArea(e,t){const i=this.gameArea;return e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height}updateProgress(e){this.progress=Math.max(0,Math.min(1,e)),this.onProgress&&this.onProgress(this.progress)}checkCompletion(){console.log(`檢查完成: progress=${this.progress}, threshold=${this.config.successThreshold}, isCompleted=${this.isCompleted}`),this.progress>=this.config.successThreshold&&this.complete(!0)}complete(e=!0){this.isCompleted||(this.isCompleted=!0,this.isSuccessful=e,this.stats.endTime=Date.now(),this.calculateScore(),console.log(`迷你遊戲完成: ${this.name}, 成功: ${e}, 分數: ${this.stats.score}`),this.onComplete&&this.onComplete(e,this.stats),setTimeout(()=>{this.cleanup()},2e3))}fail(e="遊戲失敗"){console.log(`迷你遊戲失敗: ${this.name}, 原因: ${e}`),this.onFail&&this.onFail(e),this.config.maxAttempts>0&&this.stats.attempts>=this.config.maxAttempts?this.complete(!1):this.reset()}reset(){this.progress=0,this.isCompleted=!1,this.isSuccessful=!1,this.setupGame(),console.log(`重置迷你遊戲: ${this.name}`)}calculateScore(){const t=this.calculateTimeBonus(),i=this.calculateAccuracyBonus();this.stats.score=Math.round(100+t+i)}calculateTimeBonus(){const e=this.stats.endTime-this.stats.startTime;if(this.config.timeLimit>0){const i=Math.max(0,this.config.timeLimit-e)/this.config.timeLimit;return Math.round(i*50)}else{const t=e/1e3;return t<=10?50:t<=20?40:t<=30?30:t<=45?20:t<=60?10:0}}calculateAccuracyBonus(){return this.stats.attempts===1?50:this.stats.attempts<=3?25:0}pause(){this.isActive=!1}resume(){this.isActive=!0}handleBack(){console.log(`${this.name}: 玩家點擊返回`),this.onBack?this.onBack():(this.isActive=!1,this.isCompleted=!1,this.scene&&this.scene.onMiniGameComplete&&this.scene.onMiniGameComplete(!1,this.stats))}handleSkip(){console.log(`${this.name}: 玩家點擊跳過`),this.onSkip?this.onSkip():this.complete(!0)}cleanup(){this.isActive=!1,this.gameEngine&&this.gameEngine.uiManager&&this.uiElements.forEach(e=>{this.gameEngine.uiManager.removeUIElement(e)}),this.uiElements=[],this.instructions=null,this.progressBar=null,this.backButton=null,this.skipButton=null,console.log(`清理迷你遊戲: ${this.name}`)}getResult(){return{name:this.name,completed:this.isCompleted,successful:this.isSuccessful,progress:this.progress,stats:{...this.stats}}}};window.MiniGame=MiniGame$1;let AssetManager$1=class{constructor(){this.assets=new Map,this.loadingPromises=new Map,this.placeholders=new Map,this.initializePlaceholders()}initializePlaceholders(){this.createPlaceholderImage("default",100,100,"#CCCCCC","載入中..."),this.createPlaceholderImage("background",800,600,"#F5DEB3","背景圖片"),this.createPlaceholderImage("character",200,200,"#FFE4B5","角色圖片"),this.createPlaceholderImage("ui_button",120,40,"#FFD700","按鈕"),this.createPlaceholderImage("food_item",150,150,"#DEB887","食材")}createPlaceholderImage(e,t,i,s,a){const n=document.createElement("canvas");n.width=t,n.height=i;const r=n.getContext("2d");r.fillStyle=s,r.fillRect(0,0,t,i),r.strokeStyle="#999999",r.lineWidth=2,r.strokeRect(1,1,t-2,i-2),r.fillStyle="#666666",r.font="14px Arial",r.textAlign="center",r.textBaseline="middle",r.fillText(a,t/2,i/2),r.font="10px Arial",r.fillText(`${t}x${i}`,t/2,i/2+20),this.placeholders.set(e,n)}async loadImage(e,t,i=1){if(this.loadingPromises.has(t))return this.loadingPromises.get(t);if(this.assets.has(t))return this.assets.get(t);const s=this.attemptImageLoad(e,t,i);return this.loadingPromises.set(t,s),s}async attemptImageLoad(e,t,i){for(let s=0;s<=i;s++)try{const a=await this.loadSingleImage(e,t,s);return this.assets.set(t,a),this.loadingPromises.delete(t),console.log(`圖片載入成功: ${t} (${e})${s>0?` (重試 ${s} 次)`:""}`),a}catch{if(s===i){console.warn(`圖片載入失敗: ${t} (${e})，已重試 ${i} 次，使用佔位符`);let n="default";t.includes("background")||t.includes("bg")?n="background":t.includes("character")||t.includes("duck")?n="character":t.includes("button")?n="ui_button":(t.includes("food")||t.includes("ingredient"))&&(n="food_item");const r=this.placeholders.get(n)||this.placeholders.get("default");return this.assets.set(t,r),this.loadingPromises.delete(t),r}else console.warn(`圖片載入失敗: ${t} (${e})，準備重試 (${s+1}/${i+1})`),await new Promise(n=>setTimeout(n,300))}}loadSingleImage(e,t,i){return new Promise((s,a)=>{const n=new Image,r=setTimeout(()=>{a(new Error(`圖片載入超時: ${t}`))},2e3);n.onload=()=>{clearTimeout(r),s(n)},n.onerror=()=>{clearTimeout(r),a(new Error(`圖片載入錯誤: ${t}`))};const h=i>0?`?retry=${i}&t=${Date.now()}`:"";n.src=e+h})}async loadAudio(e,t,i=2){if(this.loadingPromises.has(t))return this.loadingPromises.get(t);if(this.assets.has(t))return this.assets.get(t);const s=this.attemptAudioLoad(e,t,i);return this.loadingPromises.set(t,s),s}async attemptAudioLoad(e,t,i){for(let s=0;s<=i;s++)try{const a=await this.loadSingleAudio(e,t,s);return this.assets.set(t,a),this.loadingPromises.delete(t),console.log(`音效載入成功: ${t} (${e})${s>0?` (重試 ${s} 次)`:""}`),a}catch{if(s===i)return console.warn(`音效載入失敗: ${t} (${e})，已重試 ${i} 次`),this.loadingPromises.delete(t),null;console.warn(`音效載入失敗: ${t} (${e})，準備重試 (${s+1}/${i+1})`),await new Promise(n=>setTimeout(n,500*(s+1)))}}loadSingleAudio(e,t,i){return new Promise((s,a)=>{const n=new Audio,r=setTimeout(()=>{a(new Error(`音效載入超時: ${t}`))},5e3);n.oncanplaythrough=()=>{clearTimeout(r),s(n)},n.onerror=()=>{clearTimeout(r),a(new Error(`音效載入錯誤: ${t}`))};const h=i>0?`?retry=${i}&t=${Date.now()}`:"";n.src=e+h})}getAsset(e){return this.assets.get(e)||this.placeholders.get("default")}hasAsset(e){return this.assets.has(e)}async preloadAssets(e){console.log(`開始預載入 ${e.length} 個資源...`);const t=e.map(i=>{switch(i.type){case"image":return this.loadImage(i.path,i.name);case"audio":return this.loadAudio(i.path,i.name);default:return console.warn(`未知的資源類型: ${i.type}`),Promise.resolve(null)}});try{await Promise.all(t),console.log("所有資源預載入完成")}catch(i){console.error("資源預載入過程中發生錯誤:",i)}}clearAssets(){this.assets.clear(),this.loadingPromises.clear(),console.log("資源已清理")}getLoadingProgress(){const e=this.assets.size+this.loadingPromises.size,t=this.assets.size;return e===0?1:t/e}cleanupUnusedAssets(){const e=this.assets.size;this.loadingPromises.clear(),console.log(`資源清理完成，清理前: ${e} 個資源`)}getMemoryStats(){let e=0,t=0,i=0;return this.assets.forEach((s,a)=>{s instanceof HTMLImageElement?(t++,e+=(s.width||100)*(s.height||100)*4):s instanceof HTMLAudioElement&&(i++,e+=1024*1024)}),{totalAssets:this.assets.size,imageCount:t,audioCount:i,estimatedMemoryUsage:e,loadingPromises:this.loadingPromises.size}}static getAssetPaths(){return{backgrounds:{welcome:"assets/images/backgrounds/welcome_bg.png",selection:"assets/images/backgrounds/selection_bg.png",processing:"assets/images/backgrounds/processing_bg.png",preparation:"assets/images/backgrounds/preparation_bg.png",drying:"assets/images/backgrounds/drying_bg.png",roasting:"assets/images/backgrounds/roasting_bg.png",slicing:"assets/images/backgrounds/slicing_bg.png",completion:"assets/images/backgrounds/completion_bg.png"},ui:{logo:"assets/images/ui/game_logo.png",button_start:"assets/images/ui/button_start.png",button_next:"assets/images/ui/button_next.png",button_retry:"assets/images/ui/button_retry.png",button_settings:"assets/images/ui/button_settings.png",progress_bar:"assets/images/ui/progress_bar.png",star_icon:"assets/images/ui/star_icon.png"},duck:{raw_duck:"assets/images/duck/raw_duck.png",processed_duck:"assets/images/duck/processed_duck.png",prepared_duck:"assets/images/duck/prepared_duck.png",dried_duck:"assets/images/duck/dried_duck.png",roasted_duck:"assets/images/duck/roasted_duck.png",sliced_duck:"assets/images/duck/sliced_duck.png"},tools:{knife:"assets/images/tools/knife.png",scale:"assets/images/tools/scale.png",oven:"assets/images/tools/oven.png",hook:"assets/images/tools/hook.png",brush:"assets/images/tools/brush.png"},sounds:{background_music:"assets/sounds/background_music.mp3",button_click:"assets/sounds/button_click.wav",success_sound:"assets/sounds/success.wav",cooking_sound:"assets/sounds/cooking.wav",completion_sound:"assets/sounds/completion.wav"}}}};window.AssetManager=AssetManager$1;let AudioManager$1=class{constructor(){this.sounds=new Map,this.backgroundMusic=null,this.soundEnabled=!0,this.musicVolume=.7,this.soundVolume=.8,this.isMuted=!1}async loadSound(e,t){try{const i=new Audio(t);return i.preload="auto",new Promise((s,a)=>{i.oncanplaythrough=()=>{this.sounds.set(e,i),console.log(`音效載入成功: ${e}`),s(i)},i.onerror=()=>{console.warn(`音效載入失敗: ${e} (${t})`),s(null)}})}catch(i){return console.error(`載入音效時發生錯誤: ${e}`,i),null}}playSound(e,t=null){if(!this.soundEnabled||this.isMuted)return;const i=this.sounds.get(e);if(i)try{i.currentTime=0,i.volume=t!==null?t:this.soundVolume,i.play().catch(s=>{console.warn(`播放音效失敗: ${e}`,s)})}catch(s){console.warn(`播放音效時發生錯誤: ${e}`,s)}else console.warn(`找不到音效: ${e}`)}playBackgroundMusic(e,t=!0){if(!this.soundEnabled||this.isMuted)return;const i=this.sounds.get(e);if(i)try{this.backgroundMusic&&this.backgroundMusic!==i&&this.stopBackgroundMusic(),this.backgroundMusic=i,i.loop=t,i.volume=this.musicVolume,i.play().catch(s=>{console.warn(`播放背景音樂失敗: ${e}`,s)})}catch(s){console.warn(`播放背景音樂時發生錯誤: ${e}`,s)}else console.warn(`找不到背景音樂: ${e}`)}stopBackgroundMusic(){if(this.backgroundMusic)try{this.backgroundMusic.pause(),this.backgroundMusic.currentTime=0,this.backgroundMusic=null}catch(e){console.warn("停止背景音樂時發生錯誤",e)}}pauseBackgroundMusic(){if(this.backgroundMusic)try{this.backgroundMusic.pause()}catch(e){console.warn("暫停背景音樂時發生錯誤",e)}}resumeBackgroundMusic(){if(this.backgroundMusic&&this.soundEnabled&&!this.isMuted)try{this.backgroundMusic.play().catch(e=>{console.warn("恢復背景音樂失敗",e)})}catch(e){console.warn("恢復背景音樂時發生錯誤",e)}}setSoundEnabled(e){this.soundEnabled=e,e||this.stopBackgroundMusic(),console.log(`音效${e?"開啟":"關閉"}`)}setMuted(e){this.isMuted=e,e?this.pauseBackgroundMusic():this.soundEnabled&&this.resumeBackgroundMusic(),console.log(`遊戲${e?"靜音":"取消靜音"}`)}setMusicVolume(e){this.musicVolume=Math.max(0,Math.min(1,e)),this.backgroundMusic&&(this.backgroundMusic.volume=this.musicVolume)}setSoundVolume(e){this.soundVolume=Math.max(0,Math.min(1,e))}getSoundEnabled(){return this.soundEnabled}getMuted(){return this.isMuted}async preloadSounds(){try{const e=AssetManager.getAssetPaths().sounds,t=[];for(const[n,r]of Object.entries(e))t.push(this.loadSound(n,r));const i=await Promise.allSettled(t);let s=0,a=0;i.forEach((n,r)=>{n.status==="fulfilled"&&n.value?s++:a++}),console.log(`音效預載入完成: ${s} 個成功, ${a} 個失敗`),a>0&&console.warn("部分音效檔案載入失敗，遊戲將繼續運行但可能沒有音效")}catch(e){console.warn("音效預載入過程中發生錯誤，遊戲將以靜音模式運行:",e)}}cleanup(){this.stopBackgroundMusic(),this.sounds.clear(),console.log("音效資源已清理")}cleanupUnusedSounds(){const e=this.sounds.size;this.sounds.forEach((i,s)=>{i&&i.ended&&(this.sounds.delete(s),console.log(`清理已結束的音效: ${s}`))});const t=this.sounds.size;e>t&&console.log(`音效清理完成，清理了 ${e-t} 個音效`)}getAudioStats(){let e=0,t=0;return this.sounds.forEach(i=>{i&&(t++,!i.paused&&!i.ended&&e++)}),{totalSounds:this.sounds.size,loadedSounds:t,playingSounds:e,backgroundMusicPlaying:this.backgroundMusic&&!this.backgroundMusic.paused,soundEnabled:this.soundEnabled,isMuted:this.isMuted}}};window.AudioManager=AudioManager$1;let ProgressManager$1=class{constructor(){this.storageKey="beijing_duck_game_progress",this.currentProgress=this.getDefaultProgress(),this.visualFeedback=null,this.onScoreChange=null,this.onStepComplete=null,this.onAchievementUnlock=null,this.loadProgress()}getDefaultProgress(){return{currentScene:"welcome",progress:{selection:!1,processing:!1,preparation:!1,drying:!1,roasting:!1,slicing:!1},score:0,completedSteps:[],settings:{soundEnabled:!0,language:"zh-TW"},statistics:{totalPlayTime:0,gamesCompleted:0,bestScore:0,lastPlayDate:null},achievements:[],gameCompleted:!1,completionDate:null}}saveProgress(e=null){return console.log("進度保存已禁用 - 每次重新整理將重新開始遊戲"),!0}loadProgress(){console.log("進度載入已禁用 - 使用預設進度"),this.currentProgress=this.getDefaultProgress()}resetProgress(){this.currentProgress=this.getDefaultProgress(),this.saveProgress(),console.log("遊戲進度已重置")}setVisualFeedback(e){this.visualFeedback=e}setEventCallbacks(e){this.onScoreChange=e.onScoreChange||null,this.onStepComplete=e.onStepComplete||null,this.onAchievementUnlock=e.onAchievementUnlock||null}completeStep(e,t=400,i=300){this.currentProgress.completedSteps.includes(e)||(this.currentProgress.completedSteps.push(e),this.currentProgress.progress.hasOwnProperty(e)&&(this.currentProgress.progress[e]=!0),this.addScore(100,t,i,"bonus"),this.visualFeedback&&(this.visualFeedback.createCompletionCelebration(t,i),this.visualFeedback.createStarReward(t,i,3)),this.onStepComplete&&this.onStepComplete(e,this.getCompletionPercentage()),this.saveProgress(),console.log(`步驟完成: ${e}`))}addScore(e,t=400,i=300,s="normal"){const a=this.currentProgress.score;this.currentProgress.score+=e,this.currentProgress.score>this.currentProgress.statistics.bestScore&&(this.currentProgress.statistics.bestScore=this.currentProgress.score),this.visualFeedback&&this.visualFeedback.createScorePopup(t,i,e,s),this.onScoreChange&&this.onScoreChange(a,this.currentProgress.score,e),console.log(`分數增加: +${e}, 總分: ${this.currentProgress.score}`)}setCurrentScene(e){this.currentProgress.currentScene=e,this.saveProgress()}getCurrentProgress(){return{...this.currentProgress}}getCompletionPercentage(){const e=Object.keys(this.currentProgress.progress).length,t=Object.values(this.currentProgress.progress).filter(Boolean).length;return e>0?t/e*100:0}isStepCompleted(e){return this.currentProgress.completedSteps.includes(e)||this.currentProgress.progress[e]===!0}canEnterScene(e){const t=["welcome","selection","processing","preparation","drying","roasting","slicing","completion"],i=t.indexOf(this.currentProgress.currentScene);return t.indexOf(e)<=i+1}completeGame(){return this.currentProgress.statistics.gamesCompleted++,this.currentProgress.currentScene="completion",this.currentProgress.gameCompleted=!0,this.currentProgress.completionDate=new Date().toISOString(),this.checkAchievements(),this.saveProgress(),console.log("遊戲完成！"),{finalScore:this.currentProgress.score,completionPercentage:this.getCompletionPercentage(),newAchievements:this.getLatestAchievements(),statistics:this.getStatistics()}}getLatestAchievements(){return this.currentProgress.achievements.slice(-3)}isGameCompleted(){return this.currentProgress.gameCompleted===!0}startNewGame(){const e={...this.currentProgress.statistics},t=[...this.currentProgress.achievements],i={...this.currentProgress.settings};return this.currentProgress=this.getDefaultProgress(),this.currentProgress.statistics=e,this.currentProgress.achievements=t,this.currentProgress.settings=i,this.currentProgress.gameCompleted=!1,this.currentProgress.completionDate=null,this.saveProgress(),console.log("開始新遊戲"),this.currentProgress}checkAchievements(){const e=[];return this.currentProgress.statistics.gamesCompleted===1&&!this.currentProgress.achievements.includes("first_completion")&&e.push({id:"first_completion",name:"初次完成",description:"第一次完成北京烤鴨製作"}),this.currentProgress.score>=1e3&&!this.currentProgress.achievements.includes("high_score")&&e.push({id:"high_score",name:"高分達人",description:"獲得1000分以上"}),this.currentProgress.score>=1500&&!this.currentProgress.achievements.includes("perfect_score")&&e.push({id:"perfect_score",name:"完美大師",description:"獲得1500分以上的完美分數"}),this.currentProgress.statistics.gamesCompleted>=5&&!this.currentProgress.achievements.includes("dedicated_player")&&e.push({id:"dedicated_player",name:"專注玩家",description:"完成5次遊戲"}),e.forEach(t=>{this.currentProgress.achievements.push(t.id),this.visualFeedback&&(this.visualFeedback.createCompletionCelebration(400,200),this.visualFeedback.createStarReward(400,200,5)),this.onAchievementUnlock&&this.onAchievementUnlock(t),console.log(`獲得成就: ${t.name} - ${t.description}`)}),e}updatePlayTime(e){this.currentProgress.statistics.totalPlayTime+=e}updateSettings(e){this.currentProgress.settings={...this.currentProgress.settings,...e},this.saveProgress()}getStatistics(){return{...this.currentProgress.statistics}}getAchievements(){return[...this.currentProgress.achievements]}isStorageAvailable(){try{const e="__storage_test__";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch{return!1}}exportProgress(){return JSON.stringify(this.currentProgress,null,2)}importProgress(e){try{const t=JSON.parse(e);if(t&&typeof t=="object")return this.currentProgress={...this.getDefaultProgress(),...t},this.saveProgress(),console.log("進度資料匯入成功"),!0;throw new Error("無效的進度資料格式")}catch(t){return console.error("匯入進度資料失敗:",t),!1}}getLatestAchievements(){return this.currentProgress.achievements.slice(-3)}isGameCompleted(){return this.currentProgress.gameCompleted===!0}startNewGame(){const e={...this.currentProgress.statistics},t=[...this.currentProgress.achievements],i={...this.currentProgress.settings};return this.currentProgress=this.getDefaultProgress(),this.currentProgress.statistics=e,this.currentProgress.achievements=t,this.currentProgress.settings=i,this.currentProgress.gameCompleted=!1,this.currentProgress.completionDate=null,this.saveProgress(),console.log("開始新遊戲"),this.currentProgress}clearAllProgress(){try{return localStorage.removeItem(this.storageKey),this.currentProgress=this.getDefaultProgress(),console.log("所有進度資料已清除"),!0}catch(e){return console.error("清除進度資料失敗:",e),!1}}backupProgress(){const e=`${this.storageKey}_backup_${Date.now()}`;try{return localStorage.setItem(e,JSON.stringify(this.currentProgress)),console.log(`進度已備份到: ${e}`),e}catch(t){return console.error("備份進度失敗:",t),null}}restoreBackup(e){try{const t=localStorage.getItem(e);if(t){const i=JSON.parse(t);return this.currentProgress={...this.getDefaultProgress(),...i},this.saveProgress(),console.log("進度已從備份恢復"),!0}else return console.error("找不到指定的備份"),!1}catch(t){return console.error("恢復備份失敗:",t),!1}}getBackupList(){const e=[],t=`${this.storageKey}_backup_`;try{for(let i=0;i<localStorage.length;i++){const s=localStorage.key(i);if(s&&s.startsWith(t)){const a=s.replace(t,""),n=new Date(parseInt(a));e.push({key:s,date:n.toLocaleString(),timestamp:a})}}return e.sort((i,s)=>parseInt(s.timestamp)-parseInt(i.timestamp)),e}catch(i){return console.error("獲取備份列表失敗:",i),[]}}cleanupOldBackups(){try{const e=this.getBackupList(),t=5;e.length>t&&e.slice(t).forEach(a=>{localStorage.removeItem(a.key),console.log(`已刪除舊備份: ${a.key}`)});const i=Date.now()-30*24*60*60*1e3;e.forEach(s=>{parseInt(s.timestamp)<i&&(localStorage.removeItem(s.key),console.log(`已刪除過期備份: ${s.key}`))})}catch(e){console.error("清理備份失敗:",e)}}getStorageUsage(){try{let e=0,t=0;for(let i=0;i<localStorage.length;i++){const s=localStorage.key(i);if(s){const a=localStorage.getItem(s),n=new Blob([a]).size;e+=n,s.startsWith(this.storageKey)&&(t+=n)}}return{totalSize:e,gameDataSize:t,totalSizeFormatted:this.formatBytes(e),gameDataSizeFormatted:this.formatBytes(t)}}catch(e){return console.error("獲取存儲使用情況失敗:",e),null}}formatBytes(e){if(e===0)return"0 Bytes";const t=1024,i=["Bytes","KB","MB","GB"],s=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,s)).toFixed(2))+" "+i[s]}};window.ProgressManager=ProgressManager$1;let UIManager$1=class{constructor(){this.uiElements=[],this.overlayElement=null,this.canvas=null,this.context=null,this.feedbackEffects=[],this.animations=[],this.chineseFonts=["Microsoft JhengHei","PingFang TC","Heiti TC","LiHei Pro","Microsoft YaHei","SimHei","Arial Unicode MS","sans-serif"],this.defaultFontFamily=this.chineseFonts.join(", "),this.initializeOverlay(),this.setupFontPreloading()}initializeOverlay(){this.overlayElement=document.getElementById("uiOverlay"),this.overlayElement||console.warn("找不到UI覆蓋層元素")}setupFontPreloading(){const e=document.createElement("div");e.style.position="absolute",e.style.left="-9999px",e.style.fontFamily=this.defaultFontFamily,e.innerHTML="測試繁體中文字體載入 Test Chinese Font Loading",document.body.appendChild(e),setTimeout(()=>{document.body.removeChild(e)},100)}setCanvas(e,t){this.canvas=e,this.context=t}createButton(e){const t=new UIButton({x:e.x||0,y:e.y||0,width:e.width||120,height:e.height||40,text:e.text||"按鈕",onClick:e.onClick||(()=>{}),style:e.style||"default"});return this.addUIElement(t),t}createLabel(e){const t=new UILabel({x:e.x||0,y:e.y||0,text:e.text||"",fontSize:e.fontSize||16,color:e.color||"#000000",align:e.align||"left"});return this.addUIElement(t),t}createProgressBar(e){const t=new UIProgressBar({x:e.x||0,y:e.y||0,width:e.width||200,height:e.height||20,progress:e.progress||0,color:e.color||"#32CD32"});return this.addUIElement(t),t}addUIElement(e){this.uiElements.push(e)}removeUIElement(e){const t=this.uiElements.indexOf(e);t>-1&&this.uiElements.splice(t,1)}clearUIElements(){this.uiElements=[]}createFeedbackEffect(e,t,i="click"){const s=new UIFeedbackEffect({x:e,y:t,type:i,duration:500});return this.feedbackEffects.push(s),s}createAnimation(e,t,i,s="easeOut"){const a=new UIAnimation({target:e,properties:t,duration:i,easing:s});return this.animations.push(a),a}measureChineseText(e,t=16){if(!this.context)return{width:0,height:t};const i=this.context.font;this.context.font=`${t}px ${this.defaultFontFamily}`;const a=this.context.measureText(e).width,n=t*1.2;return this.context.font=i,{width:a,height:n}}renderChineseText(e,t,i,s,a,n=16,r="#000000",h="left"){e.save(),e.fillStyle=r,e.font=`${n}px ${this.defaultFontFamily}`,e.textAlign=h,e.textBaseline="top";const o=this.wrapChineseText(t,a,n),c=n*1.4;return o.forEach((g,u)=>{e.fillText(g,i,s+u*c)}),e.restore(),o.length*c}wrapChineseText(e,t,i){if(!this.context||!t)return[e];const s=this.context.font;this.context.font=`${i}px ${this.defaultFontFamily}`;const a=[],n=e.split("");let r="";for(let h=0;h<n.length;h++){const o=r+n[h];this.context.measureText(o).width>t&&r!==""?(a.push(r),r=n[h]):r=o}return r&&a.push(r),this.context.font=s,a}update(e){this.uiElements.forEach(t=>{t.update&&t.update(e)}),this.feedbackEffects=this.feedbackEffects.filter(t=>(t.update(e),!t.isFinished())),this.animations=this.animations.filter(t=>(t.update(e),!t.isFinished()))}render(e){this.uiElements.forEach(t=>{t.render&&t.visible!==!1&&t.render(e)}),this.feedbackEffects.forEach(t=>{t.render(e)})}handleInput(e){e.type==="click"&&this.createFeedbackEffect(e.x,e.y,"click");for(let t=this.uiElements.length-1;t>=0;t--){const i=this.uiElements[t];if(i.handleInput&&i.handleInput(e))return e.type==="click"&&i.x!==void 0&&i.y!==void 0&&this.createFeedbackEffect(i.x+i.width/2,i.y+i.height/2,"success"),!0}return!1}};class UIButton{constructor(e){this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height,this.text=e.text,this.onClick=e.onClick,this.style=e.style||"default",this.isHovered=!1,this.isPressed=!1,this.visible=!0,this.enabled=!0,this.scale=1,this.targetScale=1,this.animationSpeed=.1,this.onHover=e.onHover||null,this.onPress=e.onPress||null}update(e){Math.abs(this.scale-this.targetScale)>.01?this.scale+=(this.targetScale-this.scale)*this.animationSpeed:this.scale=this.targetScale}render(e){if(!this.visible)return;e.save();const t=this.x+this.width/2,i=this.y+this.height/2;e.translate(t,i),e.scale(this.scale,this.scale),e.translate(-t,-i);let s="#3b82f6",a="#ffffff",n=8,r="rgba(59, 130, 246, 0.3)";this.enabled?this.isPressed?(s="#2563eb",n=4):this.isHovered&&(s="#60a5fa",n=12,r="rgba(59, 130, 246, 0.5)"):(s="#cbd5e0",a="#718096",r="rgba(0, 0, 0, 0.1)",n=4),this.enabled&&!this.isPressed&&(e.shadowColor=r,e.shadowBlur=n,e.shadowOffsetX=0,e.shadowOffsetY=4);const h=10;e.fillStyle=s,e.beginPath(),e.roundRect(this.x,this.y,this.width,this.height,h),e.fill(),e.shadowColor="transparent",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0,e.fillStyle=a,e.font="bold 16px Microsoft JhengHei, PingFang TC, Heiti TC, sans-serif",e.textAlign="center",e.textBaseline="middle";const o=this.text.split(`
`),c=18,g=o.length*c,u=this.y+this.height/2-g/2+c/2;o.forEach((d,m)=>{e.fillText(d,this.x+this.width/2,u+m*c)}),e.restore()}handleInput(e){if(!this.visible||!this.enabled)return!1;const t=e.x>=this.x&&e.x<=this.x+this.width&&e.y>=this.y&&e.y<=this.y+this.height;if(e.type==="click"&&t)return this.isPressed=!0,this.targetScale=.95,this.onPress&&this.onPress(),setTimeout(()=>{this.isPressed=!1,this.targetScale=1,this.onClick()},100),!0;if(e.type==="mousemove"||e.type==="hover"){const i=this.isHovered;this.isHovered=t,this.isHovered&&!i?(this.targetScale=1.05,this.onHover&&this.onHover()):!this.isHovered&&i&&(this.targetScale=1)}return!1}setText(e){this.text=e}setEnabled(e){this.enabled=e}setVisible(e){this.visible=e}}class UILabel{constructor(e){this.x=e.x,this.y=e.y,this.text=e.text,this.fontSize=e.fontSize||16,this.color=e.color||"#000000",this.align=e.align||"left",this.visible=!0}render(e){if(!this.visible)return;e.fillStyle=this.color,e.font=`${this.fontSize}px Microsoft JhengHei, PingFang TC, Heiti TC, sans-serif`,e.textAlign=this.align,e.textBaseline="top";const t=this.text.split(`
`),i=this.fontSize*1.4;t.forEach((s,a)=>{e.fillText(s,this.x,this.y+a*i)})}setText(e){this.text=e}setColor(e){this.color=e}setVisible(e){this.visible=e}}class UIProgressBar{constructor(e){this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height,this.progress=e.progress||0,this.color=e.color||"#32CD32",this.backgroundColor=e.backgroundColor||"#CCCCCC",this.borderColor=e.borderColor||"#999999",this.visible=!0}render(e){if(!this.visible)return;e.fillStyle=this.backgroundColor,e.fillRect(this.x,this.y,this.width,this.height);const t=this.width*Math.max(0,Math.min(1,this.progress));e.fillStyle=this.color,e.fillRect(this.x,this.y,t,this.height),e.strokeStyle=this.borderColor,e.lineWidth=1,e.strokeRect(this.x,this.y,this.width,this.height)}setProgress(e){this.progress=Math.max(0,Math.min(1,e))}setVisible(e){this.visible=e}}class UIFeedbackEffect{constructor(e){this.x=e.x,this.y=e.y,this.type=e.type||"click",this.duration=e.duration||500,this.elapsed=0,this.finished=!1,this.radius=0,this.maxRadius=30,this.alpha=1,this.color=this.getEffectColor()}getEffectColor(){switch(this.type){case"click":return"#FFD700";case"success":return"#32CD32";case"error":return"#FF6B6B";default:return"#87CEEB"}}update(e){if(this.finished)return;this.elapsed+=e;const t=this.elapsed/this.duration;if(t>=1){this.finished=!0;return}this.radius=this.maxRadius*t,this.alpha=1-t}render(e){this.finished||this.alpha<=0||(e.save(),e.globalAlpha=this.alpha,e.strokeStyle=this.color,e.lineWidth=3,e.beginPath(),e.arc(this.x,this.y,this.radius,0,Math.PI*2),e.stroke(),this.type==="success"&&(e.fillStyle=this.color,e.beginPath(),e.arc(this.x,this.y,3,0,Math.PI*2),e.fill()),e.restore())}isFinished(){return this.finished}}class UIAnimation{constructor(e){this.target=e.target,this.properties=e.properties,this.duration=e.duration,this.easing=e.easing||"easeOut",this.elapsed=0,this.finished=!1,this.startValues={};for(const t in this.properties)this.startValues[t]=this.target[t]||0}applyEasing(e){switch(this.easing){case"linear":return e;case"easeIn":return e*e;case"easeOut":return 1-(1-e)*(1-e);case"easeInOut":return e<.5?2*e*e:1-Math.pow(-2*e+2,2)/2;default:return 1-(1-e)*(1-e)}}update(e){if(this.finished)return;this.elapsed+=e;let t=this.elapsed/this.duration;t>=1&&(t=1,this.finished=!0);const i=this.applyEasing(t);for(const s in this.properties){const a=this.startValues[s],n=this.properties[s];this.target[s]=a+(n-a)*i}}isFinished(){return this.finished}}class UIUtils{static isPointInRect(e,t,i){return e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height}static isPointInCircle(e,t,i){const s=e-i.x,a=t-i.y;return s*s+a*a<=i.radius*i.radius}static lerp(e,t,i){return e+(t-e)*i}static clamp(e,t,i){return Math.min(Math.max(e,t),i)}static formatChineseNumber(e){const t=["零","一","二","三","四","五","六","七","八","九"];if(e===0)return"零";if(e<10)return t[e];if(e<100){const i=Math.floor(e/10),s=e%10;return i===1?"十"+(s>0?t[s]:""):t[i]+"十"+(s>0?t[s]:"")}return e.toString()}static measureChineseText(e,t,i){const s=e.font;e.font=`${i}px Microsoft JhengHei, PingFang TC, sans-serif`;const n=e.measureText(t).width,r=i*1.2;return e.font=s,{width:n,height:r}}createDismissibleMessage(e={}){const{text:t="",x:i=this.canvas?this.canvas.width/2:400,y:s=this.canvas?this.canvas.height/2-50:250,fontSize:a=18,color:n="#32CD32",buttonText:r="繼續",onDismiss:h=null,autoDismissTime:o=0}=e,c={label:null,button:null,autoDismissTimer:null},g=()=>{c.autoDismissTimer&&clearTimeout(c.autoDismissTimer),c.label&&this.removeUIElement(c.label),c.button&&this.removeUIElement(c.button),h&&h()};return c.label=this.createLabel({x:i,y:s,text:t,fontSize:a,color:n,align:"center"}),c.button=this.createButton({x:i-40,y:s+60,width:80,height:35,text:r,onClick:g}),o>0&&(c.autoDismissTimer=setTimeout(g,o)),c}}window.UIManager=UIManager$1;window.UIButton=UIButton;window.UILabel=UILabel;window.UIProgressBar=UIProgressBar;window.UIFeedbackEffect=UIFeedbackEffect;window.UIAnimation=UIAnimation;window.UIUtils=UIUtils;let VisualFeedbackManager$1=class{constructor(){this.feedbackElements=[],this.transitionEffects=[],this.scoreAnimations=[],this.rewardEffects=[],this.lowPerformanceMode=!1,this.config={scorePopDuration:1e3,rewardDuration:2e3,transitionDuration:1500,starAnimationDuration:800},this.lowPerformanceConfig={scorePopDuration:500,rewardDuration:1e3,transitionDuration:750,starAnimationDuration:400}}createScorePopup(e,t,i,s="normal"){const a=new ScorePopup({x:e,y:t,points:i,type:s,duration:this.config.scorePopDuration});return this.scoreAnimations.push(a),a}createStarReward(e,t,i=3){for(let s=0;s<i;s++){const a=new StarReward({x:e+(Math.random()-.5)*100,y:t+(Math.random()-.5)*50,delay:s*200,duration:this.config.starAnimationDuration});this.rewardEffects.push(a)}}createCompletionCelebration(e,t){for(let s=0;s<8;s++){const a=s/8*Math.PI*2,n=new ConfettiEffect({x:e,y:t,angle:a,speed:150+Math.random()*100,duration:2e3});this.rewardEffects.push(n)}const i=new CompletionText({x:e,y:t-50,text:"步驟完成！",duration:1500});this.feedbackElements.push(i)}createSceneTransition(e="fade",t=null){const i=t||this.config.transitionDuration;let s;switch(e){case"slide":s=new SlideTransition({duration:i});break;case"wipe":s=new WipeTransition({duration:i});break;case"fade":default:s=new FadeTransition({duration:i});break}return this.transitionEffects.push(s),s}createProgressAnimation(e,t,i=1e3){const s=new ProgressAnimation({target:e,startProgress:e.progress,targetProgress:t,duration:i});return this.feedbackElements.push(s),s}update(e){this.lowPerformanceMode&&this.limitEffects(),this.scoreAnimations=this.scoreAnimations.filter(t=>(t.update(e),!t.isFinished())),this.rewardEffects=this.rewardEffects.filter(t=>(t.update(e),!t.isFinished())),this.feedbackElements=this.feedbackElements.filter(t=>(t.update(e),!t.isFinished())),this.transitionEffects=this.transitionEffects.filter(t=>(t.update(e),!t.isFinished()))}render(e){this.scoreAnimations.forEach(t=>{t.render(e)}),this.rewardEffects.forEach(t=>{t.render(e)}),this.feedbackElements.forEach(t=>{t.render(e)}),this.transitionEffects.forEach(t=>{t.render(e)})}clearAllEffects(){this.feedbackElements=[],this.transitionEffects=[],this.scoreAnimations=[],this.rewardEffects=[]}hasActiveTransition(){return this.transitionEffects.length>0}setLowPerformanceMode(e){this.lowPerformanceMode=e,e?(this.config={...this.lowPerformanceConfig},this.maxEffects=5,console.log("視覺反饋系統：低效能模式已啟用")):(this.config={scorePopDuration:1e3,rewardDuration:2e3,transitionDuration:1500,starAnimationDuration:800},this.maxEffects=20,console.log("視覺反饋系統：正常模式已啟用"))}limitEffects(){this.maxEffects&&(this.scoreAnimations.length>this.maxEffects&&(this.scoreAnimations=this.scoreAnimations.slice(-this.maxEffects)),this.rewardEffects.length>this.maxEffects&&(this.rewardEffects=this.rewardEffects.slice(-this.maxEffects)),this.feedbackElements.length>this.maxEffects&&(this.feedbackElements=this.feedbackElements.slice(-this.maxEffects)))}getPerformanceStats(){return{lowPerformanceMode:this.lowPerformanceMode,activeEffects:{scoreAnimations:this.scoreAnimations.length,rewardEffects:this.rewardEffects.length,feedbackElements:this.feedbackElements.length,transitionEffects:this.transitionEffects.length},totalActiveEffects:this.scoreAnimations.length+this.rewardEffects.length+this.feedbackElements.length+this.transitionEffects.length}}};class ScorePopup{constructor(e){this.x=e.x,this.y=e.y,this.startY=e.y,this.points=e.points,this.type=e.type||"normal",this.duration=e.duration,this.elapsed=0,this.finished=!1,this.alpha=1,this.scale=1,this.color=this.getTypeColor()}getTypeColor(){switch(this.type){case"bonus":return"#FFD700";case"perfect":return"#FF69B4";case"combo":return"#32CD32";default:return"#FFA500"}}update(e){if(this.finished)return;this.elapsed+=e;const t=this.elapsed/this.duration;if(t>=1){this.finished=!0;return}this.y=this.startY-t*80,this.alpha=1-t,t<.2?this.scale=1+t*2:this.scale=1.4-(t-.2)*.5}render(e){if(this.finished||this.alpha<=0)return;e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.scale(this.scale,this.scale),e.fillStyle=this.color,e.strokeStyle="#000000",e.lineWidth=2,e.font="bold 24px Microsoft JhengHei, sans-serif",e.textAlign="center",e.textBaseline="middle";const t=`+${this.points}`;e.strokeText(t,0,0),e.fillText(t,0,0),e.restore()}isFinished(){return this.finished}}class StarReward{constructor(e){this.x=e.x,this.y=e.y,this.startY=e.y,this.delay=e.delay||0,this.duration=e.duration,this.elapsed=0,this.finished=!1,this.started=!1,this.rotation=0,this.scale=0,this.alpha=1}update(e){if(this.finished||(this.elapsed+=e,this.elapsed<this.delay))return;this.started||(this.started=!0,this.elapsed=0);const t=this.elapsed/this.duration;if(t>=1){this.finished=!0;return}this.rotation+=e*.01,t<.3?this.scale=t/.3:t>.7?this.scale=1-(t-.7)/.3:this.scale=1,this.y=this.startY-t*60,this.alpha=1-Math.max(0,(t-.5)*2)}render(e){this.finished||!this.started||this.alpha<=0||(e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.scale(this.scale,this.scale),this.drawStar(e,0,0,15,5),e.restore())}drawStar(e,t,i,s,a){const r=Math.PI/5;e.beginPath(),e.moveTo(t,i-s);for(let h=0;h<5;h++){const o=h*r*2;e.lineTo(t+Math.cos(o-Math.PI/2)*s,i+Math.sin(o-Math.PI/2)*s),e.lineTo(t+Math.cos(o-Math.PI/2+r)*a,i+Math.sin(o-Math.PI/2+r)*a)}e.closePath(),e.fillStyle="#FFD700",e.strokeStyle="#FFA500",e.lineWidth=2,e.fill(),e.stroke()}isFinished(){return this.finished}}class ConfettiEffect{constructor(e){this.x=e.x,this.y=e.y,this.angle=e.angle,this.speed=e.speed,this.duration=e.duration,this.elapsed=0,this.finished=!1,this.vx=Math.cos(this.angle)*this.speed,this.vy=Math.sin(this.angle)*this.speed,this.gravity=300,this.rotation=0,this.rotationSpeed=(Math.random()-.5)*.02,this.color=this.getRandomColor(),this.width=8,this.height=4,this.alpha=1}getRandomColor(){const e=["#FF6B6B","#4ECDC4","#45B7D1","#96CEB4","#FFEAA7","#DDA0DD"];return e[Math.floor(Math.random()*e.length)]}update(e){if(this.finished)return;this.elapsed+=e;const t=this.elapsed/this.duration;if(t>=1){this.finished=!0;return}const i=e/1e3;this.x+=this.vx*i,this.y+=this.vy*i,this.vy+=this.gravity*i,this.rotation+=this.rotationSpeed*e,this.alpha=1-Math.max(0,(t-.5)*2)}render(e){this.finished||this.alpha<=0||(e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.rotate(this.rotation),e.fillStyle=this.color,e.fillRect(-this.width/2,-this.height/2,this.width,this.height),e.restore())}isFinished(){return this.finished}}class CompletionText{constructor(e){this.x=e.x,this.y=e.y,this.text=e.text,this.duration=e.duration,this.elapsed=0,this.finished=!1,this.scale=0,this.alpha=1}update(e){if(this.finished)return;this.elapsed+=e;const t=this.elapsed/this.duration;if(t>=1){this.finished=!0;return}t<.3?this.scale=t/.3:t>.7?this.scale=1-(t-.7)/.3*.5:this.scale=1,t>.6&&(this.alpha=1-(t-.6)/.4)}render(e){this.finished||this.alpha<=0||(e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y),e.scale(this.scale,this.scale),e.fillStyle="#32CD32",e.strokeStyle="#228B22",e.lineWidth=3,e.font="bold 32px Microsoft JhengHei, sans-serif",e.textAlign="center",e.textBaseline="middle",e.strokeText(this.text,0,0),e.fillText(this.text,0,0),e.restore())}isFinished(){return this.finished}}class ProgressAnimation{constructor(e){this.target=e.target,this.startProgress=e.startProgress,this.targetProgress=e.targetProgress,this.duration=e.duration,this.elapsed=0,this.finished=!1,this.currentProgress=this.startProgress}update(e){if(this.finished)return;this.elapsed+=e;const t=Math.min(this.elapsed/this.duration,1);if(t>=1)this.finished=!0,this.currentProgress=this.targetProgress;else{const i=this.easeOutCubic(t);this.currentProgress=this.startProgress+(this.targetProgress-this.startProgress)*i}this.target&&this.target.setProgress&&this.target.setProgress(this.currentProgress)}easeOutCubic(e){return 1-Math.pow(1-e,3)}render(e){}isFinished(){return this.finished}}let AchievementNotification$1=class{constructor(e){this.achievement=e.achievement,this.x=e.x||400,this.y=e.y||100,this.duration=e.duration||3e3,this.elapsed=0,this.finished=!1,this.scale=0,this.alpha=1,this.offsetY=0}update(e){if(this.finished)return;this.elapsed+=e;const t=this.elapsed/this.duration;if(t>=1){this.finished=!0;return}t<.2?this.scale=t/.2:t>.8?this.scale=1-(t-.8)/.2*.3:this.scale=1,this.offsetY=-t*30,t>.7&&(this.alpha=1-(t-.7)/.3)}render(e){if(this.finished||this.alpha<=0)return;e.save(),e.globalAlpha=this.alpha,e.translate(this.x,this.y+this.offsetY),e.scale(this.scale,this.scale);const t=300,i=80;e.fillStyle="rgba(255, 215, 0, 0.9)",e.strokeStyle="#FF8C00",e.lineWidth=3,e.fillRect(-t/2,-i/2,t,i),e.strokeRect(-t/2,-i/2,t,i),e.fillStyle="#FFD700",e.beginPath(),e.arc(-t/2+30,0,20,0,Math.PI*2),e.fill(),e.strokeStyle="#FFA500",e.stroke(),e.fillStyle="#8B4513",e.font="bold 16px Microsoft JhengHei, sans-serif",e.textAlign="left",e.textBaseline="top",e.fillText("成就解鎖！",-t/2+60,-25),e.font="14px Microsoft JhengHei, sans-serif",e.fillText(this.achievement.name,-t/2+60,-5),e.fillText(this.achievement.description,-t/2+60,15),e.restore()}isFinished(){return this.finished}};window.VisualFeedbackManager=VisualFeedbackManager$1;window.ScorePopup=ScorePopup;window.StarReward=StarReward;window.ConfettiEffect=ConfettiEffect;window.CompletionText=CompletionText;window.ProgressAnimation=ProgressAnimation;window.AchievementNotification=AchievementNotification$1;let FadeTransition$1=class{constructor(e){this.duration=e.duration||1e3,this.elapsed=0,this.finished=!1,this.phase="fadeOut",this.alpha=0,this.onMidpoint=e.onMidpoint||null,this.midpointCalled=!1}update(e){if(this.finished)return;this.elapsed+=e;const t=this.duration/2;if(this.phase==="fadeOut"){const i=Math.min(this.elapsed/t,1);this.alpha=i,i>=1&&(this.phase="fadeIn",this.elapsed=0,this.onMidpoint&&!this.midpointCalled&&(this.onMidpoint(),this.midpointCalled=!0))}else if(this.phase==="fadeIn"){const i=Math.min(this.elapsed/t,1);this.alpha=1-i,i>=1&&(this.finished=!0)}}render(e){this.alpha<=0||(e.save(),e.globalAlpha=this.alpha,e.fillStyle="#000000",e.fillRect(0,0,e.canvas.width,e.canvas.height),e.restore())}isFinished(){return this.finished}setMidpointCallback(e){this.onMidpoint=e}},SlideTransition$1=class{constructor(e){this.duration=e.duration||1e3,this.direction=e.direction||"left",this.elapsed=0,this.finished=!1,this.phase="slideOut",this.offset=0,this.onMidpoint=e.onMidpoint||null,this.midpointCalled=!1,this.canvasWidth=800,this.canvasHeight=600}update(e){if(this.finished)return;this.elapsed+=e;const t=this.duration/2;if(this.phase==="slideOut"){const i=Math.min(this.elapsed/t,1);this.offset=this.getOffsetForProgress(i),i>=1&&(this.phase="slideIn",this.elapsed=0,this.onMidpoint&&!this.midpointCalled&&(this.onMidpoint(),this.midpointCalled=!0))}else if(this.phase==="slideIn"){const i=Math.min(this.elapsed/t,1);this.offset=this.getOffsetForProgress(1-i),i>=1&&(this.finished=!0)}}getOffsetForProgress(e){const t=this.easeInOutCubic(e);switch(this.direction){case"left":return-this.canvasWidth*t;case"right":return this.canvasWidth*t;case"up":return-this.canvasHeight*t;case"down":return this.canvasHeight*t;default:return 0}}easeInOutCubic(e){return e<.5?4*e*e*e:1-Math.pow(-2*e+2,3)/2}render(e){if(this.offset!==0){if(e.save(),e.fillStyle="#2C3E50",this.direction==="left"||this.direction==="right"){const t=this.direction==="left"?this.canvasWidth+this.offset:this.offset;e.fillRect(t,0,this.canvasWidth,this.canvasHeight)}else{const t=this.direction==="up"?this.canvasHeight+this.offset:this.offset;e.fillRect(0,t,this.canvasWidth,this.canvasHeight)}e.restore()}}isFinished(){return this.finished}setMidpointCallback(e){this.onMidpoint=e}},WipeTransition$1=class{constructor(e){this.duration=e.duration||1e3,this.direction=e.direction||"horizontal",this.elapsed=0,this.finished=!1,this.phase="wipeOut",this.progress=0,this.onMidpoint=e.onMidpoint||null,this.midpointCalled=!1,this.canvasWidth=800,this.canvasHeight=600}update(e){if(this.finished)return;this.elapsed+=e;const t=this.duration/2;if(this.phase==="wipeOut")this.progress=Math.min(this.elapsed/t,1),this.progress>=1&&(this.phase="wipeIn",this.elapsed=0,this.onMidpoint&&!this.midpointCalled&&(this.onMidpoint(),this.midpointCalled=!0));else if(this.phase==="wipeIn"){const i=Math.min(this.elapsed/t,1);this.progress=1-i,i>=1&&(this.finished=!0)}}render(e){if(!(this.progress<=0)){switch(e.save(),e.fillStyle="#34495E",this.direction){case"horizontal":const t=this.canvasWidth*this.progress;e.fillRect(0,0,t,this.canvasHeight);break;case"vertical":const i=this.canvasHeight*this.progress;e.fillRect(0,0,this.canvasWidth,i);break;case"circular":const s=this.canvasWidth/2,a=this.canvasHeight/2,r=Math.sqrt(s*s+a*a)*this.progress;e.beginPath(),e.arc(s,a,r,0,Math.PI*2),e.fill();break}e.restore()}}isFinished(){return this.finished}setMidpointCallback(e){this.onMidpoint=e}};class BlindsTransition{constructor(e){this.duration=e.duration||1e3,this.blindCount=e.blindCount||8,this.direction=e.direction||"horizontal",this.elapsed=0,this.finished=!1,this.phase="close",this.progress=0,this.onMidpoint=e.onMidpoint||null,this.midpointCalled=!1,this.canvasWidth=800,this.canvasHeight=600}update(e){if(this.finished)return;this.elapsed+=e;const t=this.duration/2;if(this.phase==="close")this.progress=Math.min(this.elapsed/t,1),this.progress>=1&&(this.phase="open",this.elapsed=0,this.onMidpoint&&!this.midpointCalled&&(this.onMidpoint(),this.midpointCalled=!0));else if(this.phase==="open"){const i=Math.min(this.elapsed/t,1);this.progress=1-i,i>=1&&(this.finished=!0)}}render(e){if(!(this.progress<=0)){if(e.save(),e.fillStyle="#2C3E50",this.direction==="horizontal"){const t=this.canvasHeight/this.blindCount;this.canvasWidth*this.progress;for(let i=0;i<this.blindCount;i++){const s=i*t,a=i%2*.1,n=Math.max(0,Math.min(1,this.progress+a)),r=this.canvasWidth*n;e.fillRect(0,s,r,t)}}else{const t=this.canvasWidth/this.blindCount;for(let i=0;i<this.blindCount;i++){const s=i*t,a=i%2*.1,n=Math.max(0,Math.min(1,this.progress+a)),r=this.canvasHeight*n;e.fillRect(s,0,t,r)}}e.restore()}}isFinished(){return this.finished}setMidpointCallback(e){this.onMidpoint=e}}let SceneTransitionManager$1=class{constructor(){this.currentTransition=null,this.transitionQueue=[],this.lowPerformanceMode=!1}startTransition(e,t={}){if(this.currentTransition&&!this.currentTransition.isFinished())return this.transitionQueue.push({type:e,config:t}),null;const i=this.getOptimizedConfig(t);let s;if(this.lowPerformanceMode)s=new FadeTransition$1(i);else switch(e){case"fade":s=new FadeTransition$1(i);break;case"slide":s=new SlideTransition$1(i);break;case"wipe":s=new WipeTransition$1(i);break;case"blinds":s=new BlindsTransition(i);break;default:s=new FadeTransition$1(i)}return this.currentTransition=s,s}update(e){if(this.currentTransition&&(this.currentTransition.update(e),this.currentTransition.isFinished()&&(this.currentTransition=null,this.transitionQueue.length>0))){const t=this.transitionQueue.shift();this.startTransition(t.type,t.config)}}render(e){this.currentTransition&&this.currentTransition.render(e)}hasActiveTransition(){return this.currentTransition&&!this.currentTransition.isFinished()}clearTransitions(){this.currentTransition=null,this.transitionQueue=[]}setLowPerformanceMode(e){this.lowPerformanceMode=e,console.log(e?"場景切換系統：低效能模式已啟用":"場景切換系統：正常模式已啟用")}getOptimizedConfig(e){if(!this.lowPerformanceMode)return e;const t={...e};return t.duration&&(t.duration=Math.min(t.duration,500)),t}};window.SceneTransitionManager=SceneTransitionManager$1;window.FadeTransition=FadeTransition$1;window.SlideTransition=SlideTransition$1;window.WipeTransition=WipeTransition$1;window.BlindsTransition=BlindsTransition;let WelcomeScene$1=class extends Scene{constructor(e,t){super(e,t),this.startButton=null,this.titleLabel=null,this.instructionLabel=null,this.soundToggleButton=null,this.settingsLabel=null,this.instructionsButton=null,this.knowledgeButton=null,this.showingInstructions=!1,this.showingKnowledge=!1,this.instructionPanel=null,this.knowledgePanel=null}async loadSceneAssets(){try{const e=this.gameEngine.assetManager;await Promise.allSettled([e.loadImage("assets/images/backgrounds/welcome_bg.png","background_welcome"),e.loadImage("assets/images/ui/game_logo.png","logo"),e.loadImage("assets/images/ui/button_start.png","button_start")]),this.backgroundImage=e.getAsset("background_welcome"),console.log("歡迎場景資源載入完成")}catch(e){console.warn("歡迎場景資源載入失敗，使用預設樣式:",e),this.backgroundImage=null}}async enter(){await super.enter(),this.gameEngine.playBackgroundMusic("background_music")}setupScene(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.titleLabel=e.createLabel({x:t.width/2,y:100,text:"北京烤鴨料理遊戲",fontSize:36,color:"#1a202c",align:"center"}),this.instructionLabel=e.createLabel({x:t.width/2,y:160,text:"學習正宗北京烤鴨的製作工藝",fontSize:18,color:"#4a5568",align:"center"}),this.startButton=e.createButton({x:t.width/2-60,y:t.height/2+50,width:120,height:50,text:"開始遊戲",onClick:()=>this.startGame()}),this.addUIElement(this.startButton),this.settingsLabel=e.createLabel({x:t.width/2,y:t.height/2+120,text:"遊戲設定",fontSize:16,color:"#2d3748",align:"center"});const i=this.gameEngine.gameState.settings.soundEnabled;this.soundToggleButton=e.createButton({x:t.width/2-50,y:t.height/2+150,width:100,height:40,text:i?"音效：開啟":"音效：關閉",onClick:()=>this.toggleSound()}),this.addUIElement(this.soundToggleButton),this.instructionsButton=e.createButton({x:t.width/2-120,y:t.height/2+200,width:100,height:40,text:"遊戲說明",onClick:()=>this.showInstructions()}),this.addUIElement(this.instructionsButton),this.knowledgeButton=e.createButton({x:t.width/2+20,y:t.height/2+200,width:100,height:40,text:"知識庫",onClick:()=>this.showKnowledge()}),this.addUIElement(this.knowledgeButton)}startGame(){console.log("開始遊戲"),this.gameEngine.playSound("button_click"),this.transitionToScene("selection")}toggleSound(){const t=!this.gameEngine.gameState.settings.soundEnabled;this.gameEngine.setSoundEnabled(t),this.soundToggleButton.setText(t?"音效：開啟":"音效：關閉"),t&&this.gameEngine.playSound("button_click"),console.log(`音效設定已${t?"開啟":"關閉"}`)}showInstructions(){if(this.showingInstructions){this.hideInstructions();return}this.showingInstructions=!0,this.showingKnowledge=!1,this.knowledgePanel&&this.hideKnowledge();const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.instructionPanel={background:e.createLabel({x:50,y:80,text:"",fontSize:1,color:"rgba(0, 0, 0, 0.8)"}),title:e.createLabel({x:t.width/2,y:100,text:"遊戲操作說明",fontSize:24,color:"#FFD700",align:"center"}),content:e.createLabel({x:80,y:140,text:`歡迎來到北京烤鴨料理遊戲！

🎯 遊戲目標：
學習正宗北京烤鴨的完整製作工藝，從選材到享用的全過程。

🎮 操作方式：
• 點擊按鈕進行各種料理動作
• 拖拽物品到指定位置
• 長按進行持續性操作（如充氣）
• 跟隨螢幕提示完成每個步驟

📚 學習內容：
• 北京填鴨的選材標準
• 傳統的處理和製胚技法
• 烤製過程的溫度和時間控制
• 片鴨技藝和傳統吃法

✨ 遊戲特色：
• 簡單直觀的操作方式
• 豐富的文化教育內容
• 即時的操作反饋和指導
• 完整的進度追蹤系統`,fontSize:14,color:"#FFFFFF",align:"left"}),closeButton:e.createButton({x:t.width/2-40,y:t.height-80,width:80,height:35,text:"關閉",onClick:()=>this.hideInstructions()})},this.instructionsButton.setText("關閉說明"),this.gameEngine.playSound("button_click")}hideInstructions(){if(!this.showingInstructions||!this.instructionPanel)return;this.showingInstructions=!1;const e=this.gameEngine.uiManager;Object.values(this.instructionPanel).forEach(t=>{e.removeUIElement(t)}),this.instructionPanel=null,this.instructionsButton.setText("遊戲說明")}showKnowledge(){if(this.showingKnowledge){this.hideKnowledge();return}this.showingKnowledge=!0,this.showingInstructions=!1,this.instructionPanel&&this.hideInstructions();const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.knowledgePanel={title:e.createLabel({x:t.width/2,y:100,text:"北京烤鴨知識庫",fontSize:24,color:"#FFD700",align:"center"}),content:e.createLabel({x:80,y:140,text:`🦆 關於北京烤鴨：
北京烤鴨是中國著名的傳統菜餚，有著600多年的歷史。
以其酥脆的皮、嫩滑的肉和獨特的風味聞名於世。

📖 歷史淵源：
• 起源於南北朝時期
• 明朝時期在宮廷中發展完善
• 清朝時期傳入民間，形成不同流派

🏪 著名老字號：
• 全聚德：掛爐烤鴨的代表
• 便宜坊：燜爐烤鴨的傳承者

🥢 傳統吃法：
• 荷葉餅包裹鴨皮鴨肉
• 搭配蔥絲、黃瓜條
• 蘸甜麵醬享用

🎯 製作要點：
• 選用優質北京填鴨
• 嚴格控制烤製溫度和時間
• 掌握片鴨的刀工技巧`,fontSize:14,color:"#FFFFFF",align:"left"}),closeButton:e.createButton({x:t.width/2-40,y:t.height-80,width:80,height:35,text:"關閉",onClick:()=>this.hideKnowledge()})},this.knowledgeButton.setText("關閉知識庫"),this.gameEngine.playSound("button_click")}hideKnowledge(){if(!this.showingKnowledge||!this.knowledgePanel)return;this.showingKnowledge=!1;const e=this.gameEngine.uiManager;Object.values(this.knowledgePanel).forEach(t=>{e.removeUIElement(t)}),this.knowledgePanel=null,this.knowledgeButton.setText("知識庫")}renderScene(e){if(!this.backgroundImage){const i=e.createLinearGradient(0,0,0,e.canvas.height);i.addColorStop(0,"#FFF8DC"),i.addColorStop(1,"#F5DEB3"),e.fillStyle=i,e.fillRect(0,0,e.canvas.width,e.canvas.height),e.strokeStyle="#654321",e.lineWidth=4,e.strokeRect(10,10,e.canvas.width-20,e.canvas.height-20)}const t=this.gameEngine.assetManager.getAsset("logo");if(t&&t.width){const s=(e.canvas.width-150)/2;e.drawImage(t,s,150,150,150)}else e.fillStyle="#8B4513",e.font="bold 28px Microsoft JhengHei, sans-serif",e.textAlign="center",e.textBaseline="middle",e.fillText("🦆",e.canvas.width/2,180);this.showingInstructions&&(e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(40,90,e.canvas.width-80,e.canvas.height-160),e.strokeStyle="#FFD700",e.lineWidth=2,e.strokeRect(40,90,e.canvas.width-80,e.canvas.height-160)),this.showingKnowledge&&(e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(40,90,e.canvas.width-80,e.canvas.height-160),e.strokeStyle="#FFD700",e.lineWidth=2,e.strokeRect(40,90,e.canvas.width-80,e.canvas.height-160))}cleanup(){super.cleanup();const e=this.gameEngine.uiManager;this.startButton&&e.removeUIElement(this.startButton),this.titleLabel&&e.removeUIElement(this.titleLabel),this.instructionLabel&&e.removeUIElement(this.instructionLabel),this.soundToggleButton&&e.removeUIElement(this.soundToggleButton),this.settingsLabel&&e.removeUIElement(this.settingsLabel),this.instructionsButton&&e.removeUIElement(this.instructionsButton),this.knowledgeButton&&e.removeUIElement(this.knowledgeButton),this.hideInstructions(),this.hideKnowledge()}};window.WelcomeScene=WelcomeScene$1;let SelectionScene$1=class extends Scene{constructor(e,t){super(e,t),this.titleLabel=null,this.instructionLabel=null,this.educationPanel=null,this.nextButton=null,this.backButton=null,this.duckDisplay={x:300,y:200,width:200,height:150,duckImage:null,highlightAreas:[]},this.showingEducation=!1,this.educationContent={title:"北京填鴨選材標準",content:`🦆 優質北京填鴨的特徵：

📏 體型標準：
• 體重：2.5-3.5公斤為佳
• 體型：胸部豐滿，腹部不過於肥大
• 比例：頭小頸短，身體勻稱

🎨 外觀特徵：
• 皮膚：淡黃色，光滑有彈性
• 羽毛：白色，乾淨整潔
• 眼睛：明亮有神，無分泌物

🏥 健康指標：
• 肌肉：結實有彈性
• 脂肪：分佈均勻，不過厚
• 氣味：新鮮，無異味

💡 選材小貼士：
• 選擇45-60天齡的填鴨
• 確保來源可靠，檢疫合格
• 宰殺後應儘快處理`},this.sceneProgress={educationViewed:!1,readyForMiniGames:!1}}async loadSceneAssets(){const e=this.gameEngine.assetManager;await Promise.all([e.loadImage("assets/images/backgrounds/selection_bg.png","background_selection"),e.loadImage("assets/images/duck/raw_duck.png","raw_duck"),e.loadImage("assets/images/duck/duck_highlight.png","duck_highlight"),e.loadImage("assets/images/ui/info_icon.png","info_icon")]),this.backgroundImage=e.getAsset("background_selection"),this.duckDisplay.duckImage=e.getAsset("raw_duck")}setupScene(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.titleLabel=e.createLabel({x:t.width/2,y:50,text:"選材階段 - 挑選優質北京填鴨",fontSize:24,color:"#8B4513",align:"center"}),this.instructionLabel=e.createLabel({x:t.width/2,y:90,text:"學習如何選擇最適合製作烤鴨的北京填鴨",fontSize:16,color:"#654321",align:"center"}),this.educationButton=e.createButton({x:90,y:120,width:100,height:35,text:"選材知識",onClick:()=>this.toggleEducationPanel()}),this.addUIElement(this.educationButton),this.nextButton=e.createButton({x:t.width-170,y:t.height-80,width:120,height:50,text:"開始檢查",onClick:()=>this.startMiniGames()}),this.nextButton.setEnabled(!1),this.addUIElement(this.nextButton),this.backButton=e.createButton({x:50,y:t.height-80,width:100,height:50,text:"返回",onClick:()=>this.goBack()}),this.addUIElement(this.backButton),this.setupDuckHighlights(),console.log("選材場景設置完成")}setupDuckHighlights(){this.duckDisplay.highlightAreas=[{name:"頭部",x:this.duckDisplay.x+47,y:this.duckDisplay.y+10,width:45,height:35,info:"頭部應該小巧，眼睛明亮"},{name:"胸部",x:this.duckDisplay.x+35,y:this.duckDisplay.y+60,width:40,height:23,info:"胸部應該豐滿，肌肉結實"},{name:"腹部",x:this.duckDisplay.x+40,y:this.duckDisplay.y+95,width:75,height:18,info:"腹部不應過於肥大"}]}toggleEducationPanel(){this.showingEducation?this.hideEducationPanel():this.showEducationPanel()}showEducationPanel(){this.showingEducation=!0;const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.educationButton&&this.educationButton.setVisible(!1);const i=["🦆 優質北京填鴨的特徵：","","📏 體型標準：","  • 體重：2.5-3.5公斤為佳","  • 體型：胸部豐滿，腹部不","      過於肥大","  • 比例：頭小頸短，身體勻稱","","🎨 外觀特徵：","  • 皮膚：淡黃色，光滑有彈性","  • 羽毛：白色，乾淨整潔","  • 眼睛：明亮有神，無分泌物"],s=["🏥 健康指標：","  • 肌肉：結實有彈性","  • 脂肪：分佈均勻，不過厚","  • 氣味：新鮮，無異味","","💡 選材小貼士：","  • 選擇45-60天齡的填鴨","  • 確保來源可靠，檢疫合格","  • 宰殺後應儘快處理"];this.educationPanel={title:e.createLabel({x:t.width/2,y:100,text:this.educationContent.title,fontSize:18,color:"#FFD700",align:"center"}),contentLabels:[],closeButton:e.createButton({x:t.width/2-40,y:t.height-100,width:80,height:35,text:"關閉",onClick:()=>this.hideEducationPanel()})};const a=135,n=20,r=110;i.forEach((o,c)=>{const g=e.createLabel({x:r,y:a+c*n,text:o,fontSize:14,color:"#FFFFFF",align:"left"});this.educationPanel.contentLabels.push(g)});const h=t.width/2+20;s.forEach((o,c)=>{const g=e.createLabel({x:h,y:a+c*n,text:o,fontSize:14,color:"#FFFFFF",align:"left"});this.educationPanel.contentLabels.push(g)}),this.addUIElement(this.educationPanel.closeButton),this.sceneProgress.educationViewed=!0,this.updateSceneProgress(),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click")}hideEducationPanel(){if(!this.showingEducation||!this.educationPanel)return;this.showingEducation=!1;const e=this.gameEngine.uiManager;this.educationButton&&this.educationButton.setVisible(!0),this.educationPanel.title&&(e.removeUIElement(this.educationPanel.title),this.removeUIElement(this.educationPanel.title)),this.educationPanel.contentLabels&&this.educationPanel.contentLabels.forEach(t=>{e.removeUIElement(t),this.removeUIElement(t)}),this.educationPanel.closeButton&&(e.removeUIElement(this.educationPanel.closeButton),this.removeUIElement(this.educationPanel.closeButton)),this.educationPanel=null}updateSceneProgress(){this.sceneProgress.educationViewed&&(this.sceneProgress.readyForMiniGames=!0,this.nextButton.setEnabled(!0),this.nextButton.setText("開始品質檢查"))}startMiniGames(){if(!this.sceneProgress.readyForMiniGames){console.log("請先查看選材知識");return}console.log("開始鴨子品質檢查迷你遊戲"),this.hideEducationPanel(),this.hideSceneUI(),this.startMiniGame(DuckQualityGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:150,gameAreaWidth:600,gameAreaHeight:300})}goBack(){this.transitionToScene("welcome")}render(e){if(this.isActive){if(this.isLoading){this.renderLoadingScreen(e);return}this.backgroundImage&&e.drawImage(this.backgroundImage,0,0,e.canvas.width,e.canvas.height),this.renderScene(e),this.currentMiniGame&&this.currentMiniGame.render(e),this.showingEducation&&this.renderEducationPanelBackground(e),this.uiElements.forEach(t=>{t.render&&t.render(e)})}}renderScene(e){this.renderDuckDisplay(e)}renderDuckDisplay(e){const t=this.duckDisplay;e.fillStyle="rgba(255, 255, 255, 0.9)",e.fillRect(t.x-10,t.y-10,t.width+20,t.height+20),e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(t.x-10,t.y-10,t.width+20,t.height+20),t.duckImage?e.drawImage(t.duckImage,t.x,t.y,t.width,t.height):(e.fillStyle="#F0F0F0",e.fillRect(t.x,t.y,t.width,t.height),e.fillStyle="#666666",e.font="16px Microsoft JhengHei",e.textAlign="center",e.fillText("北京填鴨",t.x+t.width/2,t.y+t.height/2)),this.showingEducation||this.renderHighlightAreas(e),e.fillStyle="#8B4513",e.font="bold 16px Microsoft JhengHei",e.textAlign="center",e.fillText("優質北京填鴨展示",t.x+t.width/2,t.y-20)}renderHighlightAreas(e){this.duckDisplay.highlightAreas.forEach(t=>{e.strokeStyle="#FFD700",e.lineWidth=2,e.setLineDash([5,5]),e.strokeRect(t.x,t.y,t.width,t.height),e.setLineDash([]),e.fillStyle="rgba(255, 215, 0, 0.8)",e.fillRect(t.x,t.y-20,t.width,18),e.fillStyle="#8B4513",e.font="12px Microsoft JhengHei",e.textAlign="center",e.fillText(t.name,t.x+t.width/2,t.y-6)})}renderEducationPanelBackground(e){e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(0,0,e.canvas.width,e.canvas.height),e.fillStyle="rgba(30, 30, 30, 0.98)",e.fillRect(80,80,e.canvas.width-160,e.canvas.height-160),e.strokeStyle="#FFD700",e.lineWidth=3,e.strokeRect(80,80,e.canvas.width-160,e.canvas.height-160)}handleSceneInput(e){if(e.type==="click"&&!this.showingEducation){for(let t of this.duckDisplay.highlightAreas)if(e.x>=t.x&&e.x<=t.x+t.width&&e.y>=t.y&&e.y<=t.y+t.height){this.showAreaInfo(t);return}}}showAreaInfo(e){const t=this.gameEngine.uiManager,i=t.createLabel({x:e.x+e.width+10,y:e.y,text:e.info,fontSize:14,color:"#FFD700",align:"left"});setTimeout(()=>{t.removeUIElement(i)},3e3),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("info_sound")}hideSceneUI(){this.titleLabel&&this.titleLabel.setVisible(!1),this.instructionLabel&&this.instructionLabel.setVisible(!1),this.nextButton&&this.nextButton.setVisible(!1),this.backButton&&this.backButton.setVisible(!1),this.educationButton&&this.educationButton.setVisible(!1)}showSceneUI(){this.titleLabel&&this.titleLabel.setVisible(!0),this.instructionLabel&&this.instructionLabel.setVisible(!0),this.nextButton&&this.nextButton.setVisible(!0),this.backButton&&this.backButton.setVisible(!0),this.educationButton&&this.educationButton.setVisible(!0)}onMiniGameComplete(e,t){const i=this.currentMiniGame?this.currentMiniGame.name:"未知遊戲";if(console.log(`${i}完成:`,e?"成功":"失敗"),this.showSceneUI(),e){const s=this.gameEngine.uiManager,a=this.gameEngine.canvas;i==="鴨子品質檢查"?(this.gameEngine.progressManager.completeStep("duck_quality_check"),this.nextButton.setText("重量測量"),this.nextButton.onClick=()=>this.startWeightGame(),s.createDismissibleMessage({text:`品質檢查完成！
獲得分數: ${t.score}`,x:a.width/2,y:a.height/2-50,fontSize:18,color:"#32CD32",autoDismissTime:5e3})):i==="重量測量"&&(this.gameEngine.progressManager.completeStep("duck_weight_measurement"),this.nextButton.setText("進入處理階段"),this.nextButton.onClick=()=>this.proceedToNextScene(),s.createDismissibleMessage({text:`重量測量完成！
獲得分數: ${t.score}

選材階段全部完成！`,x:a.width/2,y:a.height/2-50,fontSize:18,color:"#32CD32",autoDismissTime:5e3}),this.gameEngine.updateGameState({progress:{...this.gameEngine.gameState.progress,selection:!0}}))}else i==="鴨子品質檢查"?(this.nextButton.setText("重新檢查"),this.nextButton.onClick=()=>this.startMiniGames()):i==="重量測量"&&(this.nextButton.setText("重新測量"),this.nextButton.onClick=()=>this.startWeightGame());this.currentMiniGame=null}proceedToNextScene(){console.log("選材階段完成，進入處理階段"),this.transitionToScene("processing")}startWeightGame(){console.log("開始重量測量迷你遊戲"),this.hideSceneUI(),this.startMiniGame(WeightMeasurementGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:150,gameAreaWidth:600,gameAreaHeight:300})}cleanup(){super.cleanup();const e=this.gameEngine.uiManager;this.titleLabel&&e.removeUIElement(this.titleLabel),this.instructionLabel&&e.removeUIElement(this.instructionLabel),this.nextButton&&e.removeUIElement(this.nextButton),this.backButton&&e.removeUIElement(this.backButton),this.hideEducationPanel()}};window.SelectionScene=SelectionScene$1;let ProcessingScene$1=class extends Scene{constructor(e,t){super(e,t),this.titleLabel=null,this.instructionLabel=null,this.educationPanel=null,this.educationButton=null,this.nextButton=null,this.backButton=null,this.stepIndicator=null,this.processingSteps=[{id:"feather_removal",name:"褪毛",description:"仔細移除鴨子身上的羽毛",miniGameClass:"FeatherRemovalGame",completed:!1,educationContent:{title:"褪毛技巧與要點",content:`🪶 褪毛是處理鴨子的第一步：

🔥 燙毛準備：
• 水溫：60-70°C為最佳溫度
• 時間：浸燙2-3分鐘
• 方法：順著羽毛生長方向燙毛

✋ 褪毛技巧：
• 從頸部開始，逐步向下
• 順著羽毛生長方向拔除
• 保持皮膚完整，避免破損
• 細小絨毛需特別仔細處理

🎯 品質標準：
• 皮膚光滑無羽毛殘留
• 表面無破損或劃傷
• 顏色均勻，呈淡黃色
• 手感光滑有彈性

💡 專業提醒：
• 動作要輕柔但堅決
• 遇到頑固羽毛可重新燙毛
• 保持工作環境清潔衛生`}},{id:"opening_cleaning",name:"開口清洗",description:"精確開口並徹底清洗內腔",miniGameClass:"OpeningCleaningGame",completed:!1,educationContent:{title:"開口與清洗標準",content:`🔪 開口技術要點：

📏 開口位置：
• 從肛門向上開口約8-10公分
• 切口要直且整齊
• 避免切破內臟

🧽 清洗步驟：
• 取出內臟要完整乾淨
• 用清水沖洗內腔
• 檢查是否有血塊殘留
• 確保腔內乾淨無異味

🏥 衛生要求：
• 使用乾淨的刀具和砧板
• 清洗過程保持水流充足
• 內腔清洗要徹底
• 外表也要清洗乾淨

✅ 完成標準：
• 開口整齊，大小適中
• 內腔乾淨無殘留
• 外表清潔無血污
• 準備進入下一步驟`}}],this.currentStepIndex=0,this.showingEducation=!1,this.sceneProgress={allStepsCompleted:!1,readyForNextScene:!1},this.duckDisplay={x:300,y:180,width:200,height:150,duckImage:null,processingState:"raw"}}async loadSceneAssets(){const e=this.gameEngine.assetManager;await Promise.all([e.loadImage("assets/images/backgrounds/processing_bg.png","background_processing"),e.loadImage("assets/images/duck/raw_duck.png","duck_raw"),e.loadImage("assets/images/duck/processing_duck.png","processing_duck"),e.loadImage("assets/images/duck/feather_plucking_duck.png","feather_plucking_duck"),e.loadImage("assets/images/duck/duck_no_feathers.png","duck_no_feathers"),e.loadImage("assets/images/duck/anus_duck.png","anus_duck"),e.loadImage("assets/images/duck/duck_opened.png","duck_opened"),e.loadImage("assets/images/duck/processed_duck.png","processed_duck"),e.loadImage("assets/images/tools/feather_pluck.png","feather_pluck_tool"),e.loadImage("assets/images/tools/knife.png","knife_tool"),e.loadImage("assets/images/tools/water.png","water_tool")]),this.backgroundImage=e.getAsset("background_processing"),this.duckDisplay.duckImage=e.getAsset("processing_duck")}setupScene(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.titleLabel=e.createLabel({x:t.width/2,y:50,text:"處理階段 - 鴨子初步處理",fontSize:24,color:"#8B4513",align:"center"}),this.instructionLabel=e.createLabel({x:t.width/2,y:90,text:"學習專業的鴨子處理技術",fontSize:16,color:"#654321",align:"center"}),this.createStepIndicator(),this.createEducationButton(),this.nextButton=e.createButton({x:t.width-170,y:t.height-80,width:120,height:50,text:"開始褪毛",onClick:()=>this.startCurrentStep()}),this.addUIElement(this.nextButton),this.backButton=e.createButton({x:50,y:t.height-80,width:100,height:50,text:"返回",onClick:()=>this.goBack()}),this.addUIElement(this.backButton),console.log("處理場景設置完成")}createStepIndicator(){const e=this.gameEngine.uiManager;this.stepIndicator=e.createLabel({x:50,y:130,text:this.getStepIndicatorText(),fontSize:14,color:"#8B4513",align:"left"})}getStepIndicatorText(){let e=`處理步驟進度：
`;return this.processingSteps.forEach((t,i)=>{const s=t.completed?"✅":i===this.currentStepIndex?"🔄":"⏳";e+=`${s} ${i+1}. ${t.name}
`}),e}createEducationButton(){const e=this.gameEngine.uiManager;this.educationButton=e.createButton({x:50,y:250,width:120,height:40,text:"學習技巧",onClick:()=>this.showCurrentStepEducation()}),this.addUIElement(this.educationButton)}showCurrentStepEducation(){if(this.currentStepIndex>=this.processingSteps.length)return;const e=this.processingSteps[this.currentStepIndex];this.showEducationPanel(e.educationContent)}showEducationPanel(e){this.showingEducation=!0,this.educationContent=e;const t=this.gameEngine.uiManager,i=this.gameEngine.canvas;this.hideSceneUI(),this.educationPanel={closeButton:t.createButton({x:i.width/2-40,y:i.height-90,width:80,height:35,text:"關閉",onClick:()=>this.hideEducationPanel()})},this.addUIElement(this.educationPanel.closeButton),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click")}hideEducationPanel(){if(!this.showingEducation||!this.educationPanel)return;this.showingEducation=!1,this.educationContent=null;const e=this.gameEngine.uiManager;Object.values(this.educationPanel).forEach(t=>{e.removeUIElement(t),this.removeUIElement(t)}),this.educationPanel=null,this.showSceneUI()}startCurrentStep(){if(this.currentStepIndex>=this.processingSteps.length){this.proceedToNextScene();return}const e=this.processingSteps[this.currentStepIndex];console.log(`開始步驟: ${e.name}`),this.hideEducationPanel(),this.hideSceneUI(),e.id==="feather_removal"?this.startFeatherRemovalGame():e.id==="opening_cleaning"&&this.startOpeningCleaningGame()}startFeatherRemovalGame(){console.log("啟動褪毛迷你遊戲"),this.startMiniGame(FeatherRemovalGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:150,gameAreaWidth:600,gameAreaHeight:300})}startOpeningCleaningGame(){console.log("啟動開口清洗迷你遊戲"),this.startMiniGame(OpeningCleaningGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:150,gameAreaWidth:600,gameAreaHeight:300})}onMiniGameBack(){console.log("從迷你遊戲返回到處理場景"),this.showSceneUI()}onMiniGameComplete(e,t){const i=this.currentMiniGame?this.currentMiniGame.name:"未知遊戲";if(console.log(`${i}完成:`,e?"成功":"失敗"),this.showSceneUI(),e){let s="";i==="褪毛遊戲"?s="feather_removal":i==="開口清洗遊戲"&&(s="opening_cleaning"),s&&this.onStepComplete(s,e,t)}else this.showRetryMessage();this.currentMiniGame=null}onStepComplete(e,t,i){if(console.log(`步驟 ${e} 完成:`,t?"成功":"失敗"),t){const s=this.processingSteps.find(a=>a.id===e);s&&(s.completed=!0,this.updateDuckDisplayState(e),this.gameEngine.progressManager.completeStep(e),this.showSuccessMessage(s.name,i.score),this.currentStepIndex++,this.updateStepIndicator(),this.updateNextButton())}else this.showRetryMessage()}updateDuckDisplayState(e){const t=this.gameEngine.assetManager;e==="feather_removal"?(this.duckDisplay.processingState="feathers_removed",this.duckDisplay.duckImage=t.getAsset("anus_duck")):e==="opening_cleaning"&&(this.duckDisplay.processingState="opened_cleaned",this.duckDisplay.duckImage=t.getAsset("processed_duck"))}updateStepIndicator(){this.stepIndicator&&this.stepIndicator.setText(this.getStepIndicatorText())}updateNextButton(){if(this.currentStepIndex>=this.processingSteps.length)this.sceneProgress.allStepsCompleted=!0,this.sceneProgress.readyForNextScene=!0,this.nextButton.setText("進入製胚階段"),this.nextButton.onClick=()=>this.proceedToNextScene(),this.gameEngine.updateGameState({progress:{...this.gameEngine.gameState.progress,processing:!0}});else{const e=this.processingSteps[this.currentStepIndex];this.nextButton.setText(`開始${e.name}`)}}showSuccessMessage(e,t){const i=this.gameEngine.uiManager,s=this.gameEngine.canvas,a=i.createLabel({x:s.width/2,y:s.height/2-50,text:`${e}完成！
獲得分數: ${t}`,fontSize:18,color:"#32CD32",align:"center"});setTimeout(()=>{i.removeUIElement(a)},3e3),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("success_sound")}showRetryMessage(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas,i=e.createLabel({x:t.width/2,y:t.height/2-50,text:"請再試一次，注意操作技巧",fontSize:18,color:"#FF6B6B",align:"center"});setTimeout(()=>{e.removeUIElement(i)},3e3)}goBack(){this.transitionToScene("selection")}proceedToNextScene(){console.log("處理階段完成，進入製胚階段"),this.transitionToScene("preparation")}renderScene(e){this.renderDuckDisplay(e),this.renderProcessingTools(e),this.showingEducation&&this.renderEducationPanelBackground(e)}renderDuckDisplay(e){const t=this.duckDisplay;e.fillStyle="rgba(255, 255, 255, 0.9)",e.fillRect(t.x-10,t.y-10,t.width+20,t.height+20),e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(t.x-10,t.y-10,t.width+20,t.height+20),t.duckImage?e.drawImage(t.duckImage,t.x,t.y,t.width,t.height):(e.fillStyle="#F0F0F0",e.fillRect(t.x,t.y,t.width,t.height),e.fillStyle="#666666",e.font="16px Microsoft JhengHei",e.textAlign="center",e.fillText("處理中的鴨子",t.x+t.width/2,t.y+t.height/2)),e.fillStyle="#8B4513",e.font="bold 16px Microsoft JhengHei",e.textAlign="center";let i="原始狀態";t.processingState==="feathers_removed"?i="已褪毛":t.processingState==="opened_cleaned"&&(i="已開口清洗"),e.fillText(`鴨子狀態: ${i}`,t.x+t.width/2,t.y-20)}renderProcessingTools(e){if(this.currentStepIndex<this.processingSteps.length){const t=this.processingSteps[this.currentStepIndex],i=550,s=200;if(e.fillStyle="rgba(200, 200, 200, 0.8)",e.fillRect(i,s,100,100),e.strokeStyle="#666666",e.lineWidth=1,e.strokeRect(i,s,100,100),e.fillStyle="#333333",e.font="14px Microsoft JhengHei",e.textAlign="center",t.id==="feather_removal"){e.fillText("褪毛工具",i+50,s-10);const a=this.gameEngine.assetManager.getAsset("feather_pluck_tool");a?e.drawImage(a,i+20,s+20,60,60):e.fillText("🪶",i+50,s+55)}else t.id==="opening_cleaning"&&(e.fillText("開口清洗",i+50,s-10),e.fillText("🔪💧",i+50,s+55))}}renderEducationPanelBackground(e){if(!this.educationContent)return;const t=e.canvas;e.fillStyle="rgba(0, 0, 0, 0.9)",e.fillRect(0,0,t.width,t.height);const i=60,s=80,a=t.width-120,n=t.height-160;e.fillStyle="rgba(139, 69, 19, 0.98)",e.fillRect(i,s,a,n),e.strokeStyle="#FFD700",e.lineWidth=3,e.strokeRect(i,s,a,n),e.fillStyle="#FFD700",e.font="bold 22px Microsoft JhengHei, sans-serif",e.textAlign="center",e.fillText(this.educationContent.title,t.width/2,s+40),e.strokeStyle="#FFD700",e.lineWidth=2,e.beginPath(),e.moveTo(i+40,s+60),e.lineTo(i+a-40,s+60),e.stroke();const r=this.educationContent.content.split(`
`),h=Math.ceil(r.length/2),o=r.slice(0,h),c=r.slice(h);e.fillStyle="#FFFFFF",e.font="15px Microsoft JhengHei, sans-serif",e.textAlign="left";const g=(a-100)/2,u=i+30,d=i+a/2+20,m=s+90,p=24;o.forEach((S,y)=>{const f=m+y*p;f<s+n-80&&this.wrapText(e,S,u,f,g,p)}),c.forEach((S,y)=>{const f=m+y*p;f<s+n-80&&this.wrapText(e,S,d,f,g,p)})}wrapText(e,t,i,s,a,n){const r=t.split("");let h="",o=0;for(let c=0;c<r.length;c++){const g=h+r[c];e.measureText(g).width>a&&c>0?(e.fillText(h,i,s+o),h=r[c],o+=n):h=g}e.fillText(h,i,s+o)}hideSceneUI(){this.titleLabel&&this.titleLabel.setVisible(!1),this.instructionLabel&&this.instructionLabel.setVisible(!1),this.stepIndicator&&this.stepIndicator.setVisible(!1),this.nextButton&&this.nextButton.setVisible(!1),this.backButton&&this.backButton.setVisible(!1),this.educationButton&&this.educationButton.setVisible(!1)}showSceneUI(){if(this.titleLabel&&this.titleLabel.setVisible(!0),this.instructionLabel&&this.instructionLabel.setVisible(!0),this.stepIndicator&&this.stepIndicator.setVisible(!0),this.nextButton&&this.nextButton.setVisible(!0),this.backButton&&this.backButton.setVisible(!0),this.educationButton&&this.currentStepIndex<this.processingSteps.length){const e=this.processingSteps[this.currentStepIndex];e&&e.educationContent&&this.educationButton.setVisible(!0)}}cleanup(){super.cleanup();const e=this.gameEngine.uiManager;this.titleLabel&&e.removeUIElement(this.titleLabel),this.instructionLabel&&e.removeUIElement(this.instructionLabel),this.stepIndicator&&e.removeUIElement(this.stepIndicator),this.nextButton&&e.removeUIElement(this.nextButton),this.backButton&&e.removeUIElement(this.backButton),this.educationButton&&e.removeUIElement(this.educationButton),this.hideEducationPanel()}};window.ProcessingScene=ProcessingScene$1;let PreparationScene$1=class extends Scene{constructor(e,t){super(e,t),this.titleLabel=null,this.instructionLabel=null,this.educationPanel=null,this.educationButton=null,this.nextButton=null,this.backButton=null,this.stepIndicator=null,this.preparationSteps=[{id:"inflation_support",name:"充氣支撐",description:"為鴨胚充氣並放置支撐木棍",miniGameClass:"InflationSupportGame",completed:!1,educationContent:{title:"充氣支撐的科學原理",content:`🎈 充氣支撐技術要點：

💨 充氣原理：
• 目的：使鴨皮與肉分離，形成空氣層
• 壓力：適中壓力，避免過度充氣破皮
• 方法：從頸部切口緩慢充入空氣
• 效果：烤製時皮脆肉嫩，層次分明

🪵 支撐技巧：
• 木棍選擇：光滑無刺的硬木棍
• 放置位置：胸腔內橫向支撐
• 作用：保持鴨胚形狀，防止塌陷
• 長度：略短於鴨胚寬度

⚖️ 品質控制：
• 充氣均勻，無局部過脹
• 皮肉分離完全
• 支撐穩固不移位
• 外形飽滿自然

🔬 科學依據：
• 空氣層隔熱效應
• 均勻受熱原理
• 脂肪滲透機制
• 皮肉分層烹飪`}},{id:"scalding_coloring",name:"燙皮上糖色",description:"用熱水燙皮並均勻塗抹糖漿",miniGameClass:"ScaldingColoringGame",completed:!1,educationContent:{title:"燙皮上糖色的關鍵技術",content:`🔥 燙皮技術精要：

🌡️ 溫度控制：
• 水溫：85-90°C最佳
• 時間：快速均勻澆淋
• 方法：從上到下，不留死角
• 效果：收縮毛孔，緊實皮質

🍯 糖漿配製：
• 成分：麥芽糖、蜂蜜、料酒
• 比例：3:1:1的黃金比例
• 濃度：適中，易於塗抹
• 溫度：微溫狀態使用

🎨 上色技巧：
• 塗抹方向：順著鴨身紋理
• 厚度：薄而均勻
• 覆蓋：全身無遺漏
• 重點：胸部和腿部

🧪 美拉德反應：
• 原理：糖分與蛋白質反應
• 條件：高溫下產生
• 效果：形成誘人色澤和香味
• 時機：烤製過程中完成`}}],this.currentStepIndex=0,this.showingEducation=!1,this.sceneProgress={allStepsCompleted:!1,readyForNextScene:!1},this.duckDisplay={x:280,y:160,width:240,height:180,duckImage:null,preparationState:"cleaned",inflationLevel:0,coloringLevel:0},this.preparationTools={inflationPump:{x:100,y:300,active:!1},supportStick:{x:150,y:300,active:!1},hotWater:{x:200,y:300,active:!1},sugarSyrup:{x:250,y:300,active:!1}}}async loadSceneAssets(){const e=this.gameEngine.assetManager;await Promise.all([e.loadImage("assets/images/backgrounds/preparation_bg.png","background_preparation"),e.loadImage("assets/images/duck/before_inflation_duck.png","before_inflation_duck"),e.loadImage("assets/images/duck/duck_inflated.png","duck_inflated"),e.loadImage("assets/images/duck/duck_prepared.png","duck_prepared"),e.loadImage("assets/images/tools/inflation_pump.png","inflation_pump"),e.loadImage("assets/images/tools/support_stick.png","support_stick"),e.loadImage("assets/images/tools/hot_water_pot.png","hot_water_pot"),e.loadImage("assets/images/tools/sugar_syrup.png","sugar_syrup"),e.loadImage("assets/images/effects/steam.png","steam_effect"),e.loadImage("assets/images/effects/sugar_glaze.png","sugar_glaze")]),this.backgroundImage=e.getAsset("background_preparation"),this.duckDisplay.duckImage=e.getAsset("before_inflation_duck")}setupScene(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.titleLabel=e.createLabel({x:t.width/2,y:40,text:"製胚階段 - 關鍵製作工藝",fontSize:26,color:"#B8860B",align:"center"}),this.instructionLabel=e.createLabel({x:t.width/2,y:80,text:"掌握北京烤鴨製胚的核心技術",fontSize:16,color:"#8B7355",align:"center"}),this.createStepIndicator(),this.createEducationButton(),this.nextButton=e.createButton({x:t.width-180,y:t.height-80,width:130,height:50,text:"開始充氣支撐",onClick:()=>this.startCurrentStep()}),this.addUIElement(this.nextButton),this.backButton=e.createButton({x:50,y:t.height-80,width:100,height:50,text:"返回",onClick:()=>this.goBack()}),this.addUIElement(this.backButton),this.createPreparationProgress(),console.log("製胚場景設置完成")}createStepIndicator(){const e=this.gameEngine.uiManager;this.stepIndicator=e.createLabel({x:50,y:120,text:this.getStepIndicatorText(),fontSize:14,color:"#B8860B",align:"left"})}getStepIndicatorText(){let e=`製胚步驟進度：
`;return this.preparationSteps.forEach((t,i)=>{const s=t.completed?"✅":i===this.currentStepIndex?"🔄":"⏳";e+=`${s} ${i+1}. ${t.name}
`}),e}createEducationButton(){const e=this.gameEngine.uiManager;this.educationButton=e.createButton({x:50,y:220,width:130,height:40,text:"學習製胚技術",onClick:()=>this.showCurrentStepEducation()}),this.addUIElement(this.educationButton)}createPreparationProgress(){const e=this.gameEngine.uiManager;this.inflationProgressLabel=e.createLabel({x:580,y:200,text:"充氣進度: 0%",fontSize:14,color:"#4169E1",align:"left"}),this.coloringProgressLabel=e.createLabel({x:580,y:220,text:"上色進度: 0%",fontSize:14,color:"#FF8C00",align:"left"}),this.addUIElement(this.inflationProgressLabel),this.addUIElement(this.coloringProgressLabel)}showCurrentStepEducation(){if(this.currentStepIndex>=this.preparationSteps.length)return;const e=this.preparationSteps[this.currentStepIndex];this.showEducationPanel(e.educationContent)}showEducationPanel(e){this.showingEducation=!0,this.educationContent=e;const t=this.gameEngine.uiManager,i=this.gameEngine.canvas;this.educationPanel={closeButton:t.createButton({x:i.width/2-40,y:i.height-90,width:80,height:35,text:"關閉",onClick:()=>this.hideEducationPanel()})},this.addUIElement(this.educationPanel.closeButton),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click")}hideEducationPanel(){if(!this.showingEducation||!this.educationPanel)return;this.showingEducation=!1,this.educationContent=null;const e=this.gameEngine.uiManager;Object.values(this.educationPanel).forEach(t=>{e.removeUIElement(t),this.removeUIElement(t)}),this.educationPanel=null}startCurrentStep(){if(this.currentStepIndex>=this.preparationSteps.length){this.proceedToNextScene();return}const e=this.preparationSteps[this.currentStepIndex];console.log(`開始步驟: ${e.name}`),this.hideEducationPanel(),this.hideSceneUI(),e.id==="inflation_support"?this.startInflationSupportGame():e.id==="scalding_coloring"&&this.startScaldingColoringGame()}startInflationSupportGame(){console.log("啟動充氣支撐迷你遊戲"),this.startMiniGame(InflationSupportGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:140,gameAreaWidth:600,gameAreaHeight:320,duckDisplay:this.duckDisplay,onProgressUpdate:e=>{this.updateInflationProgress(e)}})}startScaldingColoringGame(){console.log("啟動燙皮上糖色迷你遊戲"),this.startMiniGame(ScaldingColoringGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:140,gameAreaWidth:600,gameAreaHeight:320,duckDisplay:this.duckDisplay,onProgressUpdate:e=>{this.updateColoringProgress(e)}})}updateInflationProgress(e){this.duckDisplay.inflationLevel=e,this.inflationProgressLabel&&this.inflationProgressLabel.setText(`充氣進度: ${Math.round(e)}%`)}updateColoringProgress(e){this.duckDisplay.coloringLevel=e,this.coloringProgressLabel&&this.coloringProgressLabel.setText(`上色進度: ${Math.round(e)}%`)}onMiniGameBack(){console.log("從迷你遊戲返回到製胚場景"),this.showSceneUI()}onMiniGameComplete(e,t){const i=this.currentMiniGame?this.currentMiniGame.name:"未知遊戲";if(console.log(`${i}完成:`,e?"成功":"失敗"),console.log("currentMiniGame before cleanup:",this.currentMiniGame?"exists":"null"),e){let s="";i==="充氣支撐遊戲"?s="inflation_support":i==="燙皮上糖色遊戲"&&(s="scalding_coloring"),s&&(this.currentMiniGame&&(console.log("Cleaning up mini-game immediately after completion"),this.currentMiniGame.cleanup(),this.currentMiniGame=null),console.log("currentMiniGame after cleanup:",this.currentMiniGame?"exists":"null"),this.onStepComplete(s,e,t))}else this.currentMiniGame&&(this.currentMiniGame.cleanup(),this.currentMiniGame=null),this.isLoading=!1,this.showSceneUI(),this.showRetryMessage()}onStepComplete(e,t,i){if(console.log(`步驟 ${e} 完成:`,t?"成功":"失敗"),t){const s=this.preparationSteps.find(a=>a.id===e);s&&(s.completed=!0,this.updateDuckDisplayState(e),this.gameEngine.progressManager.completeStep(e),this.currentStepIndex++,this.updateStepIndicator(),this.updateNextButton(),setTimeout(()=>{console.log(`檢查步驟完成狀態: ${this.currentStepIndex}/${this.preparationSteps.length}`),this.currentStepIndex<this.preparationSteps.length?(console.log("自動開始下一個步驟"),this.showLoadingForNextStep()):(console.log("PreparationScene: 所有步驟完成，顯示進入下一場景按鈕"),this.isLoading=!1,this.currentMiniGame&&(this.currentMiniGame.cleanup(),this.currentMiniGame=null),this.showSceneUI(),this.nextButton&&(this.nextButton.setVisible(!0),this.nextButton.setEnabled(!0)),console.log("製胚階段完成！充氣支撐和燙皮上色都已完成，點擊按鈕進入晾胚階段"),this.showSuccessMessage(s.name,i.score),console.log("按鈕狀態:",{text:this.nextButton?this.nextButton.text:"null",visible:this.nextButton?this.nextButton.visible:"null",enabled:this.nextButton?this.nextButton.enabled:"null",onClick:this.nextButton&&this.nextButton.onClick?"set":"null"}))},1500))}else this.showRetryMessage()}showLoadingForNextStep(){this.isLoading=!0,this.hideSceneUI(),this.hideEducationPanel(),this.currentMiniGame&&(this.currentMiniGame.cleanup(),this.currentMiniGame=null),setTimeout(()=>{this.isLoading=!1,this.startCurrentStep()},1e3)}updateDuckDisplayState(e){const t=this.gameEngine.assetManager;e==="inflation_support"?(this.duckDisplay.preparationState="inflated",this.duckDisplay.duckImage=t.getAsset("duck_inflated")):e==="scalding_coloring"&&(this.duckDisplay.preparationState="scalded_colored",this.duckDisplay.duckImage=t.getAsset("duck_prepared"))}updateStepIndicator(){this.stepIndicator&&this.stepIndicator.setText(this.getStepIndicatorText())}updateNextButton(){if(this.currentStepIndex>=this.preparationSteps.length)this.sceneProgress.allStepsCompleted=!0,this.sceneProgress.readyForNextScene=!0,this.nextButton.setText("進入晾胚階段"),this.nextButton.onClick=()=>this.proceedToNextScene(),this.gameEngine.updateGameState({progress:{...this.gameEngine.gameState.progress,preparation:!0}});else{const e=this.preparationSteps[this.currentStepIndex];this.nextButton.setText(`開始${e.name}`)}}showSuccessMessage(e,t){console.log(`${e}完成！獲得分數: ${t}`),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("success_sound")}showRetryMessage(){console.log("製胚需要精確技巧，請再試一次"),setTimeout(()=>{this.showSceneUI()},2e3)}goBack(){this.transitionToScene("processing")}proceedToNextScene(){console.log("製胚階段完成，進入晾胚階段"),this.transitionToScene("drying")}renderLoadingScreen(e){const t=e.canvas,i=e.createLinearGradient(0,0,0,t.height);i.addColorStop(0,"#2c3e50"),i.addColorStop(1,"#34495e"),e.fillStyle=i,e.fillRect(0,0,t.width,t.height),e.fillStyle="#FFFFFF",e.font="bold 32px Microsoft JhengHei, sans-serif",e.textAlign="center",e.textBaseline="middle";const s=this.preparationSteps[this.currentStepIndex],a=s?`準備 ${s.name} ...`:"載入中...";e.fillText(a,t.width/2,t.height/2);const n=".".repeat(Math.floor(Date.now()/500)%4);e.fillStyle="#FFFFFF",e.font="bold 32px Microsoft JhengHei, sans-serif",e.fillText(n,t.width/2+150,t.height/2)}renderScene(e){this.renderDuckDisplay(e),this.renderPreparationTools(e),this.renderPreparationEffects(e),this.showingEducation&&this.renderEducationPanelBackground(e)}renderDuckDisplay(e){const t=this.duckDisplay;e.fillStyle="rgba(255, 248, 220, 0.95)",e.fillRect(t.x-15,t.y-15,t.width+30,t.height+30),e.strokeStyle="#B8860B",e.lineWidth=3,e.strokeRect(t.x-15,t.y-15,t.width+30,t.height+30),t.duckImage?e.drawImage(t.duckImage,t.x,t.y,t.width,t.height):(e.fillStyle="#F5F5DC",e.fillRect(t.x,t.y,t.width,t.height),e.fillStyle="#8B7355",e.font="16px Microsoft JhengHei",e.textAlign="center",e.fillText("製胚中的鴨胚",t.x+t.width/2,t.y+t.height/2)),e.fillStyle="#B8860B",e.font="bold 16px Microsoft JhengHei",e.textAlign="center";let i="已清洗";t.preparationState==="inflated"?i="已充氣支撐":t.preparationState==="scalded_colored"&&(i="已燙皮上色"),e.fillText(`鴨胚狀態: ${i}`,t.x+t.width/2,t.y-25),t.inflationLevel>0&&this.renderInflationEffect(e,t),t.coloringLevel>0&&this.renderColoringEffect(e,t)}renderInflationEffect(e,t){const i=t.inflationLevel/100;e.save(),e.globalAlpha=i*.3,e.strokeStyle="#87CEEB",e.lineWidth=2;const s=t.inflationLevel/100*10;e.strokeRect(t.x-s,t.y-s,t.width+s*2,t.height+s*2),e.restore()}renderColoringEffect(e,t){const i=t.coloringLevel/100;e.save(),e.globalAlpha=i*.4,e.fillStyle="#FFD700",e.fillRect(t.x,t.y,t.width,t.height),e.restore()}renderPreparationTools(e){const t=this.preparationTools;e.fillStyle="rgba(210, 180, 140, 0.8)",e.fillRect(80,280,300,80),e.strokeStyle="#8B7355",e.lineWidth=2,e.strokeRect(80,280,300,80),e.fillStyle="#8B4513",e.font="bold 14px Microsoft JhengHei",e.textAlign="center",e.fillText("製胚工具",230,275);const i=40,s=300;e.fillStyle=t.inflationPump.active?"#4169E1":"#696969",e.fillRect(t.inflationPump.x,s,i,i),e.fillStyle="#FFFFFF",e.font="12px Microsoft JhengHei",e.textAlign="center",e.fillText("充氣泵",t.inflationPump.x+i/2,s+i+15),e.fillStyle=t.supportStick.active?"#8B4513":"#696969",e.fillRect(t.supportStick.x,s,i,i),e.fillStyle="#FFFFFF",e.fillText("木棍",t.supportStick.x+i/2,s+i+15),e.fillStyle=t.hotWater.active?"#FF4500":"#696969",e.fillRect(t.hotWater.x,s,i,i),e.fillStyle="#FFFFFF",e.fillText("熱水",t.hotWater.x+i/2,s+i+15),e.fillStyle=t.sugarSyrup.active?"#FFD700":"#696969",e.fillRect(t.sugarSyrup.x,s,i,i),e.fillStyle="#FFFFFF",e.fillText("糖漿",t.sugarSyrup.x+i/2,s+i+15)}renderPreparationEffects(e){if(this.currentStepIndex<this.preparationSteps.length){const t=this.preparationSteps[this.currentStepIndex];t.id==="inflation_support"?this.renderInflationEffects(e):t.id==="scalding_coloring"&&this.renderScaldingEffects(e)}}renderInflationEffects(e){const t=Date.now()*.003;for(let i=0;i<3;i++){const s=150+Math.sin(t+i)*20,a=200+i*30;e.save(),e.globalAlpha=.6,e.fillStyle="#87CEEB",e.beginPath(),e.arc(s,a,5,0,Math.PI*2),e.fill(),e.restore()}}renderScaldingEffects(e){const t=Date.now()*.002;for(let i=0;i<5;i++){const s=300+Math.sin(t+i*.5)*15,a=150-i*20+Math.cos(t+i)*10;e.save(),e.globalAlpha=.4-i*.08,e.fillStyle="#F0F8FF",e.beginPath(),e.arc(s,a,8-i,0,Math.PI*2),e.fill(),e.restore()}}renderEducationPanelBackground(e){if(!this.educationContent)return;const t=e.canvas;e.fillStyle="rgba(0, 0, 0, 0.9)",e.fillRect(0,0,t.width,t.height);const i=60,s=80,a=t.width-120,n=t.height-160;e.fillStyle="rgba(139, 69, 19, 0.98)",e.fillRect(i,s,a,n),e.strokeStyle="#FFD700",e.lineWidth=3,e.strokeRect(i,s,a,n),e.fillStyle="#FFD700",e.font="bold 22px Microsoft JhengHei, sans-serif",e.textAlign="center",e.fillText(this.educationContent.title,t.width/2,s+40),e.strokeStyle="#FFD700",e.lineWidth=2,e.beginPath(),e.moveTo(i+40,s+60),e.lineTo(i+a-40,s+60),e.stroke();const r=this.educationContent.content.split(`
`),h=Math.ceil(r.length/2),o=r.slice(0,h),c=r.slice(h);e.fillStyle="#FFFFFF",e.font="15px Microsoft JhengHei, sans-serif",e.textAlign="left";const g=(a-100)/2,u=i+30,d=i+a/2+20,m=s+90,p=24;o.forEach((S,y)=>{const f=m+y*p;f<s+n-80&&this.wrapText(e,S,u,f,g,p)}),c.forEach((S,y)=>{const f=m+y*p;f<s+n-80&&this.wrapText(e,S,d,f,g,p)})}wrapText(e,t,i,s,a,n){const r=t.split("");let h="",o=0;for(let c=0;c<r.length;c++){const g=h+r[c];e.measureText(g).width>a&&c>0?(e.fillText(h,i,s+o),h=r[c],o+=n):h=g}e.fillText(h,i,s+o)}hideSceneUI(){this.titleLabel&&this.titleLabel.setVisible(!1),this.instructionLabel&&this.instructionLabel.setVisible(!1),this.stepIndicator&&this.stepIndicator.setVisible(!1),this.nextButton&&this.nextButton.setVisible(!1),this.backButton&&this.backButton.setVisible(!1),this.educationButton&&this.educationButton.setVisible(!1),this.inflationProgressLabel&&this.inflationProgressLabel.setVisible(!1),this.coloringProgressLabel&&this.coloringProgressLabel.setVisible(!1)}showSceneUI(){if(console.log("showSceneUI called, currentStepIndex:",this.currentStepIndex,"total steps:",this.preparationSteps.length),this.titleLabel&&this.titleLabel.setVisible(!0),this.instructionLabel&&this.instructionLabel.setVisible(!0),this.stepIndicator&&this.stepIndicator.setVisible(!0),this.backButton&&this.backButton.setVisible(!0),this.updateNextButton(),this.nextButton?(console.log("Setting nextButton visible, text:",this.nextButton.text),this.nextButton.setVisible(!0),this.nextButton.setEnabled(!0),console.log("nextButton after show:",{visible:this.nextButton.visible,enabled:this.nextButton.enabled,x:this.nextButton.x,y:this.nextButton.y,text:this.nextButton.text})):console.error("nextButton is null!"),this.educationButton&&this.currentStepIndex<this.preparationSteps.length){const e=this.preparationSteps[this.currentStepIndex];e&&e.educationContent&&this.educationButton.setVisible(!0)}this.inflationProgressLabel&&this.inflationProgressLabel.setVisible(!0),this.coloringProgressLabel&&this.coloringProgressLabel.setVisible(!0)}cleanup(){super.cleanup();const e=this.gameEngine.uiManager;this.titleLabel&&e.removeUIElement(this.titleLabel),this.instructionLabel&&e.removeUIElement(this.instructionLabel),this.stepIndicator&&e.removeUIElement(this.stepIndicator),this.nextButton&&e.removeUIElement(this.nextButton),this.backButton&&e.removeUIElement(this.backButton),this.educationButton&&e.removeUIElement(this.educationButton),this.inflationProgressLabel&&e.removeUIElement(this.inflationProgressLabel),this.coloringProgressLabel&&e.removeUIElement(this.coloringProgressLabel),this.hideEducationPanel()}};window.PreparationScene=PreparationScene$1;let DryingScene$1=class extends Scene{constructor(e,t){super(e,t),this.titleLabel=null,this.instructionLabel=null,this.educationPanel=null,this.nextButton=null,this.backButton=null,this.stepIndicator=null,this.dryingSteps=[{id:"hanging_setup",name:"懸掛設置",description:"正確懸掛鴨胚並調整環境",miniGameClass:"HangingEnvironmentGame",completed:!1,educationContent:{title:"晾胚懸掛的技術要點",content:`🪝 懸掛技術精要：

📍 懸掛位置：
• 選擇：通風良好的陰涼處
• 高度：離地面1.5-2米
• 間距：鴨胚間保持30cm距離
• 方向：頭部向下，利於瀝水

🌡️ 環境控制：
• 溫度：15-20°C最佳
• 濕度：60-70%相對濕度
• 通風：微風循環，避免強風
• 時間：根據季節調整6-24小時

🔬 風乾原理：
• 水分蒸發：皮下水分緩慢散失
• 皮質收縮：形成緊實質感
• 蛋白凝固：增強皮肉結構
• 風味濃縮：提升整體口感

⚖️ 品質指標：
• 皮面乾燥無水珠
• 觸感緊實有彈性
• 色澤均勻自然
• 無異味產生`}}],this.currentStepIndex=0,this.showingEducation=!1,this.sceneProgress={allStepsCompleted:!1,readyForNextScene:!1},this.timeManager={totalDryingTime:12*60*60,currentTime:0,timeSpeed:1,isPaused:!1,qualityFactor:1,dryingProgress:0},this.duckDisplay={x:300,y:120,width:200,height:150,duckImage:null,dryingState:"prepared",moistureLevel:100,skinTightness:0,isHanging:!1,hangingHeight:0},this.environmentControls={temperature:{current:18,target:18,min:10,max:25,optimal:{min:15,max:20}},humidity:{current:65,target:65,min:40,max:90,optimal:{min:60,max:70}},airflow:{current:2,target:2,min:0,max:5,optimal:{min:1,max:3}}},this.visualEffects={windParticles:[],moistureDrops:[],temperatureIndicators:[]}}async loadSceneAssets(){const e=this.gameEngine.assetManager;await Promise.all([e.loadImage("assets/images/backgrounds/drying_bg.png","background_drying"),e.loadImage("assets/images/duck/duck_prepared.png","duck_prepared"),e.loadImage("assets/images/duck/duck_hanging.png","duck_hanging"),e.loadImage("assets/images/duck/duck_drying.png","duck_drying"),e.loadImage("assets/images/duck/duck_dried.png","duck_dried"),e.loadImage("assets/images/environment/thermometer.png","thermometer"),e.loadImage("assets/images/environment/hygrometer.png","hygrometer"),e.loadImage("assets/images/environment/fan.png","fan"),e.loadImage("assets/images/environment/hook.png","hanging_hook"),e.loadImage("assets/images/effects/wind_lines.png","wind_effect"),e.loadImage("assets/images/effects/water_drop.png","water_drop"),e.loadImage("assets/images/effects/time_clock.png","time_clock")]),this.backgroundImage=e.getAsset("background_drying"),this.duckDisplay.duckImage=e.getAsset("duck_prepared")}setupScene(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.titleLabel=e.createLabel({x:t.width/2,y:40,text:"晾胚階段 - 風乾工藝",fontSize:26,color:"#4682B4",align:"center"}),this.instructionLabel=e.createLabel({x:t.width/2,y:80,text:"掌握北京烤鴨晾胚的時間與環境控制",fontSize:16,color:"#708090",align:"center"}),this.createStepIndicator(),this.createEducationButton(),this.createTimeControlPanel(),this.createEnvironmentControlPanel(),this.nextButton=e.createButton({x:t.width-180,y:t.height-80,width:130,height:50,text:"開始懸掛",onClick:()=>this.startCurrentStep()}),this.addUIElement(this.nextButton),this.backButton=e.createButton({x:50,y:t.height-80,width:100,height:50,text:"返回",onClick:()=>this.goBack()}),this.addUIElement(this.backButton),this.createDryingProgress(),console.log("晾胚場景設置完成")}createStepIndicator(){const e=this.gameEngine.uiManager;this.stepIndicator=e.createLabel({x:50,y:120,text:this.getStepIndicatorText(),fontSize:14,color:"#4682B4",align:"left"})}getStepIndicatorText(){let e=`晾胚步驟進度：
`;return this.dryingSteps.forEach((t,i)=>{const s=t.completed?"✅":i===this.currentStepIndex?"🔄":"⏳";e+=`${s} ${i+1}. ${t.name}
`}),e}createEducationButton(){const t=this.gameEngine.uiManager.createButton({x:50,y:200,width:130,height:40,text:"學習晾胚技術",onClick:()=>this.showCurrentStepEducation()});this.addUIElement(t)}createTimeControlPanel(){const e=this.gameEngine.uiManager;this.timeDisplayLabel=e.createLabel({x:580,y:120,text:this.getTimeDisplayText(),fontSize:14,color:"#2F4F4F",align:"left"}),this.timeSpeedButton=e.createButton({x:580,y:140,width:100,height:30,text:"正常速度 1x",onClick:()=>this.toggleTimeSpeed()}),this.pauseButton=e.createButton({x:580,y:175,width:100,height:30,text:"暫停",onClick:()=>this.togglePause()}),this.addUIElement(this.timeDisplayLabel),this.addUIElement(this.timeSpeedButton),this.addUIElement(this.pauseButton)}createEnvironmentControlPanel(){const e=this.gameEngine.uiManager;this.temperatureLabel=e.createLabel({x:580,y:220,text:`溫度: ${this.environmentControls.temperature.current}°C`,fontSize:14,color:"#FF4500",align:"left"}),this.humidityLabel=e.createLabel({x:580,y:240,text:`濕度: ${this.environmentControls.humidity.current}%`,fontSize:14,color:"#4169E1",align:"left"}),this.airflowLabel=e.createLabel({x:580,y:260,text:`通風: ${this.environmentControls.airflow.current}級`,fontSize:14,color:"#32CD32",align:"left"}),this.addUIElement(this.temperatureLabel),this.addUIElement(this.humidityLabel),this.addUIElement(this.airflowLabel)}createDryingProgress(){const e=this.gameEngine.uiManager;this.dryingProgressLabel=e.createLabel({x:580,y:290,text:"晾胚進度: 0%",fontSize:14,color:"#8B4513",align:"left"}),this.moistureLabel=e.createLabel({x:580,y:310,text:"水分含量: 100%",fontSize:14,color:"#1E90FF",align:"left"}),this.tightnessLabel=e.createLabel({x:580,y:330,text:"皮質緊實度: 0%",fontSize:14,color:"#DAA520",align:"left"}),this.addUIElement(this.dryingProgressLabel),this.addUIElement(this.moistureLabel),this.addUIElement(this.tightnessLabel)}getTimeDisplayText(){const e=Math.floor(this.timeManager.currentTime/3600),t=Math.floor(this.timeManager.currentTime%3600/60),i=Math.floor(this.timeManager.totalDryingTime/3600);return`晾胚時間: ${e}:${t.toString().padStart(2,"0")} / ${i}:00`}toggleTimeSpeed(){const e=[1,2,5,10],i=(e.indexOf(this.timeManager.timeSpeed)+1)%e.length;this.timeManager.timeSpeed=e[i],this.timeSpeedButton.setText(`${this.timeManager.timeSpeed===1?"正常":"加速"}速度 ${this.timeManager.timeSpeed}x`),this.timeManager.timeSpeed>2?this.timeManager.qualityFactor=Math.max(.7,1-(this.timeManager.timeSpeed-2)*.1):this.timeManager.qualityFactor=1}togglePause(){this.timeManager.isPaused=!this.timeManager.isPaused,this.pauseButton.setText(this.timeManager.isPaused?"繼續":"暫停")}showCurrentStepEducation(){if(this.currentStepIndex>=this.dryingSteps.length)return;const e=this.dryingSteps[this.currentStepIndex];this.showEducationPanel(e.educationContent)}showEducationPanel(e){this.showingEducation=!0,this.hideSceneUI();const t=this.gameEngine.uiManager,i=this.gameEngine.canvas,s=e.content.split(`
`).filter(h=>h.trim()),a=Math.ceil(s.length/2),n=s.slice(0,a).join(`
`),r=s.slice(a).join(`
`);this.educationPanel={title:t.createLabel({x:i.width/2,y:135,text:e.title,fontSize:20,color:"#FFD700",align:"center"}),leftContent:t.createLabel({x:110,y:175,text:n,fontSize:13,color:"#FFFFFF",align:"left",maxWidth:(i.width-160)/2-20}),rightContent:t.createLabel({x:i.width/2+30,y:175,text:r,fontSize:13,color:"#FFFFFF",align:"left",maxWidth:(i.width-160)/2-20}),closeButton:t.createButton({x:i.width/2-40,y:i.height-120,width:80,height:35,text:"關閉",onClick:()=>this.hideEducationPanel()})},this.addUIElement(this.educationPanel.closeButton),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click")}hideEducationPanel(){if(!this.showingEducation||!this.educationPanel)return;this.showingEducation=!1;const e=this.gameEngine.uiManager;Object.values(this.educationPanel).forEach(t=>{e.removeUIElement(t),this.removeUIElement(t)}),this.educationPanel=null,this.showSceneUI()}startCurrentStep(){if(this.currentStepIndex>=this.dryingSteps.length){this.proceedToNextScene();return}const e=this.dryingSteps[this.currentStepIndex];console.log(`開始步驟: ${e.name}`),this.hideEducationPanel(),this.hideSceneUI(),this.startHangingEnvironmentGame()}startHangingEnvironmentGame(){console.log("啟動懸掛和環境控制迷你遊戲"),this.startMiniGame(HangingEnvironmentGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:140,gameAreaWidth:600,gameAreaHeight:320,duckDisplay:this.duckDisplay,environmentControls:this.environmentControls,onProgressUpdate:e=>{this.updateDryingProgress(e)}}),console.log("Mini-game started. currentMiniGame:",this.currentMiniGame),console.log("currentMiniGame isActive:",this.currentMiniGame?this.currentMiniGame.isActive:"no mini-game")}updateDryingProgress(e){this.timeManager.dryingProgress=e.dryingProgress||0,this.duckDisplay.moistureLevel=e.moistureLevel||100,this.duckDisplay.skinTightness=e.skinTightness||0,this.dryingProgressLabel&&this.dryingProgressLabel.setText(`晾胚進度: ${Math.round(this.timeManager.dryingProgress)}%`),this.moistureLabel&&this.moistureLabel.setText(`水分含量: ${Math.round(this.duckDisplay.moistureLevel)}%`),this.tightnessLabel&&this.tightnessLabel.setText(`皮質緊實度: ${Math.round(this.duckDisplay.skinTightness)}%`)}update(e){super.update(e),this.updateTimeManager(e),this.updateEnvironmentSystem(e),this.updateVisualEffects(e),this.updateUIDisplays()}updateTimeManager(e){if(!this.timeManager.isPaused&&this.duckDisplay.isHanging){this.timeManager.currentTime+=e*this.timeManager.timeSpeed;const t=Math.min(this.timeManager.currentTime/this.timeManager.totalDryingTime,1);this.timeManager.dryingProgress=t*100*this.timeManager.qualityFactor,this.updateDuckDryingState(t)}}updateEnvironmentSystem(e){const t=this.environmentControls;let i=1;const s=t.temperature.optimal;(t.temperature.current<s.min||t.temperature.current>s.max)&&(i*=.8);const a=t.humidity.optimal;(t.humidity.current<a.min||t.humidity.current>a.max)&&(i*=.8);const n=t.airflow.optimal;(t.airflow.current<n.min||t.airflow.current>n.max)&&(i*=.9),this.timeManager.qualityFactor=Math.min(this.timeManager.qualityFactor,i)}updateDuckDryingState(e){const t=this.gameEngine.assetManager;this.duckDisplay.moistureLevel=Math.max(0,100-e*100),this.duckDisplay.skinTightness=Math.min(100,e*100),e<.3?(this.duckDisplay.dryingState="hanging",this.duckDisplay.duckImage=t.getAsset("duck_hanging")):e<.8?(this.duckDisplay.dryingState="drying",this.duckDisplay.duckImage=t.getAsset("duck_drying")):(this.duckDisplay.dryingState="dried",this.duckDisplay.duckImage=t.getAsset("duck_dried"))}updateVisualEffects(e){this.updateWindParticles(e),this.updateMoistureEffects(e),this.updateTemperatureIndicators(e)}updateWindParticles(e){const t=this.environmentControls.airflow.current;Math.random()<t*.1&&this.visualEffects.windParticles.push({x:0,y:150+Math.random()*200,vx:t*20+Math.random()*10,vy:(Math.random()-.5)*5,life:1,size:2+Math.random()*3}),this.visualEffects.windParticles=this.visualEffects.windParticles.filter(i=>(i.x+=i.vx*e,i.y+=i.vy*e,i.life-=e*.5,i.life>0&&i.x<800))}updateMoistureEffects(e){this.duckDisplay.isHanging&&this.duckDisplay.moistureLevel>20&&Math.random()<this.duckDisplay.moistureLevel*.001&&this.visualEffects.moistureDrops.push({x:this.duckDisplay.x+Math.random()*this.duckDisplay.width,y:this.duckDisplay.y+this.duckDisplay.height,vy:50+Math.random()*30,life:1,size:2+Math.random()*2}),this.visualEffects.moistureDrops=this.visualEffects.moistureDrops.filter(t=>(t.y+=t.vy*e,t.life-=e,t.life>0&&t.y<500))}updateTemperatureIndicators(e){this.environmentControls.temperature.current>20&&Math.random()<.05&&this.visualEffects.temperatureIndicators.push({x:100+Math.random()*600,y:400,vy:-20-Math.random()*10,life:2,opacity:.3,size:5+Math.random()*5}),this.visualEffects.temperatureIndicators=this.visualEffects.temperatureIndicators.filter(i=>(i.y+=i.vy*e,i.life-=e,i.opacity=i.life/2,i.life>0))}updateUIDisplays(){this.timeDisplayLabel&&this.timeDisplayLabel.setText(this.getTimeDisplayText()),this.temperatureLabel&&this.temperatureLabel.setText(`溫度: ${this.environmentControls.temperature.current}°C`),this.humidityLabel&&this.humidityLabel.setText(`濕度: ${this.environmentControls.humidity.current}%`),this.airflowLabel&&this.airflowLabel.setText(`通風: ${this.environmentControls.airflow.current}級`)}onMiniGameBack(){console.log("從迷你遊戲返回到晾胚場景"),this.showSceneUI()}onMiniGameComplete(e,t){const i=this.currentMiniGame?this.currentMiniGame.name:"未知遊戲";console.log(`${i}完成:`,e?"成功":"失敗"),this.showSceneUI(),e?this.onStepComplete("hanging_setup",e,t):this.showRetryMessage(),this.currentMiniGame=null}onStepComplete(e,t,i){if(console.log(`步驟 ${e} 完成:`,t?"成功":"失敗"),t){const s=this.dryingSteps.find(a=>a.id===e);s&&(s.completed=!0,this.duckDisplay.isHanging=!0,this.gameEngine.progressManager.completeStep(e),this.showSuccessMessage(s.name,i.score),this.currentStepIndex++,this.updateStepIndicator(),this.updateNextButton())}else this.showRetryMessage()}updateStepIndicator(){this.stepIndicator&&this.stepIndicator.setText(this.getStepIndicatorText())}updateNextButton(){this.currentStepIndex>=this.dryingSteps.length&&(this.sceneProgress.allStepsCompleted=!0,this.nextButton.setText("等待晾胚完成"),this.nextButton.onClick=()=>this.checkDryingCompletion(),this.gameEngine.updateGameState({progress:{...this.gameEngine.gameState.progress,drying:!1}}))}checkDryingCompletion(){this.timeManager.dryingProgress>=80?(this.sceneProgress.readyForNextScene=!0,this.nextButton.setText("進入烤製階段"),this.nextButton.onClick=()=>this.proceedToNextScene(),this.gameEngine.updateGameState({progress:{...this.gameEngine.gameState.progress,drying:!0}}),this.showCompletionMessage()):this.showIncompleteMessage()}showCompletionMessage(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas,i=e.createLabel({x:t.width/2,y:t.height/2-50,text:`晾胚完成！
品質評分: ${Math.round(this.timeManager.qualityFactor*100)}
鴨胚已達到最佳狀態！`,fontSize:18,color:"#32CD32",align:"center"});setTimeout(()=>{e.removeUIElement(i)},4e3),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("success_sound")}showIncompleteMessage(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas,i=e.createLabel({x:t.width/2,y:t.height/2-50,text:`晾胚進度: ${Math.round(this.timeManager.dryingProgress)}%
需要達到80%才能進入下一階段
請耐心等待或調整環境條件`,fontSize:16,color:"#FF8C00",align:"center"});setTimeout(()=>{e.removeUIElement(i)},3e3)}showSuccessMessage(e,t){const i=this.gameEngine.uiManager,s=this.gameEngine.canvas,a=i.createLabel({x:s.width/2,y:s.height/2-50,text:`${e}完成！
獲得分數: ${t}
晾胚過程開始！`,fontSize:18,color:"#32CD32",align:"center"});setTimeout(()=>{i.removeUIElement(a)},3e3),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("success_sound")}showRetryMessage(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas,i=e.createLabel({x:t.width/2,y:t.height/2-50,text:"懸掛需要精確操作，請再試一次",fontSize:18,color:"#FF6B6B",align:"center"});setTimeout(()=>{e.removeUIElement(i)},3e3)}goBack(){this.transitionToScene("preparation")}proceedToNextScene(){console.log("晾胚階段完成，進入烤製階段"),this.transitionToScene("roasting")}renderScene(e){this.renderDuckDisplay(e),this.renderEnvironmentPanel(e),this.renderTimePanel(e),this.renderVisualEffects(e),this.showingEducation&&this.renderEducationPanelBackground(e)}renderDuckDisplay(e){const t=this.duckDisplay;if(e.fillStyle="rgba(240, 248, 255, 0.95)",e.fillRect(t.x-15,t.y-15,t.width+30,t.height+30),e.strokeStyle="#4682B4",e.lineWidth=3,e.strokeRect(t.x-15,t.y-15,t.width+30,t.height+30),t.isHanging&&this.renderHangingSystem(e,t),t.duckImage){const s=t.isHanging?t.hangingHeight:0;e.drawImage(t.duckImage,t.x,t.y+s,t.width,t.height)}else e.fillStyle="#F0F8FF",e.fillRect(t.x,t.y,t.width,t.height),e.fillStyle="#708090",e.font="16px Microsoft JhengHei",e.textAlign="center",e.fillText("晾胚中的鴨胚",t.x+t.width/2,t.y+t.height/2);e.fillStyle="#4682B4",e.font="bold 16px Microsoft JhengHei",e.textAlign="center";let i="準備晾胚";t.dryingState==="hanging"?i="開始風乾":t.dryingState==="drying"?i="風乾中":t.dryingState==="dried"&&(i="風乾完成"),e.fillText(`鴨胚狀態: ${i}`,t.x+t.width/2,t.y-25),this.renderDryingProgressBar(e,t)}renderHangingSystem(e,t){e.strokeStyle="#8B4513",e.lineWidth=4,e.beginPath(),e.moveTo(t.x+t.width/2,t.y-40),e.lineTo(t.x+t.width/2,t.y-10),e.stroke(),e.fillStyle="#8B4513",e.beginPath(),e.arc(t.x+t.width/2,t.y-40,6,0,Math.PI*2),e.fill(),e.strokeStyle="#654321",e.lineWidth=2,e.beginPath(),e.moveTo(t.x+t.width/2,t.y-10),e.lineTo(t.x+t.width/2,t.y+10),e.stroke()}renderDryingProgressBar(e,t){const i=t.width,s=8,a=t.x,n=t.y+t.height+20;e.fillStyle="#E0E0E0",e.fillRect(a,n,i,s);const r=this.timeManager.dryingProgress/100*i;e.fillStyle="#4682B4",e.fillRect(a,n,r,s),e.strokeStyle="#708090",e.lineWidth=1,e.strokeRect(a,n,i,s),e.fillStyle="#2F4F4F",e.font="12px Microsoft JhengHei",e.textAlign="center",e.fillText(`${Math.round(this.timeManager.dryingProgress)}%`,a+i/2,n+s+15)}renderEnvironmentPanel(e){e.fillStyle="rgba(176, 196, 222, 0.8)",e.fillRect(560,200,180,140),e.strokeStyle="#4682B4",e.lineWidth=2,e.strokeRect(560,200,180,140),e.fillStyle="#2F4F4F",e.font="bold 14px Microsoft JhengHei",e.textAlign="center",e.fillText("環境控制",650,195),this.renderEnvironmentIndicators(e)}renderEnvironmentIndicators(e){const t=this.environmentControls,i=this.getEnvironmentColor(t.temperature.current,t.temperature.optimal);e.fillStyle=i,e.fillRect(570,350,15,15);const s=this.getEnvironmentColor(t.humidity.current,t.humidity.optimal);e.fillStyle=s,e.fillRect(570,370,15,15);const a=this.getEnvironmentColor(t.airflow.current,t.airflow.optimal);e.fillStyle=a,e.fillRect(570,390,15,15)}getEnvironmentColor(e,t){return e>=t.min&&e<=t.max?"#32CD32":e>=t.min-2&&e<=t.max+2?"#FFD700":"#FF6B6B"}renderTimePanel(e){e.fillStyle="rgba(255, 248, 220, 0.8)",e.fillRect(560,100,180,90),e.strokeStyle="#B8860B",e.lineWidth=2,e.strokeRect(560,100,180,90),e.fillStyle="#8B4513",e.font="bold 14px Microsoft JhengHei",e.textAlign="center",e.fillText("時間管理",650,95),this.renderTimeProgressRing(e)}renderTimeProgressRing(e){e.strokeStyle="#E0E0E0",e.lineWidth=4,e.beginPath(),e.arc(650,130,20,0,Math.PI*2),e.stroke();const a=this.timeManager.currentTime/this.timeManager.totalDryingTime,n=-Math.PI/2+a*Math.PI*2;e.strokeStyle="#4682B4",e.lineWidth=4,e.beginPath(),e.arc(650,130,20,-Math.PI/2,n),e.stroke(),e.fillStyle="#2F4F4F",e.font="10px Microsoft JhengHei",e.textAlign="center",e.fillText(`${Math.round(a*100)}%`,650,133)}renderVisualEffects(e){this.renderWindParticles(e),this.renderMoistureDrops(e),this.renderTemperatureEffects(e)}renderWindParticles(e){e.save(),this.visualEffects.windParticles.forEach(t=>{e.globalAlpha=t.life*.6,e.fillStyle="#87CEEB",e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()}),e.restore()}renderMoistureDrops(e){e.save(),this.visualEffects.moistureDrops.forEach(t=>{e.globalAlpha=t.life,e.fillStyle="#1E90FF",e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()}),e.restore()}renderTemperatureEffects(e){e.save(),this.visualEffects.temperatureIndicators.forEach(t=>{e.globalAlpha=t.opacity,e.fillStyle="#FFB6C1",e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()}),e.restore()}renderEducationPanelBackground(e){e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(0,0,e.canvas.width,e.canvas.height);const t=60,i=110,s=e.canvas.width-120,a=e.canvas.height-180;e.fillStyle="rgba(20, 20, 20, 0.95)",e.fillRect(t,i,s,a),e.strokeStyle="#FFD700",e.lineWidth=3,e.strokeRect(t,i,s,a);const n=e.canvas.width/2;e.strokeStyle="rgba(255, 215, 0, 0.3)",e.lineWidth=1,e.beginPath(),e.moveTo(n,i+50),e.lineTo(n,i+a-80),e.stroke();const r=20;e.fillStyle="#FFD700",e.fillRect(t,i,r,3),e.fillRect(t,i,3,r),e.fillRect(t+s-r,i,r,3),e.fillRect(t+s-3,i,3,r),e.fillRect(t,i+a-3,r,3),e.fillRect(t,i+a-r,3,r),e.fillRect(t+s-r,i+a-3,r,3),e.fillRect(t+s-3,i+a-r,3,r)}hideSceneUI(){this.titleLabel&&this.titleLabel.setVisible(!1),this.instructionLabel&&this.instructionLabel.setVisible(!1),this.stepIndicator&&this.stepIndicator.setVisible(!1),this.nextButton&&this.nextButton.setVisible(!1),this.backButton&&this.backButton.setVisible(!1),this.educationButton&&this.educationButton.setVisible(!1),this.timeDisplayLabel&&this.timeDisplayLabel.setVisible(!1),this.timeSpeedButton&&this.timeSpeedButton.setVisible(!1),this.pauseButton&&this.pauseButton.setVisible(!1),this.temperatureLabel&&this.temperatureLabel.setVisible(!1),this.humidityLabel&&this.humidityLabel.setVisible(!1),this.airflowLabel&&this.airflowLabel.setVisible(!1),this.dryingProgressLabel&&this.dryingProgressLabel.setVisible(!1),this.moistureLabel&&this.moistureLabel.setVisible(!1),this.tightnessLabel&&this.tightnessLabel.setVisible(!1)}showSceneUI(){if(this.titleLabel&&this.titleLabel.setVisible(!0),this.instructionLabel&&this.instructionLabel.setVisible(!0),this.stepIndicator&&this.stepIndicator.setVisible(!0),this.nextButton&&this.nextButton.setVisible(!0),this.educationButton&&this.currentStepIndex<this.dryingSteps.length){const e=this.dryingSteps[this.currentStepIndex];e&&e.educationContent&&this.educationButton.setVisible(!0)}this.backButton&&this.backButton.setVisible(!0),this.timeDisplayLabel&&this.timeDisplayLabel.setVisible(!0),this.timeSpeedButton&&this.timeSpeedButton.setVisible(!0),this.pauseButton&&this.pauseButton.setVisible(!0),this.temperatureLabel&&this.temperatureLabel.setVisible(!0),this.humidityLabel&&this.humidityLabel.setVisible(!0),this.airflowLabel&&this.airflowLabel.setVisible(!0),this.dryingProgressLabel&&this.dryingProgressLabel.setVisible(!0),this.moistureLabel&&this.moistureLabel.setVisible(!0),this.tightnessLabel&&this.tightnessLabel.setVisible(!0)}cleanup(){super.cleanup();const e=this.gameEngine.uiManager;this.titleLabel&&e.removeUIElement(this.titleLabel),this.instructionLabel&&e.removeUIElement(this.instructionLabel),this.stepIndicator&&e.removeUIElement(this.stepIndicator),this.nextButton&&e.removeUIElement(this.nextButton),this.backButton&&e.removeUIElement(this.backButton),this.educationButton&&e.removeUIElement(this.educationButton),this.timeDisplayLabel&&e.removeUIElement(this.timeDisplayLabel),this.timeSpeedButton&&e.removeUIElement(this.timeSpeedButton),this.pauseButton&&e.removeUIElement(this.pauseButton),this.temperatureLabel&&e.removeUIElement(this.temperatureLabel),this.humidityLabel&&e.removeUIElement(this.humidityLabel),this.airflowLabel&&e.removeUIElement(this.airflowLabel),this.dryingProgressLabel&&e.removeUIElement(this.dryingProgressLabel),this.moistureLabel&&e.removeUIElement(this.moistureLabel),this.tightnessLabel&&e.removeUIElement(this.tightnessLabel),this.hideEducationPanel()}};window.DryingScene=DryingScene$1;let RoastingScene$1=class extends Scene{constructor(e,t){super(e,t),this.titleLabel=null,this.instructionLabel=null,this.educationPanel=null,this.nextButton=null,this.backButton=null,this.stepIndicator=null,this.roastingSteps=[{id:"water_injection",name:"灌湯準備",description:"向鴨腹內注入適量熱水",miniGameClass:"WaterInjectionGame",completed:!1,educationContent:{title:"灌湯技術的科學原理",content:`💧 灌湯工藝精要：

🌡️ 水溫控制：
• 最佳溫度：80-85°C
• 水量比例：鴨重的1/3
• 注入速度：緩慢均勻
• 密封要求：確保不漏水

🔬 科學原理：
• 內部蒸煮：熱水產生蒸汽
• 肉質嫩化：蛋白質變性
• 汁液保持：防止水分流失
• 風味提升：內外同時烹調

⚖️ 品質控制：
• 水量精確：過多會破皮
• 溫度穩定：過熱會燙傷
• 時機把握：烤製前注入
• 密封檢查：防止漏水影響`}},{id:"temperature_control",name:"溫度調控",description:"精確控制烤爐溫度變化",miniGameClass:"TemperatureControlGame",completed:!1,educationContent:{title:"烤製溫度的階段控制",content:`🔥 溫度控制技術：

📊 溫度階段：
• 初期：250-270°C（15分鐘）
• 中期：200-220°C（30分鐘）
• 後期：180-200°C（15分鐘）
• 收尾：160-180°C（調色）

🎯 控制要點：
• 高溫定型：快速鎖住水分
• 中溫烤製：均勻受熱
• 低溫收色：完美外觀
• 即時調整：根據狀態變化

🔍 判斷標準：
• 皮色變化：金黃透亮
• 油脂滲出：表面光澤
• 香味散發：烤製香氣
• 時間控制：總計約60分鐘`}},{id:"rotation_timing",name:"翻轉時機",description:"掌握鴨子翻轉的最佳時機",miniGameClass:"RotationTimingGame",completed:!1,educationContent:{title:"翻轉技巧與時機掌握",content:`🔄 翻轉工藝要領：

⏰ 翻轉時機：
• 第一次：烤製15分鐘後
• 第二次：烤製35分鐘後
• 第三次：烤製50分鐘後
• 觀察法：皮色金黃時翻轉

🎯 技術要點：
• 動作輕柔：避免破皮
• 速度快捷：減少熱量流失
• 角度準確：確保均勻受熱
• 工具使用：專用烤叉

📈 品質影響：
• 色澤均勻：防止局部過焦
• 受熱平衡：內外同熟
• 油脂分布：表面光澤
• 形狀保持：避免變形`}}],this.currentStepIndex=0,this.showingEducation=!1,this.sceneProgress={allStepsCompleted:!1,readyForNextScene:!1},this.roastingSystem={oven:{currentTemp:25,targetTemp:250,maxTemp:300,minTemp:150,heatRate:5,coolRate:2,isHeating:!1,fuelLevel:100},duck:{internalTemp:25,skinColor:0,cookingProgress:0,moistureLevel:85,rotationCount:0,lastRotationTime:0,waterAmount:0,isWaterSealed:!1},timer:{totalTime:60*60,currentTime:0,isPaused:!1,timeSpeed:1,stageTime:0,currentStage:"initial"}},this.visualEffects={flames:[],smoke:[],steam:[],oilDrops:[],heatWaves:[]},this.ovenDisplay={x:150,y:150,width:400,height:250,duckX:300,duckY:200,duckWidth:120,duckHeight:80,duckRotation:0,flameHeight:0}}async loadSceneAssets(){const e=this.gameEngine.assetManager;await Promise.all([e.loadImage("assets/images/backgrounds/roasting_bg.png","background_roasting"),e.loadImage("assets/images/oven/oven_body.png","oven_body"),e.loadImage("assets/images/oven/oven_door.png","oven_door"),e.loadImage("assets/images/oven/flame_small.png","flame_small"),e.loadImage("assets/images/oven/flame_medium.png","flame_medium"),e.loadImage("assets/images/oven/flame_large.png","flame_large"),e.loadImage("assets/images/duck/duck_raw_roasting.png","duck_raw"),e.loadImage("assets/images/duck/duck_cooking.png","duck_cooking"),e.loadImage("assets/images/duck/duck_golden.png","duck_golden"),e.loadImage("assets/images/duck/duck_roasted.png","duck_roasted"),e.loadImage("assets/images/controls/temperature_gauge.png","temp_gauge"),e.loadImage("assets/images/controls/timer_display.png","timer_display"),e.loadImage("assets/images/controls/fuel_meter.png","fuel_meter"),e.loadImage("assets/images/effects/smoke_particle.png","smoke_particle"),e.loadImage("assets/images/effects/steam_particle.png","steam_particle"),e.loadImage("assets/images/effects/oil_drop.png","oil_drop"),e.loadImage("assets/images/effects/heat_wave.png","heat_wave")]),this.backgroundImage=e.getAsset("background_roasting")}setupScene(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.titleLabel=e.createLabel({x:t.width/2,y:40,text:"烤製階段 - 火候掌控",fontSize:26,color:"#DC143C",align:"center"}),this.instructionLabel=e.createLabel({x:t.width/2,y:80,text:"精確控制溫度、時間與翻轉，成就完美北京烤鴨",fontSize:16,color:"#8B4513",align:"center"}),this.createStepIndicator(),this.createEducationButton(),this.createRoastingControlPanel(),this.createTemperatureMonitor(),this.createTimeManagementPanel(),this.nextButton=e.createButton({x:t.width-180,y:t.height-80,width:130,height:50,text:"開始灌湯",onClick:()=>this.startCurrentStep()}),this.addUIElement(this.nextButton),this.backButton=e.createButton({x:50,y:t.height-80,width:100,height:50,text:"返回",onClick:()=>this.goBack()}),this.addUIElement(this.backButton),console.log("烤製場景設置完成")}createStepIndicator(){const e=this.gameEngine.uiManager;this.stepIndicator=e.createLabel({x:50,y:120,text:this.getStepIndicatorText(),fontSize:14,color:"#DC143C",align:"left"})}getStepIndicatorText(){let e=`烤製步驟進度：
`;return this.roastingSteps.forEach((t,i)=>{const s=t.completed?"✅":i===this.currentStepIndex?"🔄":"⏳";e+=`${s} ${i+1}. ${t.name}
`}),e}createEducationButton(){const t=this.gameEngine.uiManager.createButton({x:50,y:200,width:130,height:40,text:"學習烤製技術",onClick:()=>this.showCurrentStepEducation()});this.addUIElement(t),this.addUIElement(t)}createRoastingControlPanel(){const e=this.gameEngine.uiManager;this.tempControlLabel=e.createLabel({x:580,y:120,text:"烤爐控制面板",fontSize:16,color:"#8B0000",align:"left"}),this.targetTempLabel=e.createLabel({x:580,y:145,text:`目標溫度: ${this.roastingSystem.oven.targetTemp}°C`,fontSize:14,color:"#FF4500",align:"left"}),this.currentTempLabel=e.createLabel({x:580,y:165,text:`當前溫度: ${this.roastingSystem.oven.currentTemp}°C`,fontSize:14,color:"#FF6347",align:"left"}),this.fuelLabel=e.createLabel({x:580,y:185,text:`燃料水平: ${this.roastingSystem.oven.fuelLevel}%`,fontSize:14,color:"#DAA520",align:"left"}),this.addUIElement(this.tempControlLabel),this.addUIElement(this.targetTempLabel),this.addUIElement(this.currentTempLabel),this.addUIElement(this.fuelLabel)}createTemperatureMonitor(){const e=this.gameEngine.uiManager;this.duckTempLabel=e.createLabel({x:580,y:220,text:`鴨子內溫: ${this.roastingSystem.duck.internalTemp}°C`,fontSize:14,color:"#CD853F",align:"left"}),this.skinColorLabel=e.createLabel({x:580,y:240,text:`皮色進度: ${this.roastingSystem.duck.skinColor}%`,fontSize:14,color:"#DEB887",align:"left"}),this.cookingProgressLabel=e.createLabel({x:580,y:260,text:`烹飪進度: ${this.roastingSystem.duck.cookingProgress}%`,fontSize:14,color:"#D2691E",align:"left"}),this.addUIElement(this.duckTempLabel),this.addUIElement(this.skinColorLabel),this.addUIElement(this.cookingProgressLabel)}createTimeManagementPanel(){const e=this.gameEngine.uiManager;this.timeDisplayLabel=e.createLabel({x:580,y:300,text:this.getTimeDisplayText(),fontSize:14,color:"#2F4F4F",align:"left"}),this.stageLabel=e.createLabel({x:580,y:320,text:`當前階段: ${this.getStageDisplayText()}`,fontSize:14,color:"#4682B4",align:"left"}),this.rotationLabel=e.createLabel({x:580,y:340,text:`翻轉次數: ${this.roastingSystem.duck.rotationCount}/3`,fontSize:14,color:"#708090",align:"left"}),this.addUIElement(this.timeDisplayLabel),this.addUIElement(this.stageLabel),this.addUIElement(this.rotationLabel)}getTimeDisplayText(){const e=Math.floor(this.roastingSystem.timer.currentTime/60),t=Math.floor(this.roastingSystem.timer.totalTime/60);return`烤製時間: ${e}:${(this.roastingSystem.timer.currentTime%60).toFixed(0).padStart(2,"0")} / ${t}:00`}getStageDisplayText(){return{initial:"準備階段",high:"高溫定型",medium:"中溫烤製",low:"低溫收色",finish:"完成階段"}[this.roastingSystem.timer.currentStage]||"未知階段"}showCurrentStepEducation(){if(this.currentStepIndex>=this.roastingSteps.length)return;const e=this.roastingSteps[this.currentStepIndex];this.showEducationPanel(e.educationContent)}showEducationPanel(e){this.showingEducation=!0;const t=this.gameEngine.uiManager,i=this.gameEngine.canvas;this.educationPanel={title:t.createLabel({x:i.width/2,y:120,text:e.title,fontSize:20,color:"#FFD700",align:"center"}),content:t.createLabel({x:80,y:160,text:e.content,fontSize:14,color:"#FFFFFF",align:"left"}),closeButton:t.createButton({x:i.width/2-40,y:i.height-120,width:80,height:35,text:"關閉",onClick:()=>this.hideEducationPanel()})},this.addUIElement(this.educationPanel.closeButton),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click")}hideEducationPanel(){if(!this.showingEducation||!this.educationPanel)return;this.showingEducation=!1;const e=this.gameEngine.uiManager;Object.values(this.educationPanel).forEach(t=>{e.removeUIElement(t),this.removeUIElement(t)}),this.educationPanel=null}startCurrentStep(){if(this.currentStepIndex>=this.roastingSteps.length){this.proceedToNextScene();return}const e=this.roastingSteps[this.currentStepIndex];switch(console.log(`開始步驟: ${e.name}`),this.hideEducationPanel(),this.hideSceneUI(),e.id){case"water_injection":this.startWaterInjectionGame();break;case"temperature_control":this.startTemperatureControlGame();break;case"rotation_timing":this.startRotationTimingGame();break}}startWaterInjectionGame(){console.log("啟動灌湯迷你遊戲"),this.startMiniGame(WaterInjectionGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:140,gameAreaWidth:600,gameAreaHeight:320,roastingSystem:this.roastingSystem})}startTemperatureControlGame(){console.log("啟動溫度控制迷你遊戲"),this.startMiniGame(TemperatureControlGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:140,gameAreaWidth:600,gameAreaHeight:320,roastingSystem:this.roastingSystem})}startRotationTimingGame(){console.log("啟動翻轉時機迷你遊戲"),this.startMiniGame(RotationTimingGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:140,gameAreaWidth:600,gameAreaHeight:320,roastingSystem:this.roastingSystem})}hideSceneUI(){this.uiElements.forEach(e=>{e.setVisible&&e.setVisible(!1)})}showSceneUI(){this.uiElements.forEach(e=>{if(e.setVisible)if(e===this.educationButton){if(this.currentStepIndex<this.roastingSteps.length){const t=this.roastingSteps[this.currentStepIndex];t&&t.educationContent&&e.setVisible(!0)}}else e.setVisible(!0)})}update(e){super.update(e),this.updateRoastingSystem(e),this.updateVisualEffects(e),this.updateUIDisplays()}updateRoastingSystem(e){this.roastingSystem,this.updateOvenTemperature(e),this.updateDuckState(e),this.updateTimeManagement(e),this.updateRoastingStage()}updateOvenTemperature(e){const t=this.roastingSystem.oven;t.isHeating&&t.fuelLevel>0?(t.currentTemp<t.targetTemp&&(t.currentTemp=Math.min(t.targetTemp,t.currentTemp+t.heatRate*e)),t.fuelLevel=Math.max(0,t.fuelLevel-.5*e)):t.currentTemp=Math.max(25,t.currentTemp-t.coolRate*e)}updateDuckState(e){const t=this.roastingSystem.duck,i=this.roastingSystem.oven;if(i.currentTemp>t.internalTemp){const s=i.currentTemp-t.internalTemp;t.internalTemp+=Math.min(s*.1*e,2*e)}if(t.internalTemp>60){const s=(t.internalTemp-60)/100;t.skinColor=Math.min(100,t.skinColor+s*10*e)}if(t.internalTemp>50){const s=(t.internalTemp-50)/80;t.cookingProgress=Math.min(100,t.cookingProgress+s*5*e)}t.internalTemp>70&&(t.moistureLevel=Math.max(40,t.moistureLevel-2*e))}updateTimeManagement(e){const t=this.roastingSystem.timer;t.isPaused||(t.currentTime+=e*t.timeSpeed,t.stageTime+=e*t.timeSpeed)}updateRoastingStage(){const e=this.roastingSystem.timer,t=e.currentTime/60;t<15?(e.currentStage="high",this.roastingSystem.oven.targetTemp=260):t<45?(e.currentStage="medium",this.roastingSystem.oven.targetTemp=210):t<55?(e.currentStage="low",this.roastingSystem.oven.targetTemp=190):(e.currentStage="finish",this.roastingSystem.oven.targetTemp=170)}updateVisualEffects(e){this.updateFlameEffects(e),this.updateSmokeEffects(e),this.updateSteamEffects(e),this.updateOilDropEffects(e)}updateFlameEffects(e){const t=this.roastingSystem.oven;if(t.isHeating&&t.fuelLevel>0){const i=Math.min(1,t.fuelLevel/100);Math.random()<i*.3&&this.visualEffects.flames.push({x:this.ovenDisplay.x+50+Math.random()*300,y:this.ovenDisplay.y+this.ovenDisplay.height-20,height:20+Math.random()*30*i,life:.5+Math.random()*.5,intensity:i})}this.visualEffects.flames=this.visualEffects.flames.filter(i=>(i.life-=e*2,i.height*=.98,i.life>0))}updateSmokeEffects(e){const t=this.roastingSystem.duck;t.cookingProgress>20&&Math.random()<t.cookingProgress*.002&&this.visualEffects.smoke.push({x:this.ovenDisplay.duckX+Math.random()*this.ovenDisplay.duckWidth,y:this.ovenDisplay.duckY,vx:(Math.random()-.5)*10,vy:-20-Math.random()*10,life:2+Math.random(),size:3+Math.random()*5,opacity:.6}),this.visualEffects.smoke=this.visualEffects.smoke.filter(i=>(i.x+=i.vx*e,i.y+=i.vy*e,i.life-=e,i.opacity=i.life/3,i.size+=e*2,i.life>0))}updateSteamEffects(e){const t=this.roastingSystem.duck;t.waterAmount>0&&t.internalTemp>80&&Math.random()<.1&&this.visualEffects.steam.push({x:this.ovenDisplay.duckX+this.ovenDisplay.duckWidth/2,y:this.ovenDisplay.duckY+this.ovenDisplay.duckHeight,vx:(Math.random()-.5)*5,vy:-15-Math.random()*5,life:1.5,size:2+Math.random()*3,opacity:.8}),this.visualEffects.steam=this.visualEffects.steam.filter(i=>(i.x+=i.vx*e,i.y+=i.vy*e,i.life-=e,i.opacity=i.life/1.5,i.life>0))}updateOilDropEffects(e){const t=this.roastingSystem.duck;t.skinColor>30&&Math.random()<t.skinColor*.001&&this.visualEffects.oilDrops.push({x:this.ovenDisplay.duckX+Math.random()*this.ovenDisplay.duckWidth,y:this.ovenDisplay.duckY+this.ovenDisplay.duckHeight,vy:20+Math.random()*10,life:1,size:1+Math.random()*2}),this.visualEffects.oilDrops=this.visualEffects.oilDrops.filter(i=>(i.y+=i.vy*e,i.life-=e,i.life>0&&i.y<this.ovenDisplay.y+this.ovenDisplay.height+50))}updateUIDisplays(){const e=this.roastingSystem;this.targetTempLabel&&this.targetTempLabel.setText(`目標溫度: ${Math.round(e.oven.targetTemp)}°C`),this.currentTempLabel&&this.currentTempLabel.setText(`當前溫度: ${Math.round(e.oven.currentTemp)}°C`),this.fuelLabel&&this.fuelLabel.setText(`燃料水平: ${Math.round(e.oven.fuelLevel)}%`),this.duckTempLabel&&this.duckTempLabel.setText(`鴨子內溫: ${Math.round(e.duck.internalTemp)}°C`),this.skinColorLabel&&this.skinColorLabel.setText(`皮色進度: ${Math.round(e.duck.skinColor)}%`),this.cookingProgressLabel&&this.cookingProgressLabel.setText(`烹飪進度: ${Math.round(e.duck.cookingProgress)}%`),this.timeDisplayLabel&&this.timeDisplayLabel.setText(this.getTimeDisplayText()),this.stageLabel&&this.stageLabel.setText(`當前階段: ${this.getStageDisplayText()}`),this.rotationLabel&&this.rotationLabel.setText(`翻轉次數: ${e.duck.rotationCount}/3`)}onMiniGameBack(){console.log("從迷你遊戲返回到烘烤場景"),this.showSceneUI()}onMiniGameComplete(e,t){const i=this.currentMiniGame?this.currentMiniGame.name:"未知遊戲";if(console.log(`${i}完成:`,e?"成功":"失敗"),this.showSceneUI(),e){const s=this.roastingSteps[this.currentStepIndex];this.onStepComplete(s.id,e,t)}else this.showRetryMessage();this.currentMiniGame=null}onStepComplete(e,t,i){if(console.log(`步驟 ${e} 完成:`,t?"成功":"失敗"),t){const s=this.roastingSteps.find(a=>a.id===e);s&&(s.completed=!0,this.updateSystemAfterStep(e,i),this.gameEngine.progressManager.completeStep(e),this.showSuccessMessage(s.name,i.score),this.currentStepIndex++,this.updateStepIndicator(),this.updateNextButton())}else this.showRetryMessage()}updateSystemAfterStep(e,t){const i=this.roastingSystem;switch(e){case"water_injection":i.duck.waterAmount=t.waterAmount||75,i.duck.isWaterSealed=!0,i.oven.isHeating=!0;break;case"temperature_control":i.timer.isPaused=!1;break;case"rotation_timing":i.duck.rotationCount++,i.duck.lastRotationTime=i.timer.currentTime;break}}updateStepIndicator(){this.stepIndicator&&this.stepIndicator.setText(this.getStepIndicatorText())}updateNextButton(){if(this.currentStepIndex>=this.roastingSteps.length)this.sceneProgress.allStepsCompleted=!0,this.nextButton.setText("檢查烤製進度"),this.nextButton.onClick=()=>this.checkRoastingCompletion();else{const e=this.roastingSteps[this.currentStepIndex],t={water_injection:"開始灌湯",temperature_control:"控制溫度",rotation_timing:"掌握翻轉"};this.nextButton.setText(t[e.id]||"下一步")}}checkRoastingCompletion(){const e=this.roastingSystem.duck,t=this.roastingSystem.timer,i=t.currentTime>=t.totalTime*.9,s=e.cookingProgress>=85,a=e.skinColor>=70;i&&s&&a?(this.sceneProgress.readyForNextScene=!0,this.nextButton.setText("進入片鴨階段"),this.nextButton.onClick=()=>this.proceedToNextScene(),this.gameEngine.updateGameState({progress:{...this.gameEngine.gameState.progress,roasting:!0}}),this.showCompletionMessage()):this.showIncompleteMessage(i,s,a)}showCompletionMessage(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas,i=this.roastingSystem.duck,s=Math.round((i.cookingProgress+i.skinColor)/2);e.createDismissibleMessage({text:`烤製完成！
品質評分: ${s}
北京烤鴨已達到完美狀態！`,x:t.width/2,y:t.height/2-50,fontSize:18,color:"#32CD32",autoDismissTime:5e3}),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("success_sound")}showIncompleteMessage(e,t,i){const s=this.gameEngine.uiManager,a=this.gameEngine.canvas;let n=`烤製尚未完成：
`;e||(n+=`• 烤製時間不足
`),t||(n+=`• 烹飪程度不夠
`),i||(n+=`• 皮色還需改善
`),n+="請繼續烤製或調整參數",s.createDismissibleMessage({text:n,x:a.width/2,y:a.height/2-50,fontSize:16,color:"#FF8C00",autoDismissTime:5e3})}showSuccessMessage(e,t){const i=this.gameEngine.uiManager,s=this.gameEngine.canvas;i.createDismissibleMessage({text:`${e}完成！
獲得分數: ${t}
烤製過程繼續進行`,x:s.width/2,y:s.height/2-50,fontSize:18,color:"#32CD32",autoDismissTime:5e3}),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("success_sound")}showRetryMessage(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas,i=e.createLabel({x:t.width/2,y:t.height/2-50,text:"烤製需要精確控制，請再試一次",fontSize:18,color:"#FF6B6B",align:"center"});setTimeout(()=>{e.removeUIElement(i)},3e3)}goBack(){this.transitionToScene("drying")}proceedToNextScene(){console.log("烤製階段完成，進入片鴨階段"),this.transitionToScene("slicing")}renderScene(e){this.renderOvenSystem(e),this.renderDuckState(e),this.renderControlPanels(e),this.renderVisualEffects(e),this.showingEducation&&this.renderEducationPanelBackground(e)}renderOvenSystem(e){const t=this.ovenDisplay,i=this.roastingSystem.oven;e.fillStyle="#8B4513",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#654321",e.lineWidth=4,e.strokeRect(t.x,t.y,t.width,t.height),e.fillStyle=i.isHeating?"#FF4500":"#2F2F2F",e.fillRect(t.x+10,t.y+10,t.width-20,t.height-20);const s=Math.min(1,i.currentTemp/i.maxTemp),a=(t.height-40)*s;e.fillStyle=this.getTemperatureColor(i.currentTemp),e.fillRect(t.x+t.width-30,t.y+t.height-20-a,20,a),e.strokeStyle="#FFFFFF",e.lineWidth=1,e.strokeRect(t.x+t.width-30,t.y+20,20,t.height-40)}getTemperatureColor(e){return e<100?"#4169E1":e<150?"#32CD32":e<200?"#FFD700":e<250?"#FF8C00":"#FF0000"}renderDuckState(e){const t=this.ovenDisplay,i=this.roastingSystem.duck,s=i.skinColor/100,a=Math.floor(139+116*s),n=Math.floor(69+146*s),r=Math.floor(19+-19*s);e.save(),e.translate(t.duckX+t.duckWidth/2,t.duckY+t.duckHeight/2),e.rotate(i.rotationCount*Math.PI),e.fillStyle=`rgb(${a}, ${n}, ${r})`,e.fillRect(-t.duckWidth/2,-t.duckHeight/2,t.duckWidth,t.duckHeight),e.strokeStyle="#654321",e.lineWidth=2,e.strokeRect(-t.duckWidth/2,-t.duckHeight/2,t.duckWidth,t.duckHeight),e.restore();const h=t.y-30;e.fillStyle="#CCCCCC",e.fillRect(t.x,h,t.width,15),e.fillStyle="#32CD32",e.fillRect(t.x,h,t.width*(i.cookingProgress/100),15),e.strokeStyle="#000000",e.lineWidth=1,e.strokeRect(t.x,h,t.width,15),e.fillStyle="#000000",e.font="12px Arial",e.textAlign="center",e.fillText(`烹飪進度: ${Math.round(i.cookingProgress)}%`,t.x+t.width/2,h-5)}renderControlPanels(e){e.fillStyle="rgba(47, 79, 79, 0.9)",e.fillRect(570,110,220,250),e.strokeStyle="#708090",e.lineWidth=2,e.strokeRect(570,110,220,250);const t=this.roastingSystem.oven.fuelLevel/100;e.fillStyle="#8B0000",e.fillRect(720,180,15,50),e.fillStyle=t>.3?"#32CD32":"#FF0000",e.fillRect(720,180+50*(1-t),15,50*t),e.strokeStyle="#000000",e.lineWidth=1,e.strokeRect(720,180,15,50)}renderVisualEffects(e){this.renderFlames(e),this.renderSmoke(e),this.renderSteam(e),this.renderOilDrops(e)}renderFlames(e){this.visualEffects.flames.forEach(t=>{const i=t.life/1;e.fillStyle=`rgba(255, ${Math.floor(100+155*t.intensity)}, 0, ${i})`,e.fillRect(t.x-5,t.y-t.height,10,t.height)})}renderSmoke(e){this.visualEffects.smoke.forEach(t=>{e.fillStyle=`rgba(105, 105, 105, ${t.opacity})`,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()})}renderSteam(e){this.visualEffects.steam.forEach(t=>{e.fillStyle=`rgba(255, 255, 255, ${t.opacity})`,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()})}renderOilDrops(e){this.visualEffects.oilDrops.forEach(t=>{e.fillStyle=`rgba(255, 215, 0, ${t.life})`,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()})}renderEducationPanelBackground(e){e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(0,0,e.canvas.width,e.canvas.height);const t=60,i=100,s=e.canvas.width-120,a=e.canvas.height-200;e.fillStyle="rgba(139, 69, 19, 0.95)",e.fillRect(t,i,s,a),e.strokeStyle="#FFD700",e.lineWidth=3,e.strokeRect(t,i,s,a)}cleanup(){super.cleanup();const e=this.gameEngine.uiManager;this.uiElements.forEach(t=>{e.removeUIElement(t)}),this.hideEducationPanel()}};window.RoastingScene=RoastingScene$1;let SlicingScene$1=class extends Scene{constructor(e,t){super(e,t),this.titleLabel=null,this.instructionLabel=null,this.educationPanel=null,this.nextButton=null,this.backButton=null,this.stepIndicator=null,this.slicingSteps=[{id:"skin_slicing",name:"片皮技法",description:"運用傳統技法精確片取鴨皮",miniGameClass:"SkinSlicingGame",completed:!1,educationContent:{title:"北京烤鴨片皮技藝",content:`🔪 片皮技法精要：

📏 刀法要求：
• 刀具選擇：薄刃片刀，鋒利無比
• 角度控制：與皮面成15-20度角
• 力度掌握：輕柔均勻，不可用力
• 速度節奏：穩定連貫，一氣呵成

🎯 片皮標準：
• 厚度均勻：約2-3毫米
• 大小一致：長約5公分，寬約3公分
• 形狀規整：長方形或橢圓形
• 皮肉分離：帶少許肉絲增加口感

🏆 技藝要點：
• 觀察紋理：順著皮的紋理切片
• 保持溫度：趁熱片切，皮脆肉嫩
• 動作流暢：連續不斷，避免停頓
• 擺盤美觀：片片分明，層次清晰`}},{id:"meat_slicing",name:"片肉技巧",description:"將鴨肉切成適合入口的薄片",miniGameClass:"MeatSlicingGame",completed:!1,educationContent:{title:"鴨肉切片的精細工藝",content:`🥩 片肉技術要領：

✂️ 切片技巧：
• 刀法變化：與片皮不同，需垂直切入
• 厚度控制：約3-4毫米，略厚於皮片
• 紋理處理：逆紋切片，口感更佳
• 部位選擇：胸肉、腿肉分別處理

🎨 美觀要求：
• 形狀統一：長條形或扇形排列
• 色澤保持：保持肉質的自然色澤
• 汁液保存：避免過度擠壓失水
• 溫度維持：保持適宜的食用溫度

📐 分量控制：
• 每片重量：約8-10克
• 總片數：根據鴨子大小調整
• 搭配比例：皮肉比例約1:2
• 剩餘處理：骨架可製作鴨架湯`}},{id:"plating_arrangement",name:"擺盤藝術",description:"將片好的鴨皮鴨肉進行藝術擺盤",miniGameClass:"PlatingArrangementGame",completed:!1,educationContent:{title:"北京烤鴨擺盤的藝術美學",content:`🍽️ 擺盤美學原理：

🎨 視覺設計：
• 色彩搭配：金黃鴨皮與紅潤鴨肉對比
• 層次分明：皮片在上，肉片在下
• 形狀美觀：扇形、花瓣形等經典造型
• 留白藝術：適當空間增加美感

🏮 傳統元素：
• 對稱美學：體現中式審美理念
• 寓意吉祥：圓滿、豐收等美好寓意
• 季節特色：根據時令調整擺盤風格
• 文化內涵：體現飲食文化的深度

🌟 創新融合：
• 現代技法：結合當代擺盤理念
• 個性表達：展現廚師的藝術修養
• 實用性：美觀與實用並重
• 溫度保持：確保最佳品嚐溫度`}}],this.currentStepIndex=0,this.showingEducation=!1,this.sceneProgress={allStepsCompleted:!1,readyForNextScene:!1},this.slicingSystem={duck:{temperature:65,skinIntegrity:100,meatTexture:100,juiciness:85,totalWeight:2500,slicedWeight:0,wasteAmount:0},knife:{sharpness:100,angle:20,speed:50,pressure:30,technique:"traditional"},slices:{skin:{count:0,averageThickness:0,uniformity:0,quality:0},meat:{count:0,averageThickness:0,uniformity:0,quality:0}},plating:{style:"traditional",symmetry:0,colorBalance:0,spacing:0,creativity:0,overallScore:0}},this.visualEffects={knifeTrails:[],sliceParticles:[],steamEffects:[],juiceDrops:[],sparkles:[]},this.workStation={x:100,y:120,width:500,height:300,duckX:250,duckY:200,duckWidth:200,duckHeight:120,plateX:450,plateY:180,plateWidth:120,plateHeight:80,knifeX:150,knifeY:250,knifeAngle:0},this.traditionalServing={pancakes:{count:0,prepared:!1},scallions:{count:0,prepared:!1},cucumber:{count:0,prepared:!1},sauce:{amount:0,prepared:!1},presentation:{style:"classic",score:0}}}async loadSceneAssets(){const e=this.gameEngine.assetManager;await Promise.all([e.loadImage("assets/images/backgrounds/slicing_bg.png","background_slicing"),e.loadImage("assets/images/workstation/cutting_board.png","cutting_board"),e.loadImage("assets/images/workstation/serving_plate.png","serving_plate"),e.loadImage("assets/images/workstation/knife_set.png","knife_set"),e.loadImage("assets/images/duck/duck_roasted_whole.png","duck_whole"),e.loadImage("assets/images/duck/duck_skin_sliced.png","duck_skin_sliced"),e.loadImage("assets/images/duck/duck_meat_sliced.png","duck_meat_sliced"),e.loadImage("assets/images/duck/duck_bones_remaining.png","duck_bones"),e.loadImage("assets/images/slices/skin_slice.png","skin_slice"),e.loadImage("assets/images/slices/meat_slice.png","meat_slice"),e.loadImage("assets/images/accompaniments/pancake.png","pancake"),e.loadImage("assets/images/accompaniments/scallion.png","scallion"),e.loadImage("assets/images/accompaniments/cucumber.png","cucumber"),e.loadImage("assets/images/accompaniments/sauce_bowl.png","sauce_bowl"),e.loadImage("assets/images/tools/slicing_knife.png","slicing_knife"),e.loadImage("assets/images/effects/knife_trail.png","knife_trail"),e.loadImage("assets/images/effects/slice_particle.png","slice_particle"),e.loadImage("assets/images/effects/juice_drop.png","juice_drop"),e.loadImage("assets/images/effects/sparkle.png","sparkle")]),this.backgroundImage=e.getAsset("background_slicing")}setupScene(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.titleLabel=e.createLabel({x:t.width/2,y:40,text:"片鴨階段 - 技藝展示",fontSize:26,color:"#DC143C",align:"center"}),this.instructionLabel=e.createLabel({x:t.width/2,y:80,text:"運用傳統技法，將烤鴨片成薄片，展現千年技藝精髓",fontSize:16,color:"#8B4513",align:"center"}),this.createStepIndicator(),this.createEducationButton(),this.createSlicingTechniquePanel(),this.createQualityMonitorPanel(),this.createTraditionalServingPanel(),this.nextButton=e.createButton({x:t.width-180,y:t.height-80,width:130,height:50,text:"開始片皮",onClick:()=>this.startCurrentStep()}),this.addUIElement(this.nextButton),this.backButton=e.createButton({x:50,y:t.height-80,width:100,height:50,text:"返回",onClick:()=>this.goBack()}),this.addUIElement(this.backButton),console.log("片鴨場景設置完成")}createStepIndicator(){const e=this.gameEngine.uiManager;this.stepIndicator=e.createLabel({x:50,y:120,text:this.getStepIndicatorText(),fontSize:14,color:"#DC143C",align:"left"})}getStepIndicatorText(){let e=`片鴨步驟進度：
`;return this.slicingSteps.forEach((t,i)=>{const s=t.completed?"✅":i===this.currentStepIndex?"🔄":"⏳";e+=`${s} ${i+1}. ${t.name}
`}),e}createEducationButton(){const t=this.gameEngine.uiManager.createButton({x:50,y:200,width:130,height:40,text:"學習片鴨技藝",onClick:()=>this.showCurrentStepEducation()});this.addUIElement(t),this.addUIElement(t)}createSlicingTechniquePanel(){const e=this.gameEngine.uiManager;this.techniqueLabel=e.createLabel({x:620,y:120,text:"片鴨技法控制",fontSize:16,color:"#8B0000",align:"left"}),this.knifeStatusLabel=e.createLabel({x:620,y:145,text:`刀具鋒利度: ${this.slicingSystem.knife.sharpness}%`,fontSize:14,color:"#FF4500",align:"left"}),this.angleLabel=e.createLabel({x:620,y:165,text:`切片角度: ${this.slicingSystem.knife.angle}°`,fontSize:14,color:"#FF6347",align:"left"}),this.pressureLabel=e.createLabel({x:620,y:185,text:`施力大小: ${this.slicingSystem.knife.pressure}%`,fontSize:14,color:"#DAA520",align:"left"}),this.addUIElement(this.techniqueLabel),this.addUIElement(this.knifeStatusLabel),this.addUIElement(this.angleLabel),this.addUIElement(this.pressureLabel)}createQualityMonitorPanel(){const e=this.gameEngine.uiManager;this.duckTempLabel=e.createLabel({x:620,y:220,text:`鴨子溫度: ${this.slicingSystem.duck.temperature}°C`,fontSize:14,color:"#CD853F",align:"left"}),this.skinQualityLabel=e.createLabel({x:620,y:240,text:`皮片品質: ${this.slicingSystem.slices.skin.quality}%`,fontSize:14,color:"#DEB887",align:"left"}),this.meatQualityLabel=e.createLabel({x:620,y:260,text:`肉片品質: ${this.slicingSystem.slices.meat.quality}%`,fontSize:14,color:"#D2691E",align:"left"}),this.wasteRateLabel=e.createLabel({x:620,y:280,text:`浪費率: ${this.calculateWasteRate()}%`,fontSize:14,color:"#B22222",align:"left"}),this.addUIElement(this.duckTempLabel),this.addUIElement(this.skinQualityLabel),this.addUIElement(this.meatQualityLabel),this.addUIElement(this.wasteRateLabel)}createTraditionalServingPanel(){const e=this.gameEngine.uiManager;this.servingLabel=e.createLabel({x:620,y:320,text:"傳統吃法配菜",fontSize:16,color:"#8B0000",align:"left"}),this.pancakeLabel=e.createLabel({x:620,y:345,text:`荷葉餅: ${this.traditionalServing.pancakes.count}張`,fontSize:14,color:"#DEB887",align:"left"}),this.scallionLabel=e.createLabel({x:620,y:365,text:`蔥絲: ${this.traditionalServing.scallions.prepared?"已準備":"未準備"}`,fontSize:14,color:"#228B22",align:"left"}),this.cucumberLabel=e.createLabel({x:620,y:385,text:`黃瓜條: ${this.traditionalServing.cucumber.prepared?"已準備":"未準備"}`,fontSize:14,color:"#32CD32",align:"left"}),this.sauceLabel=e.createLabel({x:620,y:405,text:`甜麵醬: ${this.traditionalServing.sauce.prepared?"已準備":"未準備"}`,fontSize:14,color:"#8B4513",align:"left"}),this.addUIElement(this.servingLabel),this.addUIElement(this.pancakeLabel),this.addUIElement(this.scallionLabel),this.addUIElement(this.cucumberLabel),this.addUIElement(this.sauceLabel)}calculateWasteRate(){const e=this.slicingSystem.duck.totalWeight,t=this.slicingSystem.duck.wasteAmount;return e>0?Math.round(t/e*100):0}showCurrentStepEducation(){if(this.currentStepIndex>=this.slicingSteps.length)return;const e=this.slicingSteps[this.currentStepIndex];this.showEducationPanel(e.educationContent)}showEducationPanel(e){this.showingEducation=!0;const t=this.gameEngine.uiManager,i=this.gameEngine.canvas;this.educationPanel={title:t.createLabel({x:i.width/2,y:120,text:e.title,fontSize:20,color:"#FFD700",align:"center"}),content:t.createLabel({x:80,y:160,text:e.content,fontSize:14,color:"#FFFFFF",align:"left"}),closeButton:t.createButton({x:i.width/2-40,y:i.height-120,width:80,height:35,text:"關閉",onClick:()=>this.hideEducationPanel()})},this.addUIElement(this.educationPanel.closeButton),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click")}hideEducationPanel(){if(!this.showingEducation||!this.educationPanel)return;this.showingEducation=!1;const e=this.gameEngine.uiManager;Object.values(this.educationPanel).forEach(t=>{e.removeUIElement(t),this.removeUIElement(t)}),this.educationPanel=null}startCurrentStep(){if(this.currentStepIndex>=this.slicingSteps.length){this.proceedToNextScene();return}const e=this.slicingSteps[this.currentStepIndex];switch(console.log(`開始步驟: ${e.name}`),this.hideEducationPanel(),this.hideSceneUI(),e.id){case"skin_slicing":this.startSkinSlicingGame();break;case"meat_slicing":this.startMeatSlicingGame();break;case"plating_arrangement":this.startPlatingArrangementGame();break}}startSkinSlicingGame(){console.log("啟動片皮迷你遊戲"),this.startMiniGame(SkinSlicingGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:140,gameAreaWidth:500,gameAreaHeight:300,slicingSystem:this.slicingSystem,workStation:this.workStation})}startMeatSlicingGame(){console.log("啟動片肉迷你遊戲"),this.startMiniGame(MeatSlicingGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:140,gameAreaWidth:500,gameAreaHeight:300,slicingSystem:this.slicingSystem,workStation:this.workStation})}startPlatingArrangementGame(){console.log("啟動擺盤迷你遊戲"),this.startMiniGame(PlatingArrangementGame,{gameEngine:this.gameEngine,scene:this,gameAreaX:100,gameAreaY:140,gameAreaWidth:500,gameAreaHeight:300,slicingSystem:this.slicingSystem,workStation:this.workStation,traditionalServing:this.traditionalServing})}hideSceneUI(){this.uiElements.forEach(e=>{e.setVisible&&e.setVisible(!1)})}showSceneUI(){this.uiElements.forEach(e=>{if(e.setVisible)if(e===this.educationButton){if(this.currentStepIndex<this.slicingSteps.length){const t=this.slicingSteps[this.currentStepIndex];t&&t.educationContent&&e.setVisible(!0)}}else e.setVisible(!0)})}update(e){super.update(e),this.updateSlicingSystem(e),this.updateVisualEffects(e),this.updateUIDisplays()}updateSlicingSystem(e){this.updateDuckTemperature(e),this.updateKnifeCondition(e),this.updateSliceQuality()}updateDuckTemperature(e){const t=this.slicingSystem.duck;t.temperature>25&&(t.temperature=Math.max(25,t.temperature-2*e)),t.temperature<45&&(this.slicingSystem.knife.sharpness*=.999)}updateKnifeCondition(e){const t=this.slicingSystem.knife;t.sharpness>0&&(t.sharpness=Math.max(0,t.sharpness-.1*e))}updateSliceQuality(){const e=this.slicingSystem;e.slices.skin.quality=this.calculateSliceQuality("skin"),e.slices.meat.quality=this.calculateSliceQuality("meat")}calculateSliceQuality(e){const t=this.slicingSystem.knife,i=this.slicingSystem.duck;let s=0;s+=t.sharpness*.4;const a=i.temperature>45?1:i.temperature/45;s+=a*30;const n=e==="skin"?20:90,r=1-Math.abs(t.angle-n)/n;s+=r*20;const h=e==="skin"?30:50,o=1-Math.abs(t.pressure-h)/h;return s+=o*10,Math.max(0,Math.min(100,s))}updateVisualEffects(e){this.updateKnifeTrails(e),this.updateSliceParticles(e),this.updateSteamEffects(e),this.updateJuiceDrops(e)}updateKnifeTrails(e){this.visualEffects.knifeTrails=this.visualEffects.knifeTrails.filter(t=>(t.life-=e*2,t.opacity=t.life/t.maxLife,t.life>0))}updateSliceParticles(e){this.visualEffects.sliceParticles=this.visualEffects.sliceParticles.filter(t=>(t.x+=t.vx*e,t.y+=t.vy*e,t.life-=e,t.opacity=t.life/t.maxLife,t.life>0))}updateSteamEffects(e){this.slicingSystem.duck.temperature>40&&Math.random()<.1&&this.visualEffects.steamEffects.push({x:this.workStation.duckX+Math.random()*this.workStation.duckWidth,y:this.workStation.duckY,vx:(Math.random()-.5)*10,vy:-20-Math.random()*10,life:2,maxLife:2,size:2+Math.random()*3,opacity:.6}),this.visualEffects.steamEffects=this.visualEffects.steamEffects.filter(i=>(i.x+=i.vx*e,i.y+=i.vy*e,i.life-=e,i.opacity=i.life/i.maxLife*.6,i.size+=e,i.life>0))}updateJuiceDrops(e){this.visualEffects.juiceDrops=this.visualEffects.juiceDrops.filter(t=>(t.y+=t.vy*e,t.life-=e,t.life>0&&t.y<this.workStation.y+this.workStation.height+50))}updateUIDisplays(){const e=this.slicingSystem;this.knifeStatusLabel&&this.knifeStatusLabel.setText(`刀具鋒利度: ${Math.round(e.knife.sharpness)}%`),this.angleLabel&&this.angleLabel.setText(`切片角度: ${Math.round(e.knife.angle)}°`),this.pressureLabel&&this.pressureLabel.setText(`施力大小: ${Math.round(e.knife.pressure)}%`),this.duckTempLabel&&this.duckTempLabel.setText(`鴨子溫度: ${Math.round(e.duck.temperature)}°C`),this.skinQualityLabel&&this.skinQualityLabel.setText(`皮片品質: ${Math.round(e.slices.skin.quality)}%`),this.meatQualityLabel&&this.meatQualityLabel.setText(`肉片品質: ${Math.round(e.slices.meat.quality)}%`),this.wasteRateLabel&&this.wasteRateLabel.setText(`浪費率: ${this.calculateWasteRate()}%`),this.pancakeLabel&&this.pancakeLabel.setText(`荷葉餅: ${this.traditionalServing.pancakes.count}張`),this.scallionLabel&&this.scallionLabel.setText(`蔥絲: ${this.traditionalServing.scallions.prepared?"已準備":"未準備"}`),this.cucumberLabel&&this.cucumberLabel.setText(`黃瓜條: ${this.traditionalServing.cucumber.prepared?"已準備":"未準備"}`),this.sauceLabel&&this.sauceLabel.setText(`甜麵醬: ${this.traditionalServing.sauce.prepared?"已準備":"未準備"}`)}onMiniGameBack(){console.log("從迷你遊戲返回到切片場景"),this.showSceneUI()}onMiniGameComplete(e,t){const i=this.currentMiniGame?this.currentMiniGame.name:"未知遊戲";if(console.log(`${i}完成:`,e?"成功":"失敗"),this.showSceneUI(),e){const s=this.slicingSteps[this.currentStepIndex];this.onStepComplete(s.id,e,t)}else this.showRetryMessage();this.currentMiniGame=null}onStepComplete(e,t,i){if(console.log(`步驟 ${e} 完成:`,t?"成功":"失敗"),t){const s=this.slicingSteps.find(a=>a.id===e);s&&(s.completed=!0,this.updateSystemAfterStep(e,i),this.gameEngine.progressManager.completeStep(e),this.showSuccessMessage(s.name,i.score),this.currentStepIndex++,this.updateStepIndicator(),this.updateNextButton())}else this.showRetryMessage()}updateSystemAfterStep(e,t){const i=this.slicingSystem;switch(e){case"skin_slicing":i.slices.skin.count=t.sliceCount||24,i.slices.skin.quality=t.quality||85,i.slices.skin.uniformity=t.uniformity||80,i.duck.slicedWeight+=t.slicedWeight||200,i.duck.wasteAmount+=t.wasteAmount||20;break;case"meat_slicing":i.slices.meat.count=t.sliceCount||36,i.slices.meat.quality=t.quality||80,i.slices.meat.uniformity=t.uniformity||75,i.duck.slicedWeight+=t.slicedWeight||800,i.duck.wasteAmount+=t.wasteAmount||50;break;case"plating_arrangement":i.plating.style=t.style||"traditional",i.plating.symmetry=t.symmetry||85,i.plating.colorBalance=t.colorBalance||80,i.plating.creativity=t.creativity||75,i.plating.overallScore=t.overallScore||80,this.traditionalServing.pancakes.count=t.pancakeCount||12,this.traditionalServing.pancakes.prepared=!0,this.traditionalServing.scallions.prepared=!0,this.traditionalServing.cucumber.prepared=!0,this.traditionalServing.sauce.prepared=!0;break}}updateStepIndicator(){this.stepIndicator&&this.stepIndicator.setText(this.getStepIndicatorText())}updateNextButton(){if(this.nextButton)if(this.currentStepIndex>=this.slicingSteps.length)this.nextButton.setText("完成片鴨"),this.sceneProgress.allStepsCompleted=!0,this.sceneProgress.readyForNextScene=!0;else{const e=this.slicingSteps[this.currentStepIndex],t={skin_slicing:"開始片皮",meat_slicing:"開始片肉",plating_arrangement:"開始擺盤"};this.nextButton.setText(t[e.id]||"下一步")}}showSuccessMessage(e,t){const i=this.gameEngine.uiManager,s=this.gameEngine.canvas,a=i.createLabel({x:s.width/2,y:s.height/2,text:`${e}完成！
評分: ${t}分`,fontSize:20,color:"#32CD32",align:"center"});setTimeout(()=>{i.removeUIElement(a)},3e3),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("success")}showRetryMessage(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas,i=e.createLabel({x:t.width/2,y:t.height/2,text:"請再試一次，熟能生巧！",fontSize:18,color:"#FFD700",align:"center"});setTimeout(()=>{e.removeUIElement(i)},2e3)}goBack(){console.log("返回烤製場景"),this.transitionToScene("roasting")}proceedToNextScene(){console.log("進入完成場景"),this.gameEngine.progressManager.completeStep("slicing");const e=this.gameEngine.progressManager.completeGame();this.gameEngine.updateGameState({progress:{...this.gameEngine.gameState.progress,slicing:!0},gameCompleted:!0,completionData:e}),this.transitionToScene("completion")}render(e){super.render(e),this.renderWorkStation(e),this.renderDuckAndSlices(e),this.renderVisualEffects(e),this.showingEducation&&this.educationPanel&&this.renderEducationPanel(e)}renderWorkStation(e){const t=this.workStation;e.fillStyle="#DEB887",e.fillRect(t.x,t.y,t.width,t.height),e.fillStyle="#FFFFFF",e.beginPath(),e.ellipse(t.plateX,t.plateY,t.plateWidth/2,t.plateHeight/2,0,0,2*Math.PI),e.fill(),e.strokeStyle="#D3D3D3",e.stroke()}renderDuckAndSlices(e){const t=this.workStation,i=this.slicingSystem;e.fillStyle="#8B4513",i.slices.skin.count===0&&i.slices.meat.count===0?e.fillRect(t.duckX-t.duckWidth/2,t.duckY-t.duckHeight/2,t.duckWidth,t.duckHeight):i.slices.meat.count===0?(e.fillStyle="#CD853F",e.fillRect(t.duckX-t.duckWidth/2,t.duckY-t.duckHeight/2,t.duckWidth,t.duckHeight)):(e.fillStyle="#A0522D",e.fillRect(t.duckX-t.duckWidth/3,t.duckY-t.duckHeight/3,t.duckWidth/1.5,t.duckHeight/1.5)),this.renderSlicesOnPlate(e)}renderSlicesOnPlate(e){const t=this.workStation,i=this.slicingSystem;e.fillStyle="#DAA520";for(let s=0;s<i.slices.skin.count;s++){const a=s/i.slices.skin.count*Math.PI*2,n=30,r=t.plateX+Math.cos(a)*n,h=t.plateY+Math.sin(a)*n;e.save(),e.translate(r,h),e.rotate(a),e.fillRect(-8,-3,16,6),e.restore()}e.fillStyle="#CD853F";for(let s=0;s<Math.min(i.slices.meat.count,20);s++){const a=s/20*Math.PI*2,n=15,r=t.plateX+Math.cos(a)*n,h=t.plateY+Math.sin(a)*n;e.save(),e.translate(r,h),e.rotate(a),e.fillRect(-6,-2,12,4),e.restore()}}renderVisualEffects(e){this.visualEffects.knifeTrails.forEach(t=>{e.save(),e.globalAlpha=t.opacity,e.strokeStyle="#C0C0C0",e.lineWidth=2,e.beginPath(),e.moveTo(t.startX,t.startY),e.lineTo(t.endX,t.endY),e.stroke(),e.restore()}),this.visualEffects.sliceParticles.forEach(t=>{e.save(),e.globalAlpha=t.opacity,e.fillStyle=t.color,e.fillRect(t.x-t.size/2,t.y-t.size/2,t.size,t.size),e.restore()}),this.visualEffects.steamEffects.forEach(t=>{e.save(),e.globalAlpha=t.opacity,e.fillStyle="#E6E6FA",e.beginPath(),e.arc(t.x,t.y,t.size,0,2*Math.PI),e.fill(),e.restore()}),this.visualEffects.juiceDrops.forEach(t=>{e.save(),e.fillStyle="#8B4513",e.beginPath(),e.arc(t.x,t.y,t.size,0,2*Math.PI),e.fill(),e.restore()})}renderEducationPanel(e){const t=this.gameEngine.canvas;e.save(),e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(0,0,t.width,t.height),e.fillStyle="rgba(139, 69, 19, 0.95)",e.fillRect(60,100,t.width-120,t.height-200),e.strokeStyle="#FFD700",e.lineWidth=3,e.strokeRect(60,100,t.width-120,t.height-200),e.restore()}cleanup(){super.cleanup();const e=this.gameEngine.uiManager;this.uiElements.forEach(t=>{e.removeUIElement(t)}),this.hideEducationPanel()}};window.SlicingScene=SlicingScene$1;let CompletionScene$1=class extends Scene{constructor(e,t){super(e,t),this.titleLabel=null,this.congratulationLabel=null,this.scoreDisplay=null,this.achievementsList=null,this.knowledgeSummary=null,this.restartButton=null,this.mainMenuButton=null,this.shareButton=null,this.finalDuckImage=null,this.scoreBreakdown=null,this.completionStats=null,this.newAchievements=[],this.celebrationAnimation=null,this.scoreCountAnimation=null,this.showingKnowledgeReview=!1,this.knowledgePanel=null,this.finalScore=0,this.scoreDetails={selection:0,processing:0,preparation:0,drying:0,roasting:0,slicing:0,bonus:0}}async loadSceneAssets(){const e=this.gameEngine.assetManager;await Promise.all([e.loadImage("assets/images/backgrounds/completion_bg.png","background_completion"),e.loadImage("assets/images/final_duck/complete_duck.png","final_duck"),e.loadImage("assets/images/ui/trophy.png","trophy"),e.loadImage("assets/images/ui/star_gold.png","star_gold"),e.loadImage("assets/images/ui/celebration.png","celebration")]),this.backgroundImage=e.getAsset("background_completion"),this.finalDuckImage=e.getAsset("final_duck")}setupScene(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas,i=this.gameEngine.progressManager;this.calculateFinalScore(),this.newAchievements=i.checkAchievements(),this.titleLabel=e.createLabel({x:t.width/2,y:60,text:"🎉 恭喜完成北京烤鴨製作！",fontSize:28,color:"#FFD700",align:"center"}),this.congratulationLabel=e.createLabel({x:t.width/2,y:100,text:"您已成功掌握了正宗北京烤鴨的製作工藝",fontSize:16,color:"#8B4513",align:"center"}),this.scoreDisplay=e.createLabel({x:t.width/2,y:200,text:`最終分數：${this.finalScore}`,fontSize:24,color:"#FF6B35",align:"center"}),this.scoreBreakdownButton=e.createButton({x:t.width/2-60,y:230,width:120,height:35,text:"分數詳情",onClick:()=>this.showScoreBreakdown()}),this.addUIElement(this.scoreBreakdownButton),this.createAchievementDisplay(),this.createStatisticsDisplay(),this.knowledgeReviewButton=e.createButton({x:t.width/2-80,y:t.height-150,width:160,height:40,text:"知識回顧",onClick:()=>this.showKnowledgeReview()}),this.addUIElement(this.knowledgeReviewButton),this.restartButton=e.createButton({x:t.width/2-180,y:t.height-100,width:120,height:45,text:"重新遊戲",onClick:()=>this.restartGame()}),this.addUIElement(this.restartButton),this.mainMenuButton=e.createButton({x:t.width/2-50,y:t.height-100,width:100,height:45,text:"主選單",onClick:()=>this.returnToMainMenu()}),this.addUIElement(this.mainMenuButton),this.shareButton=e.createButton({x:t.width/2+60,y:t.height-100,width:120,height:45,text:"分享成果",onClick:()=>this.shareResults()}),this.addUIElement(this.shareButton),this.startCelebrationAnimation(),this.startScoreCountAnimation()}calculateFinalScore(){const e=this.gameEngine.progressManager,t=e.getCurrentProgress();this.finalScore=t.score;const i=t.completedSteps,s=100;i.includes("selection")&&(this.scoreDetails.selection=s),i.includes("processing")&&(this.scoreDetails.processing=s),i.includes("preparation")&&(this.scoreDetails.preparation=s*1.5),i.includes("drying")&&(this.scoreDetails.drying=s),i.includes("roasting")&&(this.scoreDetails.roasting=s*1.5),i.includes("slicing")&&(this.scoreDetails.slicing=s),e.getCompletionPercentage()===100&&(this.scoreDetails.bonus=s*2)}createAchievementDisplay(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.newAchievements.length>0&&(this.newAchievementLabel=e.createLabel({x:t.width/2,y:280,text:"🏆 獲得新成就！",fontSize:18,color:"#FFD700",align:"center"}),this.newAchievements.forEach((i,s)=>{const a=e.createLabel({x:t.width/2,y:310+s*25,text:`⭐ ${i.name}: ${i.description}`,fontSize:14,color:"#FF6B35",align:"center"});this.addUIElement(a)}))}createStatisticsDisplay(){const e=this.gameEngine.uiManager,t=this.gameEngine.canvas,i=this.gameEngine.progressManager,s=i.getStatistics(),a=380+this.newAchievements.length*25;this.statsLabel=e.createLabel({x:t.width/2,y:a,text:"📊 遊戲統計",fontSize:16,color:"#8B4513",align:"center"}),this.gamesCompletedLabel=e.createLabel({x:t.width/2,y:a+30,text:`完成次數：${s.gamesCompleted}`,fontSize:14,color:"#654321",align:"center"}),this.bestScoreLabel=e.createLabel({x:t.width/2,y:a+50,text:`最佳分數：${s.bestScore}`,fontSize:14,color:"#654321",align:"center"});const n=i.getCompletionPercentage();this.completionLabel=e.createLabel({x:t.width/2,y:a+70,text:`完成度：${n.toFixed(1)}%`,fontSize:14,color:"#654321",align:"center"})}showScoreBreakdown(){if(this.showingScoreBreakdown){this.hideScoreBreakdown();return}this.showingScoreBreakdown=!0;const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.scoreBreakdownPanel={title:e.createLabel({x:t.width/2,y:120,text:"📋 分數詳細統計",fontSize:20,color:"#FFD700",align:"center"}),selection:e.createLabel({x:t.width/2,y:160,text:`選材階段：${this.scoreDetails.selection} 分`,fontSize:14,color:"#FFFFFF",align:"center"}),processing:e.createLabel({x:t.width/2,y:180,text:`處理階段：${this.scoreDetails.processing} 分`,fontSize:14,color:"#FFFFFF",align:"center"}),preparation:e.createLabel({x:t.width/2,y:200,text:`製胚階段：${this.scoreDetails.preparation} 分`,fontSize:14,color:"#FFFFFF",align:"center"}),drying:e.createLabel({x:t.width/2,y:220,text:`晾胚階段：${this.scoreDetails.drying} 分`,fontSize:14,color:"#FFFFFF",align:"center"}),roasting:e.createLabel({x:t.width/2,y:240,text:`烤製階段：${this.scoreDetails.roasting} 分`,fontSize:14,color:"#FFFFFF",align:"center"}),slicing:e.createLabel({x:t.width/2,y:260,text:`片鴨階段：${this.scoreDetails.slicing} 分`,fontSize:14,color:"#FFFFFF",align:"center"}),bonus:e.createLabel({x:t.width/2,y:280,text:`完成獎勵：${this.scoreDetails.bonus} 分`,fontSize:14,color:"#FFD700",align:"center"}),closeButton:e.createButton({x:t.width/2-40,y:320,width:80,height:35,text:"關閉",onClick:()=>this.hideScoreBreakdown()})},this.addUIElement(this.scoreBreakdownPanel.closeButton),this.scoreBreakdownButton.setText("關閉詳情"),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click")}hideScoreBreakdown(){if(!this.showingScoreBreakdown||!this.scoreBreakdownPanel)return;this.showingScoreBreakdown=!1;const e=this.gameEngine.uiManager;Object.values(this.scoreBreakdownPanel).forEach(t=>{e.removeUIElement(t),this.removeUIElement(t)}),this.scoreBreakdownPanel=null,this.scoreBreakdownButton.setText("分數詳情")}showKnowledgeReview(){if(this.showingKnowledgeReview){this.hideKnowledgeReview();return}this.showingKnowledgeReview=!0;const e=this.gameEngine.uiManager,t=this.gameEngine.canvas;this.knowledgePanel={title:e.createLabel({x:t.width/2,y:100,text:"📚 北京烤鴨製作知識總結",fontSize:20,color:"#FFD700",align:"center"}),content:e.createLabel({x:60,y:140,text:`🦆 您已經學會了：

🔸 選材技巧：
• 識別優質北京填鴨的特徵
• 掌握重量和外觀的評估標準

🔸 處理工藝：
• 正確的褪毛和清洗方法
• 開口技術和衛生要求

🔸 製胚精髓：
• 充氣技術的壓力控制
• 燙皮和上糖色的時機掌握

🔸 晾胚要點：
• 環境控制的重要性
• 風乾時間的精確把握

🔸 烤製技藝：
• 溫度控制和時間管理
• 翻轉技巧和火候掌握

🔸 片鴨藝術：
• 刀工技法和擺盤美學
• 傳統吃法和文化內涵

🎓 恭喜您成為北京烤鴨製作達人！`,fontSize:12,color:"#FFFFFF",align:"left"}),closeButton:e.createButton({x:t.width/2-40,y:t.height-80,width:80,height:35,text:"關閉",onClick:()=>this.hideKnowledgeReview()})},this.addUIElement(this.knowledgeReviewPanel.closeButton),this.knowledgeReviewButton.setText("關閉回顧"),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click")}hideKnowledgeReview(){if(!this.showingKnowledgeReview||!this.knowledgePanel)return;this.showingKnowledgeReview=!1;const e=this.gameEngine.uiManager;Object.values(this.knowledgePanel).forEach(t=>{e.removeUIElement(t),this.removeUIElement(t)}),this.knowledgePanel=null,this.knowledgeReviewButton.setText("知識回顧")}startCelebrationAnimation(){const e=this.gameEngine.visualFeedback;if(e)for(let t=0;t<5;t++)setTimeout(()=>{const i=200+Math.random()*400,s=150+Math.random()*200;e.createCompletionCelebration(i,s),e.createStarReward(i,s,3)},t*500)}startScoreCountAnimation(){let e=0;const t=this.finalScore,i=Math.max(1,Math.floor(t/50)),s=setInterval(()=>{e+=i,e>=t&&(e=t,clearInterval(s)),this.scoreDisplay&&this.scoreDisplay.setText(`最終分數：${e}`)},50)}restartGame(){console.log("重新開始遊戲"),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click");const t=this.gameEngine.progressManager.startNewGame();this.gameEngine.gameState={...t},this.transitionToScene("welcome")}returnToMainMenu(){console.log("返回主選單"),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click"),this.transitionToScene("welcome")}shareResults(){console.log("分享遊戲結果"),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click");const e=`我在北京烤鴨料理遊戲中獲得了 ${this.finalScore} 分！🦆✨
已經掌握了正宗北京烤鴨的製作工藝！
#北京烤鴨 #料理遊戲 #中華美食`;navigator.share?navigator.share({title:"北京烤鴨料理遊戲成果",text:e,url:window.location.href}).catch(t=>{console.log("分享失敗:",t),this.fallbackShare(e)}):this.fallbackShare(e)}fallbackShare(e){navigator.clipboard?navigator.clipboard.writeText(e).then(()=>{alert("成果已複製到剪貼簿！")}).catch(()=>{this.showShareDialog(e)}):this.showShareDialog(e)}showShareDialog(e){prompt("複製以下內容分享您的成果：",e)!==null&&console.log("用戶選擇分享內容")}renderScene(e){if(this.finalDuckImage){const t=(e.canvas.width-200)/2;e.drawImage(this.finalDuckImage,t,300,200,150)}this.showingScoreBreakdown&&(e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(40,110,e.canvas.width-80,230),e.strokeStyle="#FFD700",e.lineWidth=2,e.strokeRect(40,110,e.canvas.width-80,230)),this.showingKnowledgeReview&&(e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(40,90,e.canvas.width-80,e.canvas.height-160),e.strokeStyle="#FFD700",e.lineWidth=2,e.strokeRect(40,90,e.canvas.width-80,e.canvas.height-160)),this.renderDecorations(e)}renderDecorations(e){const t=this.gameEngine.assetManager.getAsset("trophy");t&&(e.drawImage(t,50,50,40,40),e.drawImage(t,e.canvas.width-90,50,40,40));const i=this.gameEngine.assetManager.getAsset("star_gold");i&&[{x:150,y:60},{x:e.canvas.width-150,y:60},{x:100,y:100},{x:e.canvas.width-100,y:100}].forEach(a=>{e.drawImage(i,a.x,a.y,25,25)})}cleanup(){super.cleanup();const e=this.gameEngine.uiManager;this.titleLabel&&e.removeUIElement(this.titleLabel),this.congratulationLabel&&e.removeUIElement(this.congratulationLabel),this.scoreDisplay&&e.removeUIElement(this.scoreDisplay),this.scoreBreakdownButton&&e.removeUIElement(this.scoreBreakdownButton),this.knowledgeReviewButton&&e.removeUIElement(this.knowledgeReviewButton),this.restartButton&&e.removeUIElement(this.restartButton),this.mainMenuButton&&e.removeUIElement(this.mainMenuButton),this.shareButton&&e.removeUIElement(this.shareButton),this.hideScoreBreakdown(),this.hideKnowledgeReview(),this.newAchievementLabel&&e.removeUIElement(this.newAchievementLabel),this.statsLabel&&e.removeUIElement(this.statsLabel),this.gamesCompletedLabel&&e.removeUIElement(this.gamesCompletedLabel),this.bestScoreLabel&&e.removeUIElement(this.bestScoreLabel),this.completionLabel&&e.removeUIElement(this.completionLabel)}};window.CompletionScene=CompletionScene$1;let DuckQualityGame$1=class extends MiniGame{constructor(e={}){super({name:"鴨子品質檢查",timeLimit:6e4,successThreshold:1,...e}),this.checkPoints=[{id:"head",name:"頭部檢查",x:475,y:130,radius:30,checked:!1,quality:"good",description:"頭部小巧，眼睛明亮有神",feedback:"✓ 頭部品質優良"},{id:"chest",name:"胸部檢查",x:460,y:170,radius:30,checked:!1,quality:"excellent",description:"胸部豐滿，肌肉結實",feedback:"✓ 胸部品質極佳"},{id:"abdomen",name:"腹部檢查",x:485,y:195,radius:30,checked:!1,quality:"good",description:"腹部適中，脂肪分佈均勻",feedback:"✓ 腹部品質良好"},{id:"skin",name:"皮膚檢查",x:530,y:190,radius:30,checked:!1,quality:"excellent",description:"皮膚淡黃色，光滑有彈性",feedback:"✓ 皮膚品質極佳"},{id:"weight",name:"重量評估",x:500,y:220,radius:30,checked:!1,quality:"good",description:"重量適中，約3公斤",feedback:"✓ 重量符合標準"}],this.currentCheckPoint=null,this.checkedCount=0,this.totalPoints=this.checkPoints.length,this.pulseAnimation=0,this.feedbackMessages=[],this.duckImage=null}setupGame(){this.checkPoints.forEach(e=>{e.checked=!1}),this.checkedCount=0,this.currentCheckPoint=null,this.feedbackMessages=[],this.gameEngine&&this.gameEngine.assetManager&&(this.duckImage=this.gameEngine.assetManager.getAsset("raw_duck"))}getInstructions(){return`點擊鴨子的各個部位進行品質檢查 (${this.checkedCount}/${this.totalPoints})`}updateGame(e){this.pulseAnimation+=e*.005,this.feedbackMessages=this.feedbackMessages.filter(t=>(t.life-=e,t.y-=e*.02,t.alpha=Math.max(0,t.life/t.maxLife),t.life>0)),this.updateProgress(this.checkedCount/this.totalPoints),this.instructions&&this.instructions.setText(this.getInstructions())}renderGame(e){const t=this.gameArea;if(this.duckImage){const i=t.x+200,s=t.y+50;e.drawImage(this.duckImage,i,s,200,150)}else e.fillStyle="#F0F0F0",e.fillRect(t.x+200,t.y+50,200,150),e.fillStyle="#666666",e.font="16px Microsoft JhengHei",e.textAlign="center",e.fillText("北京填鴨",t.x+300,t.y+125);this.renderCheckPoints(e),this.renderFeedbackMessages(e),this.renderCheckList(e)}renderCheckPoints(e){this.checkPoints.forEach(t=>{const i=this.gameArea.x+t.x-200,s=this.gameArea.y+t.y-50;if(t.checked)e.fillStyle="rgba(50, 205, 50, 0.8)",e.beginPath(),e.arc(i,s,t.radius,0,Math.PI*2),e.fill(),e.strokeStyle="#FFFFFF",e.lineWidth=3,e.beginPath(),e.moveTo(i-8,s),e.lineTo(i-2,s+6),e.lineTo(i+8,s-6),e.stroke();else{const a=1+Math.sin(this.pulseAnimation)*.1,n=.6+Math.sin(this.pulseAnimation)*.2;e.fillStyle=`rgba(255, 215, 0, ${n})`,e.beginPath(),e.arc(i,s,t.radius*a,0,Math.PI*2),e.fill(),e.strokeStyle="#FF8C00",e.lineWidth=2,e.stroke(),e.fillStyle="#8B4513",e.font="bold 16px Microsoft JhengHei",e.textAlign="center",e.textBaseline="middle",e.fillText("?",i,s)}})}renderFeedbackMessages(e){this.feedbackMessages.forEach(t=>{e.save(),e.globalAlpha=t.alpha,e.fillStyle=t.color,e.font=`${t.fontSize}px Microsoft JhengHei`,e.textAlign="center",e.fillText(t.text,t.x,t.y),e.restore()})}renderCheckList(e){const t=this.gameArea.x+450,i=this.gameArea.y+50;e.fillStyle="rgba(255, 255, 255, 0.9)",e.fillRect(t,i,140,200),e.strokeStyle="#8B4513",e.lineWidth=1,e.strokeRect(t,i,140,200),e.fillStyle="#8B4513",e.font="bold 14px Microsoft JhengHei",e.textAlign="center",e.fillText("檢查清單",t+70,i+20),e.font="12px Microsoft JhengHei",e.textAlign="left",this.checkPoints.forEach((s,a)=>{const n=i+40+a*25,r=t+10,h=n-8;e.strokeStyle="#8B4513",e.lineWidth=1,e.strokeRect(r,h,12,12),s.checked&&(e.fillStyle="#32CD32",e.fillRect(r+1,h+1,10,10),e.strokeStyle="#FFFFFF",e.lineWidth=2,e.beginPath(),e.moveTo(r+3,h+6),e.lineTo(r+6,h+9),e.lineTo(r+10,h+4),e.stroke()),e.fillStyle=s.checked?"#32CD32":"#654321",e.fillText(s.name,r+18,n)})}handleGameInput(e){if(e.type!=="click")return!1;for(let t of this.checkPoints){if(t.checked)continue;const i=this.gameArea.x+t.x-200,s=this.gameArea.y+t.y-50;if(Math.sqrt(Math.pow(e.x-i,2)+Math.pow(e.y-s,2))<=t.radius)return this.checkPoint(t,e.x,e.y),!0}return!1}checkPoint(e,t,i){if(!e.checked){if(e.checked=!0,this.checkedCount++,this.currentCheckPoint=e,this.createFeedbackMessage(e.feedback,t,i,this.getQualityColor(e.quality)),this.gameEngine&&this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("check_success"),this.gameEngine){const s=this.getQualityPoints(e.quality);this.gameEngine.addScore(s,t,i,"quality_check")}console.log(`檢查完成: ${e.name} - ${e.quality}`)}}createFeedbackMessage(e,t,i,s="#32CD32"){this.feedbackMessages.push({text:e,x:t,y:i,color:s,fontSize:14,life:2e3,maxLife:2e3,alpha:1})}getQualityColor(e){switch(e){case"excellent":return"#32CD32";case"good":return"#FFD700";case"fair":return"#FFA500";case"poor":return"#FF6B6B";default:return"#87CEEB"}}getQualityPoints(e){switch(e){case"excellent":return 20;case"good":return 15;case"fair":return 10;case"poor":return 5;default:return 10}}checkCompletion(){if(this.checkedCount>=this.totalPoints){const e=this.checkPoints.filter(s=>s.quality==="excellent").length,t=this.checkPoints.filter(s=>s.quality==="good").length;let i="good";e>=3?i="excellent":e+t>=4?i="good":i="fair",this.createFeedbackMessage(`品質檢查完成！總體評價: ${this.getQualityText(i)}`,this.gameArea.x+this.gameArea.width/2,this.gameArea.y+this.gameArea.height/2,this.getQualityColor(i)),this.complete(!0)}}getQualityText(e){switch(e){case"excellent":return"極佳";case"good":return"良好";case"fair":return"一般";case"poor":return"較差";default:return"未知"}}calculateAccuracyBonus(){const e=this.checkPoints.filter(i=>i.checked&&i.quality==="excellent").length,t=this.checkPoints.filter(i=>i.checked&&i.quality==="good").length;return e*10+t*5}};window.DuckQualityGame=DuckQualityGame$1;let WeightMeasurementGame$1=class extends MiniGame{constructor(e={}){super({name:"重量測量",timeLimit:0,successThreshold:1,...e}),this.duck={x:0,y:0,width:80,height:60,baseX:0,baseY:0,onScale:!1,targetWeight:3.2,moveSpeed:2.5,moveDirection:1,moveRange:60,isEscaping:!1,escapeSpeed:0,timeSinceLastClick:0,escapeThreshold:2e3},this.scale={x:400,y:280,width:120,height:80,plateY:280,plateHeight:15,displayX:450,displayY:200,displayWidth:100,displayHeight:60,currentWeight:0,isActive:!1,centerX:0},this.measurementState={phase:"drag",weighingTimer:0,requiredWeighingTime:5e3,measurementComplete:!1,currentScore:0,maxScore:100,centerBonus:0},this.dragSystem={isDragging:!1,initialDragComplete:!1},this.particles=[],this.feedbackMessages=[],this.duckImage=null,this.scaleImage=null}setupGame(){this.duck.x=150,this.duck.y=250,this.duck.onScale=!1,this.duck.isEscaping=!1,this.duck.escapeSpeed=0,this.duck.moveDirection=1,this.duck.timeSinceLastClick=0,this.duck.baseX=this.scale.x+(this.scale.width-this.duck.width)/2,this.duck.baseY=this.scale.plateY-this.duck.height+5,this.scale.centerX=this.scale.x+this.scale.width/2,this.scale.currentWeight=0,this.scale.isActive=!1,this.measurementState.phase="drag",this.measurementState.weighingTimer=0,this.measurementState.measurementComplete=!1,this.measurementState.currentScore=0,this.measurementState.centerBonus=0,this.dragSystem.isDragging=!1,this.dragSystem.initialDragComplete=!1,this.particles=[],this.feedbackMessages=[],this.gameEngine&&this.gameEngine.assetManager&&(this.duckImage=this.gameEngine.assetManager.getAsset("raw_duck"),this.scaleImage=this.gameEngine.assetManager.getAsset("scale"))}getInstructions(){return this.measurementState.phase==="complete"?`測量完成！分數: ${this.measurementState.currentScore.toFixed(0)}`:this.measurementState.phase==="weighing"?"點擊鴨子保持在中心！越靠近中心分數越高":"拖拽鴨子到秤上進行重量測量"}updateGame(e){if(this.measurementState.phase==="drag"?this.checkDuckOnScale():this.measurementState.phase==="weighing"&&this.updateWeighingPhase(e),this.updateVisualEffects(e),this.measurementState.phase==="weighing"){const t=this.measurementState.weighingTimer/this.measurementState.requiredWeighingTime;this.updateProgress(Math.min(1,t))}else this.measurementState.phase==="complete"?this.updateProgress(1):this.updateProgress(0);this.instructions&&this.instructions.setText(this.getInstructions())}updateWeighingPhase(e){if(!this.measurementState.measurementComplete)if(this.duck.timeSinceLastClick+=e,this.duck.timeSinceLastClick>this.duck.escapeThreshold&&!this.duck.isEscaping&&(this.duck.isEscaping=!0,this.duck.escapeSpeed=2),this.duck.isEscaping){if(this.duck.y-=this.duck.escapeSpeed,this.duck.escapeSpeed+=.15,this.duck.y<this.duck.baseY-80){this.duckEscaped();return}}else{if(this.duck.x+=this.duck.moveSpeed*this.duck.moveDirection,!this.checkIfOnScale()){this.duckEscaped();return}const i=this.duck.x-this.duck.baseX;Math.abs(i)>=this.duck.moveRange&&(this.duck.moveDirection*=-1),this.measurementState.weighingTimer+=e;const s=this.duck.x+this.duck.width/2,a=Math.abs(s-this.scale.centerX),n=this.scale.width/2,r=Math.max(0,1-a/n);this.measurementState.centerBonus+=r*e*.01,this.measurementState.currentScore=this.measurementState.weighingTimer/this.measurementState.requiredWeighingTime*this.measurementState.maxScore*(1+this.measurementState.centerBonus*.5),this.scale.currentWeight=this.duck.targetWeight+Math.sin(Date.now()*.01)*.05,this.measurementState.weighingTimer>=this.measurementState.requiredWeighingTime&&this.completeMeasurement()}}checkIfOnScale(){const e=this.duck.x+this.duck.width/2,t=this.duck.y+this.duck.height,i=this.scale.x,s=this.scale.x+this.scale.width,a=this.scale.plateY,n=this.scale.plateY+this.scale.plateHeight+20;return e>=i&&e<=s&&t>=a&&t<=n}checkDuckOnScale(){if(!this.dragSystem.initialDragComplete)return;this.checkIfOnScale()&&!this.duck.onScale&&(this.duck.onScale=!0,this.startWeighing())}startWeighing(){this.measurementState.phase="weighing",this.scale.isActive=!0,this.scale.currentWeight=this.duck.targetWeight,this.duck.x=this.duck.baseX,this.duck.y=this.duck.baseY,this.duck.timeSinceLastClick=0,this.createPlacementEffect(),this.createFeedbackMessage("開始測量！點擊鴨子防止它逃跑",this.scale.displayX,this.scale.displayY-40,"#32CD32")}duckEscaped(){this.measurementState.phase="drag",this.measurementState.weighingTimer=0,this.measurementState.centerBonus=0,this.duck.onScale=!1,this.duck.isEscaping=!1,this.duck.escapeSpeed=0,this.duck.timeSinceLastClick=0,this.duck.x=150,this.duck.y=250,this.scale.isActive=!1,this.dragSystem.initialDragComplete=!1,this.createFeedbackMessage("鴨子逃跑了！重新放到秤上",this.scale.displayX,this.scale.displayY-40,"#FF0000")}resetToCenter(){this.duck.x=this.duck.baseX,this.duck.y=this.duck.baseY,this.duck.isEscaping=!1,this.duck.escapeSpeed=0,this.duck.moveDirection=1,this.duck.timeSinceLastClick=0}createPlacementEffect(){const e=this.duck.x+this.duck.width/2,t=this.duck.y+this.duck.height/2;for(let i=0;i<15;i++)this.particles.push({x:e,y:t,vx:(Math.random()-.5)*3,vy:(Math.random()-.5)*3,life:1e3,maxLife:1e3,alpha:1,color:"#FFD700"});this.gameEngine&&this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("place_on_scale")}completeMeasurement(){this.measurementState.phase="complete",this.measurementState.measurementComplete=!0;const e=this.scale.currentWeight.toFixed(1),t=Math.round(this.measurementState.currentScore);this.createFeedbackMessage(`測量完成！重量: ${e}公斤 | 分數: ${t}`,this.scale.displayX+this.scale.displayWidth/2,this.scale.displayY-20,"#32CD32"),this.gameEngine&&this.gameEngine.addScore(t,this.scale.displayX,this.scale.displayY,"weight_measurement"),console.log(`重量測量完成: ${e}公斤, 分數: ${t}`)}updateVisualEffects(e){this.particles=this.particles.filter(t=>(t.x+=t.vx*e*.1,t.y+=t.vy*e*.1,t.life-=e,t.alpha=Math.max(0,t.life/t.maxLife),t.life>0)),this.feedbackMessages=this.feedbackMessages.filter(t=>(t.life-=e,t.y-=e*.02,t.alpha=Math.max(0,t.life/t.maxLife),t.life>0))}createFeedbackMessage(e,t,i,s="#32CD32"){this.feedbackMessages.push({text:e,x:t,y:i,color:s,fontSize:14,life:3e3,maxLife:3e3,alpha:1})}renderGame(e){this.renderScale(e),this.renderDuck(e),this.renderParticles(e),this.renderFeedbackMessages(e),this.measurementState.phase==="drag"&&this.renderDragHints(e),this.measurementState.phase==="weighing"&&(this.renderWeighingProgress(e),this.renderCenterIndicator(e),this.renderScoreDisplay(e))}renderScale(e){const t=this.scale;e.fillStyle="#8B4513",e.fillRect(t.x,t.y+60,t.width,20),e.fillStyle="#A0522D",e.fillRect(t.x+t.width/2-5,t.y+20,10,60);const i=t.isActive?"#FFD700":"#CCCCCC";e.fillStyle=i,e.fillRect(t.x,t.plateY,t.width,t.plateHeight),e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(t.x,t.plateY,t.width,t.plateHeight),e.fillStyle="#2F4F4F",e.fillRect(t.displayX,t.displayY,t.displayWidth,t.displayHeight),e.strokeStyle="#000000",e.lineWidth=2,e.strokeRect(t.displayX,t.displayY,t.displayWidth,t.displayHeight),e.fillStyle=t.isActive?"#00FF00":"#666666",e.font="bold 16px Microsoft JhengHei",e.textAlign="center",e.fillText(t.isActive?`${t.currentWeight.toFixed(1)}kg`:"0.0kg",t.displayX+t.displayWidth/2,t.displayY+t.displayHeight/2+6),e.fillStyle="#654321",e.font="14px Microsoft JhengHei",e.textAlign="center",e.fillText("電子秤",t.x+t.width/2,t.y+t.height+20)}renderDuck(e){const t=this.duck;!this.dragSystem.isDragging&&this.measurementState.phase!=="weighing"&&(e.fillStyle="rgba(0, 0, 0, 0.2)",e.beginPath(),e.ellipse(t.x+t.width/2,t.y+t.height+5,t.width/2,10,0,0,Math.PI*2),e.fill()),this.duckImage?(e.save(),this.dragSystem.isDragging&&(e.globalAlpha=.8,e.shadowColor="#FFD700",e.shadowBlur=10),this.measurementState.phase==="weighing"&&t.moveDirection===1?(e.translate(t.x+t.width,t.y),e.scale(-1,1),e.drawImage(this.duckImage,0,0,t.width,t.height)):e.drawImage(this.duckImage,t.x,t.y,t.width,t.height),e.restore()):(e.fillStyle=this.dragSystem.isDragging?"#FFE4B5":"#F0F0F0",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle=this.dragSystem.isDragging?"#FFD700":"#CCCCCC",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height),e.fillStyle="#654321",e.font="12px Microsoft JhengHei",e.textAlign="center",e.fillText("鴨子",t.x+t.width/2,t.y+t.height/2)),t.isEscaping&&(e.strokeStyle="#FF0000",e.lineWidth=3,e.strokeRect(t.x-2,t.y-2,t.width+4,t.height+4))}renderCenterIndicator(e){const t=this.scale.centerX,i=this.scale.plateY+this.scale.plateHeight/2;e.strokeStyle="#32CD32",e.lineWidth=2,e.setLineDash([5,5]),e.beginPath(),e.moveTo(t,i-40),e.lineTo(t,i+10),e.stroke(),e.setLineDash([]),e.fillStyle="#32CD32",e.beginPath(),e.arc(t,i,4,0,Math.PI*2),e.fill()}renderScoreDisplay(e){const t=Math.round(this.measurementState.currentScore),i=this.scale.displayX+this.scale.displayWidth/2,s=this.scale.displayY-60;e.fillStyle="#FFD700",e.font="bold 20px Microsoft JhengHei",e.textAlign="center",e.fillText(`分數: ${t}`,i,s)}renderParticles(e){this.particles.forEach(t=>{e.save(),e.globalAlpha=t.alpha,e.fillStyle=t.color,e.beginPath(),e.arc(t.x,t.y,3,0,Math.PI*2),e.fill(),e.restore()})}renderFeedbackMessages(e){this.feedbackMessages.forEach(t=>{e.save(),e.globalAlpha=t.alpha,e.fillStyle=t.color,e.font=`${t.fontSize}px Microsoft JhengHei`,e.textAlign="center",e.fillText(t.text,t.x,t.y),e.restore()})}renderDragHints(e){if(this.measurementState.phase==="drag"&&!this.duck.onScale){const t=this.duck.x+this.duck.width,i=this.duck.y+this.duck.height/2,s=this.scale.x-20,a=this.scale.plateY+this.scale.plateHeight/2;e.strokeStyle="#FFD700",e.lineWidth=3,e.setLineDash([10,5]),e.beginPath(),e.moveTo(t,i),e.lineTo(s,a),e.stroke(),e.setLineDash([]);const n=Math.atan2(a-i,s-t);e.beginPath(),e.moveTo(s,a),e.lineTo(s-15*Math.cos(n-.5),a-15*Math.sin(n-.5)),e.lineTo(s-15*Math.cos(n+.5),a-15*Math.sin(n+.5)),e.closePath(),e.fillStyle="#FFD700",e.fill()}}renderWeighingProgress(e){const t=this.scale.displayX,i=this.scale.displayY+this.scale.displayHeight+20,s=this.scale.displayWidth,a=15;e.fillStyle="#333333",e.fillRect(t,i,s,a);const n=this.measurementState.weighingTimer/this.measurementState.requiredWeighingTime;e.fillStyle="#32CD32",e.fillRect(t,i,s*Math.min(n,1),a),e.strokeStyle="#000000",e.lineWidth=2,e.strokeRect(t,i,s,a);const r=Math.max(0,(this.measurementState.requiredWeighingTime-this.measurementState.weighingTimer)/1e3);e.fillStyle="#FFFFFF",e.font="12px Microsoft JhengHei",e.textAlign="center",e.fillText(`${r.toFixed(1)}秒`,t+s/2,i+a+15)}handleGameInput(e){const t=this.duck;if(e.type==="mousedown"){const i=e.x>=t.x&&e.x<=t.x+t.width&&e.y>=t.y&&e.y<=t.y+t.height;if(this.measurementState.phase==="drag"&&i)return this.dragSystem.isDragging=!0,t.dragOffsetX=e.x-t.x,t.dragOffsetY=e.y-t.y,!0;if(this.measurementState.phase==="weighing"&&i)return this.resetToCenter(),this.createFeedbackMessage("很好！",t.x+t.width/2,t.y-20,"#32CD32"),!0}else{if(e.type==="mousemove"&&this.dragSystem.isDragging)return t.x=e.x-t.dragOffsetX,t.y=e.y-t.dragOffsetY,!0;if(e.type==="mouseup"&&this.dragSystem.isDragging)return this.dragSystem.isDragging=!1,this.dragSystem.initialDragComplete=!0,!0}return!1}checkCompletion(){this.measurementState.measurementComplete&&this.complete(!0)}calculateAccuracyBonus(){return Math.round(this.measurementState.currentScore*.2)}};window.WeightMeasurementGame=WeightMeasurementGame$1;let FeatherRemovalGame$1=class extends MiniGame{constructor(e={}){super({name:"褪毛遊戲",timeLimit:0,successThreshold:1,...e}),this.feathers=[],this.totalFeathers=15,this.removedFeathers=0,this.isDragging=!1,this.dragStartPos=null,this.currentFeather=null,this.particles=[],this.hotWaterEffect={active:!1,x:0,y:0,radius:0,maxRadius:150},this.duckImage=null,this.duckPosition={x:this.gameArea.x+this.gameArea.width/2-100,y:this.gameArea.y+this.gameArea.height/2-75,width:200,height:150},this.currentTool="hand",this.hotWaterUsed=!1,this.gamePhase="water",this.pluckingDuckImage=null}setupGame(){this.loadAssets(),this.removedFeathers=0,this.hotWaterUsed=!1,this.particles=[],this.gamePhase="water",this.feathers=[],this.updateProgress(0)}loadAssets(){if(this.gameEngine&&this.gameEngine.assetManager){const e=this.gameEngine.assetManager;this.duckImage=e.getAsset("processing_duck"),this.pluckingDuckImage=e.getAsset("feather_plucking_duck")}}createFeathers(){this.feathers=[];const e=this.duckPosition;for(let t=0;t<this.totalFeathers;t++){const i={id:t,x:e.x+Math.random()*e.width,y:e.y+Math.random()*e.height,size:8+Math.random()*12,type:Math.random()>.85?"stubborn":"normal",removed:!1,softened:!1,angle:Math.random()*Math.PI*2,color:this.getFeatherColor()};this.feathers.push(i)}}getFeatherColor(){const e=["#FFFFFF","#F5F5F5","#E8E8E8","#DCDCDC"];return e[Math.floor(Math.random()*e.length)]}getInstructions(){return this.gamePhase==="water"?"點擊鴨子使用熱水軟化羽毛（僅能使用一次）":"點擊並拖拽移除羽毛 - 越快完成分數越高！"}createUI(){if(super.createUI(),!this.gameEngine||!this.gameEngine.uiManager)return;const e=this.gameEngine.uiManager;this.hotWaterButton=e.createButton({x:this.gameArea.x+this.gameArea.width-220,y:this.gameArea.y-55,width:100,height:40,text:"熱水燙毛",onClick:()=>this.selectTool("hot_water")}),this.handButton=e.createButton({x:this.gameArea.x+this.gameArea.width-110,y:this.gameArea.y-55,width:100,height:40,text:"手工拔毛",onClick:()=>this.selectTool("hand")}),this.featherCounter=e.createLabel({x:this.gameArea.x+this.gameArea.width-20,y:this.gameArea.y+20,text:`剩餘: ${this.totalFeathers-this.removedFeathers}`,fontSize:18,color:"#2563eb",align:"right"}),this.uiElements.push(this.hotWaterButton,this.handButton,this.featherCounter),this.selectTool("hot_water")}selectTool(e){if(e==="hot_water"&&this.hotWaterUsed){this.showMessage("熱水已經使用過了！請用手工拔毛。");return}this.currentTool=e,this.instructions&&(e==="hot_water"?this.instructions.setText("點擊鴨子使用熱水軟化羽毛（僅能使用一次）"):this.instructions.setText("點擊並拖拽移除軟化的羽毛"))}updateGame(e){if(this.updateParticles(e),this.updateHotWaterEffect(e),this.featherCounter&&(this.gamePhase==="plucking"?(this.featherCounter.setText(`剩餘羽毛: ${this.totalFeathers-this.removedFeathers}`),this.featherCounter.setVisible(!0)):this.featherCounter.setVisible(!1)),this.gamePhase==="plucking"){const t=this.removedFeathers/this.totalFeathers;this.updateProgress(t)}}updateParticles(e){for(let t=this.particles.length-1;t>=0;t--){const i=this.particles[t];i.x+=i.vx*e/16,i.y+=i.vy*e/16,i.life-=e/16,i.alpha=Math.max(0,i.life/i.maxLife),i.life<=0&&this.particles.splice(t,1)}}updateHotWaterEffect(e){this.hotWaterEffect.active&&(this.hotWaterEffect.radius+=e*.3,this.hotWaterEffect.radius>=this.hotWaterEffect.maxRadius&&(this.hotWaterEffect.active=!1,this.hotWaterEffect.radius=0,this.enterPluckingPhase()))}enterPluckingPhase(){console.log("進入拔毛階段"),this.gamePhase="plucking",this.createFeathers(),this.feathers.forEach(e=>{e.softened=!0}),this.hotWaterButton&&(this.hotWaterButton.setEnabled(!1),this.hotWaterButton.setText("已使用")),this.currentTool="hand",this.instructions&&this.instructions.setText(this.getInstructions())}renderGame(e){this.renderDuck(e),this.renderFeathers(e),this.renderHotWaterEffect(e),this.renderParticles(e),this.renderToolHint(e)}renderDuck(e){const t=this.duckPosition;let i=this.duckImage;this.gamePhase==="plucking"&&this.pluckingDuckImage&&this.pluckingDuckImage.width&&(i=this.pluckingDuckImage),i&&i.width?e.drawImage(i,t.x,t.y,t.width,t.height):(e.fillStyle="#F5DEB3",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height),e.fillStyle="#654321",e.font="16px Microsoft JhengHei",e.textAlign="center",e.fillText(this.gamePhase==="plucking"?"拔毛中":"準備燙毛",t.x+t.width/2,t.y+t.height/2))}renderFeathers(e){this.gamePhase==="plucking"&&this.feathers.forEach(t=>{t.removed||(e.save(),e.translate(t.x,t.y),e.rotate(t.angle),e.fillStyle=t.color,e.strokeStyle="#666666",e.lineWidth=1.5,e.beginPath(),e.ellipse(0,0,t.size/2,t.size,0,0,Math.PI*2),e.fill(),e.stroke(),e.strokeStyle="rgba(0, 0, 0, 0.3)",e.lineWidth=1,e.beginPath(),e.moveTo(-t.size/4,-t.size/2),e.lineTo(t.size/4,t.size/2),e.stroke(),e.restore())})}renderHotWaterEffect(e){if(!this.hotWaterEffect.active)return;const t=this.hotWaterEffect;e.save(),e.globalAlpha=.6;for(let i=0;i<3;i++){const s=t.radius-i*15;s>0&&(e.strokeStyle=`hsl(200, 70%, ${50+i*10}%)`,e.lineWidth=3-i,e.beginPath(),e.arc(t.x,t.y,s,0,Math.PI*2),e.stroke())}e.restore()}renderParticles(e){this.particles.forEach(t=>{e.save(),e.globalAlpha=t.alpha,e.fillStyle=t.color,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill(),e.restore()})}renderToolHint(e){const t=this.gameArea.y+this.gameArea.height-30;e.fillStyle="#2d3748",e.font="14px Microsoft JhengHei",e.textAlign="left",this.gamePhase==="water"?e.fillText("💧 熱水工具已選擇 - 點擊鴨子進行燙毛（僅能使用一次）",this.gameArea.x+10,t):e.fillText("✋ 拖拽移除羽毛 - 完成時間越短，得分越高！",this.gameArea.x+10,t)}handleGameInput(e){return e.type==="mousedown"?this.handleClick(e.x,e.y):e.type==="click"&&this.currentTool==="hot_water"?this.handleClick(e.x,e.y):e.type==="mousemove"?this.isDragging?this.handleDrag(e.x,e.y):!1:e.type==="mouseup"&&this.isDragging?this.handleDragEnd(e.x,e.y):!1}handleClick(e,t){return this.gamePhase==="water"?this.useHotWater(e,t):this.gamePhase==="plucking"?this.startFeatherRemoval(e,t):!1}useHotWater(e,t){const i=this.duckPosition;return e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height?(this.hotWaterEffect.active=!0,this.hotWaterEffect.x=i.x+i.width/2,this.hotWaterEffect.y=i.y+i.height/2,this.hotWaterEffect.radius=0,this.hotWaterUsed=!0,this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("water_splash"),!0):!1}startFeatherRemoval(e,t){const i=this.findFeatherAt(e,t);return i&&!i.removed?(this.isDragging=!0,this.dragStartPos={x:e,y:t},this.currentFeather=i,!0):!1}handleDrag(e,t){return!this.isDragging||!this.currentFeather?!1:(Math.sqrt(Math.pow(e-this.dragStartPos.x,2)+Math.pow(t-this.dragStartPos.y,2))>20&&(this.removeFeather(this.currentFeather),this.isDragging=!1,this.currentFeather=null),!0)}handleDragEnd(e,t){return this.isDragging&&(this.isDragging=!1,this.currentFeather=null),!0}findFeatherAt(e,t){for(let i of this.feathers){if(i.removed)continue;if(Math.sqrt(Math.pow(e-i.x,2)+Math.pow(t-i.y,2))<=i.size)return i}return null}removeFeather(e){e.removed=!0,this.removedFeathers++,this.featherCounter&&this.featherCounter.setText(`剩餘: ${this.totalFeathers-this.removedFeathers}`),this.createRemovalParticles(e.x,e.y),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("feather_remove");const t=this.removedFeathers/this.totalFeathers;this.updateProgress(t),console.log(`移除羽毛，剩餘: ${this.totalFeathers-this.removedFeathers}, 進度: ${t}, 已完成: ${this.isCompleted}`)}createRemovalParticles(e,t){for(let i=0;i<5;i++)this.particles.push({x:e,y:t,vx:(Math.random()-.5)*4,vy:(Math.random()-.5)*4,size:2+Math.random()*3,color:"#FFFFFF",life:30,maxLife:30,alpha:1})}showMessage(e){if(this.gameEngine&&this.gameEngine.uiManager){const t=this.gameEngine.uiManager.createLabel({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y+50,text:e,fontSize:14,color:"#FF6B6B",align:"center"});setTimeout(()=>{this.gameEngine.uiManager.removeUIElement(t)},2e3)}}calculateAccuracyBonus(){const t=(this.stats.endTime-this.stats.startTime)/1e3;let i=100;return i-=Math.floor(t),i=Math.max(20,i),t<20?i+=30:t<30?i+=20:t<45&&(i+=10),i}};window.FeatherRemovalGame=FeatherRemovalGame$1;let OpeningCleaningGame$1=class extends MiniGame{constructor(e={}){super({name:"開口清洗遊戲",timeLimit:9e4,successThreshold:1,...e}),this.gamePhases=[{id:"opening",name:"精確開口",description:"從肛門位置沿著綠色垂直線向下切割",completed:!1},{id:"organ_removal",name:"取出內臟",description:"小心取出內臟器官",completed:!1},{id:"cleaning",name:"內腔清洗",description:"徹底清洗內腔",completed:!1}],this.currentPhaseIndex=0,this.duckState={opened:!1,organsRemoved:!1,cleaned:!1,cleanliness:0},this.openingSystem={targetArea:null,cutLine:[],isDrawing:!1,accuracy:0},this.organs=[],this.removedOrgans=0,this.cleaningAreas=[],this.waterFlow={active:!1,x:0,y:0,particles:[]},this.duckImage=null,this.duckPosition={x:this.gameArea.x+this.gameArea.width/2-100,y:this.gameArea.y+this.gameArea.height/2-75,width:200,height:150},this.currentTool="knife"}setupGame(){this.setupOpeningTarget(),this.setupOrgans(),this.setupCleaningAreas(),this.loadAssets(),this.currentPhaseIndex=0,this.duckState={opened:!1,organsRemoved:!1,cleaned:!1,cleanliness:0},this.gamePhases.forEach(e=>e.completed=!1),this.updateProgress(0)}loadAssets(){if(this.gameEngine&&this.gameEngine.assetManager){const e=this.gameEngine.assetManager;this.duckImage=e.getAsset("anus_duck")}}setupOpeningTarget(){const e=this.duckPosition;this.openingSystem.targetArea={x:e.x+e.width*.45,y:e.y+e.height*.4,width:e.width*.1,height:e.height*.35,idealPath:[{x:e.x+e.width*.5,y:e.y+e.height*.4},{x:e.x+e.width*.5,y:e.y+e.height*.75}]},this.openingSystem.cutLine=[],this.openingSystem.accuracy=0}setupOrgans(){this.organs=[];const e=this.duckPosition;[{name:"心臟",color:"#8B0000",size:15},{name:"肝臟",color:"#A0522D",size:25},{name:"腸道",color:"#DDA0DD",size:20}].forEach((i,s)=>{this.organs.push({id:s,name:i.name,x:e.x+e.width*.4+Math.random()*e.width*.2,y:e.y+e.height*.4+Math.random()*e.height*.3,size:i.size,color:i.color,removed:!1,visible:!1})}),this.removedOrgans=0}setupCleaningAreas(){this.cleaningAreas=[];const e=this.duckPosition;for(let t=0;t<8;t++)this.cleaningAreas.push({id:t,x:e.x+e.width*.3+Math.random()*e.width*.4,y:e.y+e.height*.4+Math.random()*e.height*.4,size:12+Math.random()*8,cleanliness:0,visible:!1})}getInstructions(){const e=this.gamePhases[this.currentPhaseIndex];return e?`${e.name}: ${e.description}`:"按照步驟完成開口和清洗"}createUI(){if(super.createUI(),!this.gameEngine||!this.gameEngine.uiManager)return;const e=this.gameEngine.uiManager,t=e.createButton({x:this.gameArea.x+10,y:this.gameArea.y+10,width:60,height:35,text:"刀具",onClick:()=>this.selectTool("knife")}),i=e.createButton({x:this.gameArea.x+80,y:this.gameArea.y+10,width:60,height:35,text:"手取",onClick:()=>this.selectTool("hand")}),s=e.createButton({x:this.gameArea.x+150,y:this.gameArea.y+10,width:60,height:35,text:"清水",onClick:()=>this.selectTool("water")});this.phaseIndicator=e.createLabel({x:this.gameArea.x+this.gameArea.width-10,y:this.gameArea.y+30,text:this.getPhaseIndicatorText(),fontSize:12,color:"#654321",align:"right"}),this.uiElements.push(t,i,s,this.phaseIndicator),this.selectTool("knife")}getPhaseIndicatorText(){let e=`進度:
`;return this.gamePhases.forEach((t,i)=>{const s=t.completed?"✅":i===this.currentPhaseIndex?"🔄":"⏳";e+=`${s} ${t.name}
`}),e}selectTool(e){if(this.currentTool=e,this.instructions){const t=this.gamePhases[this.currentPhaseIndex];t&&(e==="knife"&&t.id==="opening"?this.instructions.setText("沿著標示線精確切割開口"):e==="hand"&&t.id==="organ_removal"?this.instructions.setText("點擊內臟小心取出"):e==="water"&&t.id==="cleaning"?this.instructions.setText("拖拽水流清洗內腔"):this.instructions.setText(t.description))}}updateGame(e){this.updateWaterParticles(e),this.phaseIndicator&&this.phaseIndicator.setText(this.getPhaseIndicatorText());const i=this.gamePhases.filter(s=>s.completed).length/this.gamePhases.length;this.updateProgress(i),this.checkPhaseCompletion()}updateWaterParticles(e){for(let t=this.waterFlow.particles.length-1;t>=0;t--){const i=this.waterFlow.particles[t];i.x+=i.vx*e/16,i.y+=i.vy*e/16,i.life-=e/16,i.alpha=Math.max(0,i.life/i.maxLife),i.life<=0&&this.waterFlow.particles.splice(t,1)}}checkPhaseCompletion(){const e=this.gamePhases[this.currentPhaseIndex];if(!e||e.completed)return;let t=!1;e.id==="opening"?t=this.openingSystem.accuracy>=.8:e.id==="organ_removal"?t=this.removedOrgans>=this.organs.length:e.id==="cleaning"&&(t=this.cleaningAreas.reduce((s,a)=>s+a.cleanliness,0)/this.cleaningAreas.length>=.9),t&&this.completeCurrentPhase()}completeCurrentPhase(){const e=this.gamePhases[this.currentPhaseIndex];if(e){if(e.completed=!0,e.id==="opening"?(this.duckState.opened=!0,this.organs.forEach(t=>t.visible=!0)):e.id==="organ_removal"?(this.duckState.organsRemoved=!0,this.cleaningAreas.forEach(t=>t.visible=!0)):e.id==="cleaning"&&(this.duckState.cleaned=!0),this.currentPhaseIndex++,this.currentPhaseIndex<this.gamePhases.length){const t=this.gamePhases[this.currentPhaseIndex];t.id==="organ_removal"?this.selectTool("hand"):t.id==="cleaning"&&this.selectTool("water")}console.log(`階段完成: ${e.name}`),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("phase_complete")}}renderGame(e){this.renderDuck(e),this.currentPhaseIndex===0&&this.renderOpeningSystem(e),this.duckState.opened&&this.renderOrgans(e),this.duckState.organsRemoved&&this.renderCleaningAreas(e),this.renderWaterFlow(e),this.renderToolHint(e)}renderDuck(e){const t=this.duckPosition;if(this.duckImage?e.drawImage(this.duckImage,t.x,t.y,t.width,t.height):(e.fillStyle="#F5DEB3",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height)),this.duckState.opened){const i=this.openingSystem.targetArea;e.strokeStyle="#8B0000",e.lineWidth=3,e.beginPath(),e.moveTo(i.x,i.y+i.height/2),e.lineTo(i.x+i.width,i.y+i.height/2),e.stroke()}}renderOpeningSystem(e){const t=this.openingSystem.targetArea;e.strokeStyle="#FFD700",e.lineWidth=2,e.setLineDash([5,5]),e.strokeRect(t.x,t.y,t.width,t.height),e.setLineDash([]),e.strokeStyle="#32CD32",e.lineWidth=3,e.beginPath();const i=t.idealPath;if(e.moveTo(i[0].x,i[0].y),e.lineTo(i[1].x,i[1].y),e.stroke(),e.fillStyle="#FF4444",e.beginPath(),e.arc(i[0].x,i[0].y,4,0,Math.PI*2),e.fill(),this.openingSystem.cutLine.length>1){e.strokeStyle="#FF6B6B",e.lineWidth=3,e.beginPath(),e.moveTo(this.openingSystem.cutLine[0].x,this.openingSystem.cutLine[0].y);for(let s=1;s<this.openingSystem.cutLine.length;s++)e.lineTo(this.openingSystem.cutLine[s].x,this.openingSystem.cutLine[s].y);e.stroke()}e.fillStyle="#654321",e.font="14px Microsoft JhengHei",e.textAlign="center",e.fillText(`切割準確度: ${Math.round(this.openingSystem.accuracy*100)}%`,t.x+t.width/2,t.y-10)}renderOrgans(e){this.organs.forEach(t=>{!t.visible||t.removed||(e.fillStyle=t.color,e.strokeStyle="#000000",e.lineWidth=1,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill(),e.stroke(),e.fillStyle="#FFFFFF",e.font="10px Microsoft JhengHei",e.textAlign="center",e.fillText(t.name,t.x,t.y+3))})}renderCleaningAreas(e){this.cleaningAreas.forEach(t=>{if(!t.visible)return;const i=1-t.cleanliness,s=Math.round(139*i+245*t.cleanliness),a=Math.round(69*i+245*t.cleanliness),n=Math.round(19*i+245*t.cleanliness);e.fillStyle=`rgb(${s}, ${a}, ${n})`,e.strokeStyle="#666666",e.lineWidth=1,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill(),e.stroke()})}renderWaterFlow(e){this.waterFlow.particles.forEach(t=>{e.save(),e.globalAlpha=t.alpha,e.fillStyle=t.color,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill(),e.restore()})}renderToolHint(e){const t=this.gameArea.y+this.gameArea.height-30;e.fillStyle="#654321",e.font="12px Microsoft JhengHei",e.textAlign="left",this.currentTool==="knife"?e.fillText("🔪 刀具已選擇 - 拖拽進行精確切割",this.gameArea.x+10,t):this.currentTool==="hand"?e.fillText("✋ 手取已選擇 - 點擊內臟進行移除",this.gameArea.x+10,t):this.currentTool==="water"&&e.fillText("💧 清水已選擇 - 拖拽水流進行清洗",this.gameArea.x+10,t)}handleGameInput(e){return e.type==="mousedown"?this.handleMouseDown(e.x,e.y):e.type==="mousemove"?this.handleMouseMove(e.x,e.y):e.type==="mouseup"?this.handleMouseUp(e.x,e.y):e.type==="click"?this.handleClick(e.x,e.y):!1}handleMouseDown(e,t){return this.currentTool==="knife"&&this.currentPhaseIndex===0?(this.openingSystem.isDrawing=!0,this.openingSystem.cutLine=[{x:e,y:t}],!0):this.currentTool==="water"&&this.currentPhaseIndex===2?(this.waterFlow.active=!0,this.waterFlow.x=e,this.waterFlow.y=t,!0):!1}handleMouseMove(e,t){return this.openingSystem.isDrawing?(this.openingSystem.cutLine.push({x:e,y:t}),this.calculateCuttingAccuracy(),!0):this.waterFlow.active?(this.waterFlow.x=e,this.waterFlow.y=t,this.createWaterParticles(e,t),this.cleanAreasNearWater(e,t),!0):!1}handleMouseUp(e,t){return this.openingSystem.isDrawing?(this.openingSystem.isDrawing=!1,!0):this.waterFlow.active?(this.waterFlow.active=!1,!0):!1}handleClick(e,t){return this.currentTool==="hand"&&this.currentPhaseIndex===1?this.removeOrganAt(e,t):!1}calculateCuttingAccuracy(){if(this.openingSystem.cutLine.length<2)return;const e=this.openingSystem.targetArea,t=e.idealPath;let i=0,s=0;if(this.openingSystem.cutLine.forEach(a=>{if(a.x>=e.x&&a.x<=e.x+e.width&&a.y>=e.y&&a.y<=e.y+e.height){const n=this.distanceToLine(a,t[0],t[1]);i+=n,s++}}),s>0){const a=i/s,n=20;this.openingSystem.accuracy=Math.max(0,1-a/n)}}distanceToLine(e,t,i){const s=e.x-t.x,a=e.y-t.y,n=i.x-t.x,r=i.y-t.y,h=s*n+a*r,o=n*n+r*r;if(o===0)return Math.sqrt(s*s+a*a);const c=h/o;let g,u;c<0?(g=t.x,u=t.y):c>1?(g=i.x,u=i.y):(g=t.x+c*n,u=t.y+c*r);const d=e.x-g,m=e.y-u;return Math.sqrt(d*d+m*m)}removeOrganAt(e,t){for(let i of this.organs){if(i.removed||!i.visible)continue;if(Math.sqrt(Math.pow(e-i.x,2)+Math.pow(t-i.y,2))<=i.size)return i.removed=!0,this.removedOrgans++,console.log(`移除內臟: ${i.name}`),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("organ_remove"),!0}return!1}createWaterParticles(e,t){for(let i=0;i<3;i++)this.waterFlow.particles.push({x:e+(Math.random()-.5)*10,y:t+(Math.random()-.5)*10,vx:(Math.random()-.5)*2,vy:Math.random()*2+1,size:2+Math.random()*3,color:"#87CEEB",life:20,maxLife:20,alpha:1})}cleanAreasNearWater(e,t){this.cleaningAreas.forEach(i=>{if(!i.visible)return;Math.sqrt(Math.pow(e-i.x,2)+Math.pow(t-i.y,2))<=30&&(i.cleanliness=Math.min(1,i.cleanliness+.02))})}calculateAccuracyBonus(){let e=0;e+=Math.round(this.openingSystem.accuracy*30),this.removedOrgans===this.organs.length&&(e+=20);const t=this.cleaningAreas.reduce((i,s)=>i+s.cleanliness,0)/this.cleaningAreas.length;return e+=Math.round(t*25),e}};window.OpeningCleaningGame=OpeningCleaningGame$1;let InflationSupportGame$1=class extends MiniGame{constructor(e={}){super({name:"充氣支撐遊戲",timeLimit:0,successThreshold:.85,...e}),this.inflationLevel=0,this.targetInflationLevel=85,this.inflationRate=.8,this.deflationRate=.3,this.isInflating=!1,this.inflationPressure=0,this.maxPressure=100,this.optimalPressureRange={min:70,max:90},this.optimalPressureTime=0,this.requiredOptimalTime=5,this.supportStick={x:0,y:0,width:80,height:8,isDragging:!1,isPlaced:!1,targetX:0,targetY:0,placementAccuracy:0},this.duckEmbryo={x:this.gameArea?this.gameArea.x+this.gameArea.width/2-120:300,y:this.gameArea?this.gameArea.y+this.gameArea.height/2-90:200,width:240,height:180,baseWidth:240,baseHeight:180,inflationExpansion:0},this.inflationPump={x:this.gameArea?this.gameArea.x+50:100,y:this.gameArea?this.gameArea.y+this.gameArea.height-120:400,width:60,height:80,isActive:!1,pumpAnimation:0},this.airParticles=[],this.pressureIndicator={x:this.gameArea?this.gameArea.x+this.gameArea.width-150:600,y:this.gameArea?this.gameArea.y+50:100,width:120,height:20},this.gamePhase="inflation",this.inflationCompleted=!1,this.supportCompleted=!1,this.stickPlaced=!1,this.shouldRender=!0,this.overInflationWarned=!1,this.setupSupportTarget()}setupSupportTarget(){this.supportStick.targetX=this.duckEmbryo.x+this.duckEmbryo.width*.3,this.supportStick.targetY=this.duckEmbryo.y+this.duckEmbryo.height*.6,this.supportStick.x=this.gameArea?this.gameArea.x+150:200,this.supportStick.y=this.gameArea?this.gameArea.y+this.gameArea.height-100:420}setupGame(){this.loadAssets(),this.inflationLevel=0,this.inflationPressure=0,this.isInflating=!1,this.gamePhase="inflation",this.inflationCompleted=!1,this.supportCompleted=!1,this.stickPlaced=!1,this.optimalPressureTime=0,this.overInflationWarned=!1,this.supportStick.isPlaced=!1,this.supportStick.isDragging=!1,this.airParticles=[],this.updateProgress(0)}loadAssets(){if(this.gameEngine&&this.gameEngine.assetManager){const e=this.gameEngine.assetManager;this.duckImage=e.getAsset("before_inflation_duck"),this.pumpImage=e.getAsset("inflation_pump"),this.stickImage=e.getAsset("support_stick")}}getInstructions(){return this.gamePhase==="inflation"?"長按充氣泵為鴨胚充氣，保持適當壓力避免破皮":"拖拽木棍到鴨胚胸腔內正確位置進行支撐"}createUI(){if(super.createUI(),!this.gameEngine||!this.gameEngine.uiManager)return;const e=this.gameEngine.uiManager;this.phaseIndicator=e.createLabel({x:this.gameArea.x+20,y:this.gameArea.y+20,text:"階段: 充氣",fontSize:16,color:"#4169E1",align:"left"}),this.pressureLabel=e.createLabel({x:this.pressureIndicator.x,y:this.pressureIndicator.y-25,text:"充氣壓力",fontSize:14,color:"#654321",align:"left"}),this.inflationLabel=e.createLabel({x:this.gameArea.x+20,y:this.gameArea.y+50,text:`充氣水平: ${Math.round(this.inflationLevel)}%`,fontSize:14,color:"#32CD32",align:"left"}),this.accuracyLabel=e.createLabel({x:this.gameArea.x+20,y:this.gameArea.y+80,text:`支撐精確度: ${Math.round(this.supportStick.placementAccuracy)}%`,fontSize:14,color:"#FF8C00",align:"left"}),this.optimalTimeLabel=e.createLabel({x:this.gameArea.x+20,y:this.gameArea.y+110,text:"最佳壓力時間: 0.0 / 5.0秒",fontSize:14,color:"#4169E1",align:"left"}),this.uiElements.push(this.phaseIndicator,this.pressureLabel,this.inflationLabel,this.accuracyLabel,this.optimalTimeLabel)}updateGame(e){this.updateInflationSystem(e),this.updateSupportSystem(e),this.updateVisualEffects(e),this.updateUILabels(),this.checkPhaseTransition(),this.updateTotalProgress(),this.checkCompletion()}updateInflationSystem(e){this.gamePhase!=="inflation"&&!this.isInflating||(this.isInflating?(this.inflationPressure+=this.inflationRate*e/16,this.inflationPressure=Math.min(this.inflationPressure,this.maxPressure),this.inflationPressure>=this.optimalPressureRange.min&&(this.inflationLevel+=this.inflationRate*.8*e/16),Math.random()<.3&&this.createAirParticle(),this.inflationPump.pumpAnimation+=e*.01,this.inflationPump.isActive=!0):(this.inflationPressure-=this.deflationRate*e/16,this.inflationPressure=Math.max(0,this.inflationPressure),this.inflationPump.isActive=!1,this.inflationPump.pumpAnimation=0),this.inflationLevel=Math.min(this.inflationLevel,100),this.duckEmbryo.inflationExpansion=this.inflationLevel/100*20,this.inflationPressure>=this.optimalPressureRange.min&&this.inflationPressure<=this.optimalPressureRange.max&&!this.inflationCompleted?this.optimalPressureTime+=e/1e3:this.inflationCompleted||(this.optimalPressureTime=0),this.inflationLevel>95&&this.handleOverInflation())}updateSupportSystem(e){if(this.gamePhase!=="support_placement")return;const t=Math.sqrt(Math.pow(this.supportStick.x-this.supportStick.targetX,2)+Math.pow(this.supportStick.y-this.supportStick.targetY,2)),i=50;this.supportStick.placementAccuracy=Math.max(0,100-t/i*100)}updateVisualEffects(e){for(let t=this.airParticles.length-1;t>=0;t--){const i=this.airParticles[t];i.x+=i.vx*e/16,i.y+=i.vy*e/16,i.life-=e/16,i.alpha=Math.max(0,i.life/i.maxLife),i.size*=1.01,i.life<=0&&this.airParticles.splice(t,1)}}updateUILabels(){if(this.phaseIndicator){const e=this.gamePhase==="inflation"?"充氣":"支撐放置";this.phaseIndicator.setText(`階段: ${e}`)}if(this.inflationLabel&&this.inflationLabel.setText(`充氣水平: ${Math.round(this.inflationLevel)}%`),this.accuracyLabel&&this.accuracyLabel.setText(`支撐精確度: ${Math.round(this.supportStick.placementAccuracy)}%`),this.optimalTimeLabel){const e=this.optimalPressureTime.toFixed(1),t=this.requiredOptimalTime.toFixed(1),i=this.inflationPressure>=this.optimalPressureRange.min&&this.inflationPressure<=this.optimalPressureRange.max;this.gamePhase==="inflation"?(this.optimalTimeLabel.setText(`最佳壓力時間: ${e} / ${t}秒`),this.optimalTimeLabel.setColor(i?"#32CD32":"#FF6347"),this.optimalTimeLabel.setVisible(!0)):this.optimalTimeLabel.setVisible(!1)}}checkPhaseTransition(){if(this.gamePhase==="inflation"&&this.optimalPressureTime>=this.requiredOptimalTime&&!this.inflationCompleted){if(this.inflationCompleted=!0,this.gamePhase="support_placement",this.instructions&&this.instructions.setText(this.getInstructions()),this.gameEngine&&this.gameEngine.uiManager){const e=this.gameEngine.uiManager.createLabel({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y+50,text:"✓ 充氣完成！現在拖拽木棍到目標位置",fontSize:18,color:"#32CD32",align:"center"});setTimeout(()=>{this.gameEngine.uiManager.removeUIElement(e)},3e3)}console.log("充氣完成，進入支撐放置階段")}}updateTotalProgress(){let e=0;if(this.inflationCompleted)e+=.7;else{const i=Math.min(this.optimalPressureTime/this.requiredOptimalTime,1)*.7;e+=i}(this.stickPlaced||this.supportCompleted)&&(e+=.3);const t=this.progress;this.updateProgress(e),Math.abs(t-this.progress)>.01&&console.log(`進度更新: ${(this.progress*100).toFixed(1)}% (充氣完成: ${this.inflationCompleted}, 木棍放置: ${this.stickPlaced})`),this.config.onProgressUpdate&&this.config.onProgressUpdate(this.inflationLevel)}createAirParticle(){const e=this.inflationPump;this.airParticles.push({x:e.x+e.width/2,y:e.y,vx:(Math.random()-.5)*2,vy:-2-Math.random()*2,size:3+Math.random()*4,color:"#87CEEB",life:60,maxLife:60,alpha:.8})}handleOverInflation(){if(!this.overInflationWarned){if(this.overInflationWarned=!0,this.stats.score=Math.max(0,this.stats.score-5),this.gameEngine&&this.gameEngine.uiManager){const e=this.gameEngine.uiManager.createLabel({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y+100,text:"⚠️ 充氣過度！小心破皮！",fontSize:16,color:"#FF4500",align:"center"});setTimeout(()=>{this.gameEngine.uiManager.removeUIElement(e)},2e3)}this.isInflating=!1,setTimeout(()=>{this.overInflationWarned=!1},3e3)}}renderGame(e){this.shouldRender&&(this.renderDuckEmbryo(e),this.renderInflationPump(e),this.renderSupportStick(e),this.renderPressureIndicator(e),this.renderAirParticles(e),this.renderTargetIndicator(e),this.renderInflationEffects(e))}renderDuckEmbryo(e){const t=this.duckEmbryo,i=t.inflationExpansion,s=t.baseWidth+i,a=t.baseHeight+i*.6,n=i/2,r=i*.3;this.duckImage?e.drawImage(this.duckImage,t.x-n,t.y-r,s,a):(e.fillStyle="#F5DEB3",e.fillRect(t.x-n,t.y-r,s,a),e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(t.x-n,t.y-r,s,a)),i>0&&(e.save(),e.globalAlpha=.3,e.strokeStyle="#87CEEB",e.lineWidth=3,e.strokeRect(t.x-n-5,t.y-r-5,s+10,a+10),e.restore())}renderInflationPump(e){const t=this.inflationPump;if(this.pumpImage){const i=t.isActive?Math.sin(t.pumpAnimation)*3:0;e.drawImage(this.pumpImage,t.x,t.y+i,t.width,t.height)}else{e.fillStyle=t.isActive?"#4169E1":"#6495ED",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#191970",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height);const i=t.y+(t.isActive?Math.sin(t.pumpAnimation)*5:0);e.fillStyle="#8B4513",e.fillRect(t.x+20,i-10,20,15)}t.isActive&&(e.strokeStyle="#4169E1",e.lineWidth=3,e.setLineDash([5,5]),e.beginPath(),e.moveTo(t.x+t.width,t.y+t.height/2),e.lineTo(this.duckEmbryo.x,this.duckEmbryo.y+this.duckEmbryo.height/2),e.stroke(),e.setLineDash([])),e.fillStyle="#654321",e.font="12px Microsoft JhengHei",e.textAlign="center",e.fillText("長按充氣",t.x+t.width/2,t.y+t.height+20)}renderSupportStick(e){const t=this.supportStick;if(this.gamePhase!=="support_placement")return;let i="#8B4513";if(t.isDragging?i="#FF8C00":t.isPlaced&&(i="#32CD32"),!t.isPlaced&&!t.isDragging){const s=Math.sin(Date.now()*.003)*.3+.7;e.save(),e.globalAlpha=s,e.strokeStyle="#FFD700",e.lineWidth=4,e.strokeRect(t.x-2,t.y-2,t.width+4,t.height+4),e.restore()}this.stickImage?(e.save(),e.translate(t.x+t.width/2,t.y+t.height/2),e.rotate(Math.PI/2),e.drawImage(this.stickImage,-t.height/2,-t.width/2,t.height,t.width),e.restore()):(e.fillStyle=i,e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#654321",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height)),t.isPlaced||(e.fillStyle="#FF4500",e.font="bold 14px Microsoft JhengHei",e.textAlign="center",e.fillText("👆 拖拽到目標位置",t.x+t.width/2,t.y-10))}renderPressureIndicator(e){const t=this.pressureIndicator;e.fillStyle="#E0E0E0",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#666666",e.lineWidth=1,e.strokeRect(t.x,t.y,t.width,t.height);const i=this.inflationPressure/this.maxPressure*t.width;let s="#32CD32";this.inflationPressure<this.optimalPressureRange.min?s="#FFD700":this.inflationPressure>this.optimalPressureRange.max&&(s="#FF4500"),e.fillStyle=s,e.fillRect(t.x,t.y,i,t.height);const a=t.x+this.optimalPressureRange.min/this.maxPressure*t.width,n=t.x+this.optimalPressureRange.max/this.maxPressure*t.width;e.strokeStyle="#228B22",e.lineWidth=2,e.beginPath(),e.moveTo(a,t.y-5),e.lineTo(a,t.y+t.height+5),e.moveTo(n,t.y-5),e.lineTo(n,t.y+t.height+5),e.stroke(),e.fillStyle="#654321",e.font="12px Microsoft JhengHei",e.textAlign="center",e.fillText(`${Math.round(this.inflationPressure)}%`,t.x+t.width/2,t.y+t.height+15)}renderAirParticles(e){this.airParticles.forEach(t=>{e.save(),e.globalAlpha=t.alpha,e.fillStyle=t.color,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill(),e.restore()})}renderTargetIndicator(e){if(this.gamePhase!=="support_placement"||this.supportStick.isPlaced)return;const t=this.supportStick,i=Math.sin(Date.now()*.005)*.2+.8;e.save(),e.globalAlpha=i,e.strokeStyle="#32CD32",e.lineWidth=4,e.setLineDash([10,5]),e.strokeRect(t.targetX-5,t.targetY-5,t.width+10,t.height+10),e.fillStyle="rgba(50, 205, 50, 0.2)",e.fillRect(t.targetX-5,t.targetY-5,t.width+10,t.height+10),e.setLineDash([]),e.restore(),e.fillStyle="#32CD32",e.font="bold 16px Microsoft JhengHei",e.textAlign="center",e.fillText("🎯 目標位置",t.targetX+t.width/2,t.targetY-15),e.strokeStyle="#32CD32",e.lineWidth=2,e.beginPath(),e.moveTo(t.targetX+t.width/2,t.targetY-25),e.lineTo(t.targetX+t.width/2-5,t.targetY-15),e.moveTo(t.targetX+t.width/2,t.targetY-25),e.lineTo(t.targetX+t.width/2+5,t.targetY-15),e.stroke()}renderInflationEffects(e){if(this.inflationLevel<=0)return;const t=this.duckEmbryo,i=Date.now()*.003;for(let s=0;s<3;s++){const a=20+s*15+Math.sin(i+s)*5,n=this.inflationLevel/100*(.3-s*.1);e.save(),e.globalAlpha=n,e.strokeStyle="#87CEEB",e.lineWidth=2,e.beginPath(),e.arc(t.x+t.width/2,t.y+t.height/2,a,0,Math.PI*2),e.stroke(),e.restore()}}handleGameInput(e){return e.type==="mousedown"?this.handleMouseDown(e.x,e.y):e.type==="mouseup"?this.handleMouseUp(e.x,e.y):e.type==="mousemove"?this.handleMouseMove(e.x,e.y):!1}handleMouseDown(e,t){const i=this.inflationPump;if(this.gamePhase==="inflation"&&e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height)return this.isInflating=!0,!0;const s=this.supportStick;return this.gamePhase==="support_placement"&&e>=s.x&&e<=s.x+s.width&&t>=s.y&&t<=s.y+s.height?(s.isDragging=!0,!0):!1}handleMouseUp(e,t){return this.isInflating=!1,this.supportStick.isDragging?(this.supportStick.isDragging=!1,this.gamePhase==="support_placement"&&!this.stickPlaced&&(this.stickPlaced=!0,console.log("木棍已放置，標記為完成")),!0):!1}handleMouseMove(e,t){return this.supportStick.isDragging?(this.supportStick.x=e-this.supportStick.width/2,this.supportStick.y=t-this.supportStick.height/2,!0):!1}calculateAccuracyBonus(){let e=0;const t=Math.max(0,100-Math.abs(this.inflationLevel-this.targetInflationLevel));e+=Math.round(t*.3),e+=Math.round(this.supportStick.placementAccuracy*.4);const i=this.stats.endTime-this.stats.startTime;return i<6e4?e+=30:i<75e3&&(e+=15),e}checkCompletion(){this.inflationCompleted&&this.stickPlaced&&!this.isCompleted&&(console.log("遊戲條件達成，直接啟動下一個遊戲"),console.log(`充氣完成: ${this.inflationCompleted}, 木棍放置: ${this.stickPlaced}, 進度: ${this.progress}`),this.supportCompleted=!0,this.isCompleted=!0,console.log(`充氣支撐遊戲完成！充氣水平: ${this.inflationLevel.toFixed(1)}%, 支撐精確度: ${this.supportStick.placementAccuracy.toFixed(1)}%`),this.gameEngine&&this.gameEngine.gameState&&this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("success_sound"),setTimeout(()=>{this.startNextGame()},1e3))}startNextGame(){if(console.log("啟動燙皮上糖色遊戲，覆蓋當前遊戲"),this.shouldRender=!1,this.isActive=!1,this.config.scene){const e=this.config.scene;e.gameEngine.progressManager.completeStep("inflation_support");const t=e.preparationSteps.find(s=>s.id==="inflation_support");t&&(t.completed=!0),e.currentStepIndex++,e.updateStepIndicator();const i=new window.ScaldingColoringGame({gameEngine:this.gameEngine,scene:e,gameAreaX:50,gameAreaY:100,gameAreaWidth:700,gameAreaHeight:400,duckDisplay:this.config.duckDisplay,onProgressUpdate:s=>{e.updateColoringProgress&&e.updateColoringProgress(s)}});e.currentMiniGame=i,i.start(),i.onComplete=(s,a)=>{e.onMiniGameComplete(s,a)},i.onBack=()=>{e.onMiniGameBack()},this.hideControls(),e.hideSceneUI&&e.hideSceneUI()}}hideControls(){this.backButton&&(this.backButton.visible=!1),this.skipButton&&(this.skipButton.visible=!1),this.phaseIndicator&&this.phaseIndicator.setVisible(!1),this.inflationLabel&&this.inflationLabel.setVisible(!1),this.pressureLabel&&this.pressureLabel.setVisible(!1),this.optimalTimeLabel&&this.optimalTimeLabel.setVisible(!1),this.accuracyLabel&&this.accuracyLabel.setVisible(!1),this.progressLabel&&this.progressLabel.setVisible(!1)}};window.InflationSupportGame=InflationSupportGame$1;let ScaldingColoringGame$1=class extends MiniGame{constructor(e={}){super({name:"燙皮上糖色遊戲",timeLimit:0,successThreshold:.85,...e}),this.duckEmbryo={x:this.gameArea?this.gameArea.x+this.gameArea.width/2-100:300,y:this.gameArea?this.gameArea.y+this.gameArea.height/2-75:200,width:200,height:150},this.gamePhase="scalding",this.scaldingCompleted=!1,this.coloringCompleted=!1,this.scalding={waterPot:{x:this.gameArea?this.gameArea.x+50:100,y:this.gameArea?this.gameArea.y+this.gameArea.height-120:400,width:80,height:80,isPouring:!1},pourStream:{active:!1,x:0,y:0,targetX:0,targetY:0},scaldingGrid:[],scaldedCells:0,totalCells:0,scaldingProgress:0},this.coloring={brush:{x:0,y:0,size:30,isActive:!1,isDragging:!1},paintGrid:[],paintedCells:0,totalCells:0,coloringProgress:0},this.steamParticles=[],this.waterDroplets=[],this.initializeGrids()}initializeGrids(){const i=this.duckEmbryo.width/10,s=this.duckEmbryo.height/10;for(let a=0;a<10;a++)for(let n=0;n<10;n++){const r=this.duckEmbryo.x+n*i,h=this.duckEmbryo.y+a*s;this.scalding.scaldingGrid.push({x:r,y:h,width:i,height:s,scalded:!1,opacity:0}),this.coloring.paintGrid.push({x:r,y:h,width:i,height:s,painted:!1,opacity:0})}this.scalding.totalCells=this.scalding.scaldingGrid.length,this.coloring.totalCells=this.coloring.paintGrid.length}setupGame(){this.gamePhase="scalding",this.scaldingCompleted=!1,this.coloringCompleted=!1,this.scalding.scaldedCells=0,this.scalding.scaldingProgress=0,this.scalding.waterPot.isPouring=!1,this.scalding.pourStream.active=!1,this.scalding.scaldingGrid.forEach(e=>{e.scalded=!1,e.opacity=0}),this.coloring.paintedCells=0,this.coloring.coloringProgress=0,this.coloring.brush.isActive=!1,this.coloring.brush.isDragging=!1,this.coloring.paintGrid.forEach(e=>{e.painted=!1,e.opacity=0}),this.steamParticles=[],this.waterDroplets=[],this.updateProgress(0)}getInstructions(){return this.gamePhase==="scalding"?"按住熱水壺，將熱水澆在鴨子上進行燙皮":"拖動刷子在鴨子上塗抹蜂蜜"}createUI(){super.createUI(),this.gameEngine&&this.gameEngine.uiManager&&(this.phaseLabel=this.gameEngine.uiManager.createLabel({x:this.gameArea.x+20,y:this.gameArea.y+60,text:"階段: 燙皮",fontSize:14,color:"#333333"}),this.progressLabel=this.gameEngine.uiManager.createLabel({x:this.gameArea.x+20,y:this.gameArea.y+85,text:"燙皮進度: 0%",fontSize:14,color:"#333333"}))}updateGame(e){this.gamePhase==="scalding"?this.updateScaldingPhase(e):this.gamePhase==="coloring"&&this.updateColoringPhase(e),this.updateVisualEffects(e)}updateScaldingPhase(e){this.scalding.pourStream.active&&(this.checkScaldingCollision(),this.createSteamParticles()),this.scalding.scaldingProgress=this.scalding.scaldedCells/this.scalding.totalCells*100,this.updateProgress(this.scalding.scaldingProgress/200),this.progressLabel&&this.progressLabel.setText(`燙皮進度: ${Math.round(this.scalding.scaldingProgress)}%`),this.scalding.scaldingProgress>=100&&!this.scaldingCompleted&&(this.scaldingCompleted=!0,this.transitionToColoring())}updateColoringPhase(e){this.coloring.brush.isActive&&this.coloring.brush.isDragging&&this.checkColoringCollision(),this.coloring.coloringProgress=this.coloring.paintedCells/this.coloring.totalCells*100,this.updateProgress(.5+this.coloring.coloringProgress/200),this.progressLabel&&this.progressLabel.setText(`塗抹進度: ${Math.round(this.coloring.coloringProgress)}%`),this.coloring.coloringProgress>=100&&!this.coloringCompleted&&(this.coloringCompleted=!0,setTimeout(()=>{this.complete(!0)},500))}checkScaldingCollision(){const e=this.scalding.pourStream.targetX,t=this.scalding.pourStream.targetY,i=25;this.scalding.scaldingGrid.forEach(s=>{if(!s.scalded){const a=s.x+s.width/2,n=s.y+s.height/2,r=e-a,h=t-n;Math.sqrt(r*r+h*h)<i+Math.min(s.width,s.height)/2&&(s.scalded=!0,s.opacity=1,this.scalding.scaldedCells++)}})}checkColoringCollision(){const e=this.coloring.brush.size/2;this.coloring.paintGrid.forEach(t=>{if(!t.painted){const i=t.x+t.width/2,s=t.y+t.height/2,a=this.coloring.brush.x-i,n=this.coloring.brush.y-s;Math.sqrt(a*a+n*n)<e+Math.min(t.width,t.height)/2&&(t.painted=!0,t.opacity=1,this.coloring.paintedCells++)}})}createSteamParticles(){Math.random()<.3&&this.steamParticles.push({x:this.scalding.pourStream.targetX+(Math.random()-.5)*30,y:this.scalding.pourStream.targetY,vx:(Math.random()-.5)*2,vy:-2-Math.random()*2,life:1,maxLife:60,size:5+Math.random()*10})}updateVisualEffects(e){this.steamParticles=this.steamParticles.filter(t=>(t.x+=t.vx,t.y+=t.vy,t.life--,t.life>0))}transitionToColoring(){setTimeout(()=>{this.gamePhase="coloring",this.scalding.pourStream.active=!1,this.scalding.waterPot.isPouring=!1,this.phaseLabel&&this.phaseLabel.setText("階段: 上色"),this.progressLabel&&this.progressLabel.setText("塗抹進度: 0%")},1e3)}renderGame(e){e.fillStyle="#D2B48C",e.fillRect(this.duckEmbryo.x,this.duckEmbryo.y,this.duckEmbryo.width,this.duckEmbryo.height),(this.gamePhase==="scalding"||this.scaldingCompleted)&&this.scalding.scaldingGrid.forEach(t=>{t.scalded&&(e.fillStyle=`rgba(205, 133, 63, ${t.opacity*.5})`,e.fillRect(t.x,t.y,t.width,t.height))}),this.gamePhase==="coloring"&&this.coloring.paintGrid.forEach(t=>{t.painted&&(e.fillStyle=`rgba(255, 193, 7, ${t.opacity})`,e.fillRect(t.x,t.y,t.width,t.height))}),this.renderDuckOutline(e),this.gamePhase==="scalding"?this.renderScaldingPhase(e):this.gamePhase==="coloring"&&this.renderColoringPhase(e)}renderScaldingPhase(e){const t=this.scalding.waterPot;if(e.fillStyle=t.isPouring?"#CD853F":"#8B4513",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#654321",e.lineWidth=3,e.strokeRect(t.x,t.y,t.width,t.height),e.fillStyle=t.isPouring?"#CD853F":"#8B4513",e.beginPath(),e.moveTo(t.x+t.width,t.y+20),e.lineTo(t.x+t.width+15,t.y+15),e.lineTo(t.x+t.width+15,t.y+30),e.closePath(),e.fill(),e.stroke(),this.scalding.pourStream.active){const i=this.scalding.pourStream;e.strokeStyle="rgba(135, 206, 235, 0.7)",e.lineWidth=10,e.beginPath(),e.moveTo(i.x,i.y),e.lineTo(i.targetX,i.targetY),e.stroke();for(let s=0;s<3;s++){const a=s/3,n=i.x+(i.targetX-i.x)*a,r=i.y+(i.targetY-i.y)*a;e.fillStyle="rgba(135, 206, 235, 0.6)",e.beginPath(),e.arc(n,r,5,0,Math.PI*2),e.fill()}}this.steamParticles.forEach(i=>{const s=i.life/i.maxLife;e.fillStyle=`rgba(200, 200, 200, ${s*.5})`,e.beginPath(),e.arc(i.x,i.y,i.size,0,Math.PI*2),e.fill()}),e.fillStyle="#333333",e.font="12px Arial",e.textAlign="center",e.fillText("熱水壺",t.x+t.width/2,t.y+t.height+20)}renderColoringPhase(e){if(this.coloring.brush.isActive){const t=this.coloring.brush;e.fillStyle=t.isDragging?"rgba(255, 193, 7, 0.6)":"rgba(255, 193, 7, 0.3)",e.beginPath(),e.arc(t.x,t.y,t.size/2,0,Math.PI*2),e.fill(),e.strokeStyle="#FFA000",e.lineWidth=2,e.stroke(),e.fillStyle="#F57C00",e.beginPath(),e.arc(t.x,t.y,3,0,Math.PI*2),e.fill()}}renderDuckOutline(e){const t=this.duckEmbryo.x+this.duckEmbryo.width/2,i=this.duckEmbryo.y+this.duckEmbryo.height/2;e.strokeStyle="#8B4513",e.lineWidth=3,e.beginPath(),e.ellipse(t,i+10,this.duckEmbryo.width*.35,this.duckEmbryo.height*.35,0,0,Math.PI*2),e.stroke(),e.beginPath(),e.arc(t-this.duckEmbryo.width*.15,i-this.duckEmbryo.height*.2,this.duckEmbryo.width*.15,0,Math.PI*2),e.stroke()}handleGameInput(e){return e.type==="mousedown"?this.handleMouseDown(e.x,e.y):e.type==="mouseup"?this.handleMouseUp(e.x,e.y):e.type==="mousemove"?this.handleMouseMove(e.x,e.y):!1}handleMouseDown(e,t){if(this.gamePhase==="scalding"){const i=this.scalding.waterPot;if(e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height)return i.isPouring=!0,this.scalding.pourStream.active=!0,this.scalding.pourStream.x=i.x+i.width+15,this.scalding.pourStream.y=i.y+22,!0}else if(this.gamePhase==="coloring"&&e>=this.duckEmbryo.x-50&&e<=this.duckEmbryo.x+this.duckEmbryo.width+50&&t>=this.duckEmbryo.y-50&&t<=this.duckEmbryo.y+this.duckEmbryo.height+50)return this.coloring.brush.isActive=!0,this.coloring.brush.isDragging=!0,this.coloring.brush.x=e,this.coloring.brush.y=t,!0;return!1}handleMouseUp(e,t){return this.gamePhase==="scalding"?(this.scalding.waterPot.isPouring=!1,this.scalding.pourStream.active=!1):this.gamePhase==="coloring"&&(this.coloring.brush.isDragging=!1),!1}handleMouseMove(e,t){return this.gamePhase==="scalding"&&this.scalding.pourStream.active?(this.scalding.pourStream.targetX=e,this.scalding.pourStream.targetY=t,!0):this.gamePhase==="coloring"&&this.coloring.brush.isActive?(this.coloring.brush.x=e,this.coloring.brush.y=t,!0):!1}calculateAccuracyBonus(){let e=0;return this.scalding.scaldingProgress>=100&&(e+=25),this.coloring.coloringProgress>=100&&(e+=25),e}};window.ScaldingColoringGame=ScaldingColoringGame$1;let HangingEnvironmentGame$1=class extends MiniGame{constructor(e){super(e),this.name="懸掛環境控制遊戲",this.gameEngine=e.gameEngine,this.scene=e.scene,this.gameAreaX=e.gameAreaX||100,this.gameAreaY=e.gameAreaY||140,this.gameAreaWidth=e.gameAreaWidth||600,this.gameAreaHeight=e.gameAreaHeight||320,this.gameState="hanging",this.isCompleted=!1,this.score=0,this.hangingSystem={duck:{x:e.duckDisplay.x,y:e.duckDisplay.y,width:e.duckDisplay.width,height:e.duckDisplay.height,isDragging:!1,isHanging:!1,targetX:350,targetY:180,tolerance:30},hook:{x:350,y:120,width:20,height:40,isActive:!1},rope:{startX:350,startY:160,endX:350,endY:180,length:20}},this.environmentControls=e.environmentControls,this.controlSliders={temperature:{x:480,y:200,width:100,height:20,isDragging:!1,value:this.environmentControls.temperature.current},humidity:{x:480,y:240,width:100,height:20,isDragging:!1,value:this.environmentControls.humidity.current},airflow:{x:480,y:280,width:100,height:20,isDragging:!1,value:this.environmentControls.airflow.current}},this.progress={hangingCompleted:!1,environmentOptimized:!1,timeElapsed:0,maxTime:60},this.feedback={showHangingGuide:!0,showEnvironmentTips:!1,currentTip:"",tipTimer:0},this.particles=[],this.onProgressUpdate=e.onProgressUpdate||(()=>{})}start(){super.start(),console.log("懸掛環境控制遊戲開始"),console.log("遊戲狀態:",this.gameState),console.log("鴨胚位置:",this.hangingSystem.duck),console.log("isActive:",this.isActive),this.gameState="hanging",this.showInstructions(),this.initializeSliders()}initializeSliders(){Object.keys(this.controlSliders).forEach(e=>{const t=this.controlSliders[e],i=this.environmentControls[e],s=(i.current-i.min)/(i.max-i.min);t.value=i.current,t.position=s*t.width})}showInstructions(){this.feedback.currentTip="拖拽鴨胚到懸掛鉤上，然後調節環境參數",this.feedback.tipTimer=3}update(e){this.isActive&&(this.progress.timeElapsed+=e,this.feedback.tipTimer>0&&(this.feedback.tipTimer-=e),this.gameState==="hanging"?this.updateHangingPhase(e):this.gameState==="environment_control"&&this.updateEnvironmentPhase(e),this.updateParticles(e),this.checkCompletion(),this.updateProgressCallback())}updateHangingPhase(e){const t=this.hangingSystem.duck,i=this.hangingSystem.hook;t.isHanging||Math.sqrt(Math.pow(t.x+t.width/2-i.x,2)+Math.pow(t.y-i.y-i.height,2))<t.tolerance&&(t.isHanging=!0,this.progress.hangingCompleted=!0,this.gameState="environment_control",this.feedback.currentTip="很好！現在調節溫度、濕度和通風參數",this.feedback.tipTimer=3,this.score+=30,this.createSuccessParticles(i.x,i.y))}updateEnvironmentPhase(e){let t=0;Object.keys(this.environmentControls).forEach(i=>{const s=this.environmentControls[i],a=s.optimal;s.current>=a.min&&s.current<=a.max&&t++}),t===3?(this.progress.environmentOptimized=!0,this.feedback.currentTip="環境參數已優化！",this.score+=50):(this.progress.environmentOptimized=!1,this.updateEnvironmentTips())}updateEnvironmentTips(){const e=this.environmentControls.temperature,t=this.environmentControls.humidity,i=this.environmentControls.airflow;let s=[];e.current<e.optimal.min?s.push("溫度過低，需要提高"):e.current>e.optimal.max&&s.push("溫度過高，需要降低"),t.current<t.optimal.min?s.push("濕度過低，需要增加"):t.current>t.optimal.max&&s.push("濕度過高，需要減少"),i.current<i.optimal.min?s.push("通風不足，需要加強"):i.current>i.optimal.max&&s.push("通風過強，需要減弱"),s.length>0&&this.feedback.tipTimer<=0&&(this.feedback.currentTip=s[Math.floor(Math.random()*s.length)],this.feedback.tipTimer=2)}updateParticles(e){this.particles=this.particles.filter(t=>(t.x+=t.vx*e,t.y+=t.vy*e,t.life-=e,t.opacity=t.life/t.maxLife,t.life>0)),this.generateEnvironmentParticles()}generateEnvironmentParticles(){const e=this.environmentControls.airflow.current;Math.random()<e*.02&&this.particles.push({x:this.gameAreaX,y:this.gameAreaY+Math.random()*this.gameAreaHeight,vx:e*30+Math.random()*20,vy:(Math.random()-.5)*10,life:2,maxLife:2,opacity:.6,size:2+Math.random()*3,color:"#87CEEB"})}createSuccessParticles(e,t){for(let i=0;i<10;i++)this.particles.push({x:e,y:t,vx:(Math.random()-.5)*100,vy:(Math.random()-.5)*100,life:1.5,maxLife:1.5,opacity:1,size:3+Math.random()*4,color:"#FFD700"})}checkCompletion(){this.progress.hangingCompleted&&this.progress.environmentOptimized&&!this.isCompleted?this.completeGame(!0):this.progress.timeElapsed>this.progress.maxTime&&!this.isCompleted&&this.completeGame(!1)}updateProgressCallback(){const e={dryingProgress:this.progress.hangingCompleted?10:0,moistureLevel:100,skinTightness:this.progress.environmentOptimized?5:0};this.onProgressUpdate(e)}handleInput(e){if(console.log("HangingEnvironmentGame.handleInput called, isActive:",this.isActive,"event:",e.type),!this.isActive)return!1;const t=this.gameEngine.canvas.getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top;return console.log("Mouse position:",i,s,"Game state:",this.gameState),e.type==="mousedown"?this.handleMouseDown(i,s):e.type==="mousemove"?this.handleMouseMove(i,s):e.type==="mouseup"?this.handleMouseUp(i,s):!1}handleMouseDown(e,t){if(this.gameState==="hanging"){const i=this.hangingSystem.duck;if(e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height)return i.isDragging=!0,!0}return this.gameState==="environment_control"?(Object.keys(this.controlSliders).forEach(i=>{const s=this.controlSliders[i];e>=s.x&&e<=s.x+s.width&&t>=s.y&&t<=s.y+s.height&&(s.isDragging=!0,this.updateSliderValue(i,e))}),!0):!1}handleMouseMove(e,t){if(this.gameState==="hanging"){const i=this.hangingSystem.duck;if(i.isDragging)return i.x=e-i.width/2,i.y=t-i.height/2,!0}return this.gameState==="environment_control"?(Object.keys(this.controlSliders).forEach(i=>{this.controlSliders[i].isDragging&&this.updateSliderValue(i,e)}),!0):!1}handleMouseUp(e,t){return this.gameState==="hanging"&&(this.hangingSystem.duck.isDragging=!1),Object.keys(this.controlSliders).forEach(i=>{this.controlSliders[i].isDragging=!1}),!1}updateSliderValue(e,t){const i=this.controlSliders[e],s=this.environmentControls[e];let a=t-i.x;a=Math.max(0,Math.min(i.width,a));const n=a/i.width,r=s.min+n*(s.max-s.min);i.value=Math.round(r),i.position=a,s.current=i.value,this.scene.environmentControls[e].current=i.value}render(e){this.isActive&&(this.renderGameArea(e),this.gameState==="hanging"?this.renderHangingPhase(e):this.gameState==="environment_control"&&this.renderEnvironmentPhase(e),this.renderParticles(e),this.renderUI(e))}renderGameArea(e){e.fillStyle="rgba(240, 248, 255, 0.9)",e.fillRect(this.gameAreaX,this.gameAreaY,this.gameAreaWidth,this.gameAreaHeight),e.strokeStyle="#4682B4",e.lineWidth=2,e.strokeRect(this.gameAreaX,this.gameAreaY,this.gameAreaWidth,this.gameAreaHeight)}renderHangingPhase(e){const t=this.hangingSystem.duck,i=this.hangingSystem.hook;this.hangingSystem.rope,e.fillStyle="#8B4513",e.fillRect(i.x-i.width/2,i.y,i.width,i.height),e.beginPath(),e.arc(i.x,i.y,8,0,Math.PI*2),e.fill(),t.isHanging||(e.strokeStyle="#32CD32",e.lineWidth=3,e.setLineDash([5,5]),e.strokeRect(i.x-t.tolerance,i.y+i.height-t.tolerance,t.tolerance*2,t.tolerance*2),e.setLineDash([])),t.isHanging&&(e.strokeStyle="#654321",e.lineWidth=3,e.beginPath(),e.moveTo(i.x,i.y+i.height),e.lineTo(t.x+t.width/2,t.y),e.stroke()),e.fillStyle=t.isDragging?"#FFE4B5":"#F5DEB3",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle=t.isDragging?"#FF8C00":"#D2B48C",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height),e.fillStyle="#8B4513",e.font="14px Microsoft JhengHei",e.textAlign="center",e.fillText("鴨胚",t.x+t.width/2,t.y+t.height/2+5)}renderEnvironmentPhase(e){const t=this.hangingSystem.duck,i=this.hangingSystem.hook;e.strokeStyle="#654321",e.lineWidth=3,e.beginPath(),e.moveTo(i.x,i.y+i.height),e.lineTo(t.targetX+t.width/2,t.targetY),e.stroke(),e.fillStyle="#F5DEB3",e.fillRect(t.targetX,t.targetY,t.width,t.height),e.strokeStyle="#D2B48C",e.lineWidth=2,e.strokeRect(t.targetX,t.targetY,t.width,t.height),this.renderEnvironmentSliders(e)}renderEnvironmentSliders(e){const t=["temperature","humidity","airflow"],i=["溫度","濕度","通風"],s=["#FF4500","#4169E1","#32CD32"];t.forEach((a,n)=>{const r=this.controlSliders[a],h=this.environmentControls[a],o=h.optimal;e.fillStyle="#E0E0E0",e.fillRect(r.x,r.y,r.width,r.height);const c=(o.min-h.min)/(h.max-h.min)*r.width,g=(o.max-o.min)/(h.max-h.min)*r.width;e.fillStyle="rgba(50, 205, 50, 0.3)",e.fillRect(r.x+c,r.y,g,r.height);const u=r.x+(r.value-h.min)/(h.max-h.min)*r.width;e.fillStyle=s[n],e.fillRect(u-5,r.y-2,10,r.height+4),e.strokeStyle="#808080",e.lineWidth=1,e.strokeRect(r.x,r.y,r.width,r.height),e.fillStyle="#2F4F4F",e.font="12px Microsoft JhengHei",e.textAlign="left",e.fillText(`${i[n]}: ${r.value}`,r.x-60,r.y+15),e.font="10px Microsoft JhengHei",e.fillText(`${h.min}`,r.x-15,r.y+30),e.textAlign="right",e.fillText(`${h.max}`,r.x+r.width+15,r.y+30),e.textAlign="left"})}renderParticles(e){e.save(),this.particles.forEach(t=>{e.globalAlpha=t.opacity,e.fillStyle=t.color,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()}),e.restore()}renderUI(e){e.fillStyle="#2F4F4F",e.font="bold 16px Microsoft JhengHei",e.textAlign="center",e.fillText("懸掛和環境控制",this.gameAreaX+this.gameAreaWidth/2,this.gameAreaY-10),this.renderProgressIndicator(e),this.feedback.tipTimer>0&&this.renderTip(e),this.renderTimeRemaining(e)}renderProgressIndicator(e){const t=this.gameAreaX+10,i=this.gameAreaY+10,s=this.progress.hangingCompleted?"✅":"⏳";e.fillStyle="#2F4F4F",e.font="14px Microsoft JhengHei",e.textAlign="left",e.fillText(`${s} 懸掛鴨胚`,t,i);const a=this.progress.environmentOptimized?"✅":"⏳";e.fillText(`${a} 環境控制`,t,i+20)}renderTip(e){const t=this.gameAreaX+this.gameAreaWidth/2,i=this.gameAreaY+this.gameAreaHeight-30,s=e.measureText(this.feedback.currentTip).width;e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(t-s/2-10,i-20,s+20,25),e.fillStyle="#FFFFFF",e.font="14px Microsoft JhengHei",e.textAlign="center",e.fillText(this.feedback.currentTip,t,i-5)}renderTimeRemaining(e){const t=Math.max(0,this.progress.maxTime-this.progress.timeElapsed),i=Math.floor(t/60),s=Math.floor(t%60);e.fillStyle=t<10?"#FF6B6B":"#2F4F4F",e.font="14px Microsoft JhengHei",e.textAlign="right",e.fillText(`剩餘時間: ${i}:${s.toString().padStart(2,"0")}`,this.gameAreaX+this.gameAreaWidth-10,this.gameAreaY+25)}completeGame(e){if(this.isCompleted=!0,e){const t=Math.max(0,(this.progress.maxTime-this.progress.timeElapsed)/this.progress.maxTime*20);this.score+=Math.round(t),console.log(`懸掛環境控制遊戲成功完成，分數: ${this.score}`)}else console.log("懸掛環境控制遊戲失敗"),this.score=Math.max(10,this.score);this.onComplete&&this.onComplete(e,{score:this.score,timeUsed:this.progress.timeElapsed})}cleanup(){super.cleanup(),this.particles=[],console.log("懸掛環境控制遊戲清理完成")}};window.HangingEnvironmentGame=HangingEnvironmentGame$1;let WaterInjectionGame$1=class extends MiniGame{constructor(e){super(e),this.name="灌湯遊戲",this.gameArea={x:e.gameAreaX||100,y:e.gameAreaY||140,width:e.gameAreaWidth||600,height:e.gameAreaHeight||320},this.gameState={phase:"preparation",waterTemp:25,targetTemp:82,waterAmount:0,targetAmount:75,injectionRate:0,isHeating:!1,isInjecting:!1,timeRemaining:60,accuracy:100},this.controls={heater:{x:this.gameArea.x+50,y:this.gameArea.y+200,width:80,height:60,isPressed:!1,heatRate:3},injector:{x:this.gameArea.x+200,y:this.gameArea.y+200,width:80,height:60,isPressed:!1,injectionRate:15},thermometer:{x:this.gameArea.x+350,y:this.gameArea.y+50,width:30,height:120}},this.duckDisplay={x:this.gameArea.x+400,y:this.gameArea.y+120,width:150,height:100,waterLevel:0,isSealed:!1},this.effects={steam:[],waterDrops:[],bubbles:[]},this.completionCriteria={minWaterAmount:70,maxWaterAmount:80,minTemp:80,maxTemp:85,timeBonus:!0},this.uiElements=[],console.log("灌湯迷你遊戲初始化完成")}start(){super.start(),this.setupGameUI(),this.gameState.phase="preparation",console.log("灌湯遊戲開始")}setupGameUI(){const e=this.gameEngine.uiManager;this.titleLabel=e.createLabel({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y-20,text:"灌湯工藝 - 控制水溫與水量",fontSize:18,color:"#4169E1",align:"center"}),this.instructionLabel=e.createLabel({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y+10,text:"目標：將80-85°C的熱水注入鴨腹，水量控制在70-80%",fontSize:14,color:"#2F4F4F",align:"center"}),this.tempLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+50,text:`水溫: ${this.gameState.waterTemp}°C`,fontSize:16,color:"#FF4500",align:"left"}),this.amountLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+80,text:`水量: ${this.gameState.waterAmount}%`,fontSize:16,color:"#1E90FF",align:"left"}),this.timeLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+110,text:`時間: ${Math.ceil(this.gameState.timeRemaining)}秒`,fontSize:16,color:"#8B0000",align:"left"}),this.accuracyLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+140,text:`精確度: ${this.gameState.accuracy}%`,fontSize:16,color:"#32CD32",align:"left"}),this.uiElements.push(this.titleLabel,this.instructionLabel,this.tempLabel,this.amountLabel,this.timeLabel,this.accuracyLabel)}update(e){this.isActive&&(this.updateGameState(e),this.updateControls(e),this.updateEffects(e),this.updateUI(),this.checkCompletion())}updateGameState(e){if(this.gameState.phase!=="completed"&&(this.gameState.timeRemaining-=e,this.gameState.timeRemaining<=0)){this.gameState.timeRemaining=0,this.completeGame(!1);return}this.gameState.isHeating?this.gameState.waterTemp=Math.min(100,this.gameState.waterTemp+this.controls.heater.heatRate*e):this.gameState.waterTemp>25&&(this.gameState.waterTemp=Math.max(25,this.gameState.waterTemp-.5*e)),this.gameState.isInjecting&&this.gameState.waterAmount<100&&(this.gameState.waterAmount=Math.min(100,this.gameState.waterAmount+this.controls.injector.injectionRate*e),this.duckDisplay.waterLevel=this.gameState.waterAmount,Math.random()<.3&&this.createWaterDropEffect()),this.updateAccuracy()}updateAccuracy(){let e=100;const t=Math.abs(this.gameState.waterTemp-this.gameState.targetTemp);t>5&&(e-=t*2);const i=Math.abs(this.gameState.waterAmount-this.gameState.targetAmount);i>5&&(e-=i),this.gameState.timeRemaining/60>.5&&(e+=10),this.gameState.accuracy=Math.max(0,Math.min(100,e))}updateControls(e){this.gameState.isHeating=this.controls.heater.isPressed,this.gameState.isInjecting=this.controls.injector.isPressed,this.gameState.waterTemp>70&&Math.random()<.2&&this.createSteamEffect(),this.gameState.isHeating&&this.gameState.waterTemp>80&&Math.random()<.4&&this.createBubbleEffect()}createSteamEffect(){this.effects.steam.push({x:this.controls.thermometer.x+Math.random()*20,y:this.controls.thermometer.y,vx:(Math.random()-.5)*10,vy:-20-Math.random()*10,life:1.5+Math.random()*.5,size:2+Math.random()*3,opacity:.7})}createWaterDropEffect(){this.effects.waterDrops.push({x:this.controls.injector.x+this.controls.injector.width/2,y:this.controls.injector.y+this.controls.injector.height,vx:(Math.random()-.5)*5,vy:30+Math.random()*20,life:1,size:2+Math.random()*2})}createBubbleEffect(){this.effects.bubbles.push({x:this.controls.heater.x+Math.random()*this.controls.heater.width,y:this.controls.heater.y+this.controls.heater.height,vy:-15-Math.random()*10,life:2,size:3+Math.random()*4,opacity:.6})}updateEffects(e){this.effects.steam=this.effects.steam.filter(t=>(t.x+=t.vx*e,t.y+=t.vy*e,t.life-=e,t.opacity=t.life/2,t.life>0)),this.effects.waterDrops=this.effects.waterDrops.filter(t=>(t.x+=t.vx*e,t.y+=t.vy*e,t.life-=e,t.life>0&&t.y<this.gameArea.y+this.gameArea.height)),this.effects.bubbles=this.effects.bubbles.filter(t=>(t.y+=t.vy*e,t.life-=e,t.opacity=t.life/2,t.life>0))}updateUI(){this.tempLabel&&this.tempLabel.setText(`水溫: ${Math.round(this.gameState.waterTemp)}°C`),this.amountLabel&&this.amountLabel.setText(`水量: ${Math.round(this.gameState.waterAmount)}%`),this.timeLabel&&this.timeLabel.setText(`時間: ${Math.ceil(this.gameState.timeRemaining)}秒`),this.accuracyLabel&&this.accuracyLabel.setText(`精確度: ${Math.round(this.gameState.accuracy)}%`)}checkCompletion(){if(this.gameState.phase==="completed")return;const e=this.completionCriteria,t=this.gameState,i=t.waterTemp>=e.minTemp&&t.waterTemp<=e.maxTemp,s=t.waterAmount>=e.minWaterAmount&&t.waterAmount<=e.maxWaterAmount;i&&s?this.completeGame(!0):t.waterAmount>=100?this.completeGame(!1):t.waterTemp>=95&&this.completeGame(!1)}completeGame(e){if(this.gameState.phase==="completed")return;this.gameState.phase="completed";const t={score:Math.round(this.gameState.accuracy),waterAmount:Math.round(this.gameState.waterAmount),waterTemp:Math.round(this.gameState.waterTemp),timeUsed:60-this.gameState.timeRemaining};console.log("灌湯遊戲完成:",e?"成功":"失敗",t),setTimeout(()=>{this.complete(e,t)},1500)}handleInput(e){if(!this.isActive||this.gameState.phase==="completed")return!1;const t=this.gameEngine.canvas.getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top;if(e.type==="mousedown"||e.type==="touchstart"){if(this.isPointInRect(i,s,this.controls.heater))return this.controls.heater.isPressed=!0,!0;if(this.isPointInRect(i,s,this.controls.injector))return this.controls.injector.isPressed=!0,!0}else if(e.type==="mouseup"||e.type==="touchend")return this.controls.heater.isPressed=!1,this.controls.injector.isPressed=!1,!0;return!1}isPointInRect(e,t,i){return e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height}render(e){this.isActive&&(this.renderGameArea(e),this.renderControls(e),this.renderDuckDisplay(e),this.renderThermometer(e),this.renderEffects(e),this.gameState.phase==="completed"&&this.renderCompletionMessage(e))}renderGameArea(e){e.fillStyle="rgba(240, 248, 255, 0.9)",e.fillRect(this.gameArea.x,this.gameArea.y,this.gameArea.width,this.gameArea.height),e.strokeStyle="#4169E1",e.lineWidth=2,e.strokeRect(this.gameArea.x,this.gameArea.y,this.gameArea.width,this.gameArea.height)}renderControls(e){const t=this.controls.heater;e.fillStyle=t.isPressed?"#FF6347":"#FF4500",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#8B0000",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height),e.fillStyle="#FFFFFF",e.font="14px Arial",e.textAlign="center",e.fillText("加熱",t.x+t.width/2,t.y+t.height/2+5);const i=this.controls.injector;e.fillStyle=i.isPressed?"#00BFFF":"#1E90FF",e.fillRect(i.x,i.y,i.width,i.height),e.strokeStyle="#000080",e.lineWidth=2,e.strokeRect(i.x,i.y,i.width,i.height),e.fillStyle="#FFFFFF",e.fillText("注入",i.x+i.width/2,i.y+i.height/2+5)}renderDuckDisplay(e){const t=this.duckDisplay;if(e.fillStyle="#DEB887",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#8B7355",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height),t.waterLevel>0){const i=t.height*t.waterLevel/100;e.fillStyle="rgba(30, 144, 255, 0.7)",e.fillRect(t.x+10,t.y+t.height-i-10,t.width-20,i)}e.fillStyle="#000000",e.font="12px Arial",e.textAlign="center",e.fillText("鴨腹",t.x+t.width/2,t.y-10)}renderThermometer(e){const t=this.controls.thermometer;e.fillStyle="#FFFFFF",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#000000",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height);const i=Math.min(1,this.gameState.waterTemp/100),s=t.height*i;let a="#4169E1";this.gameState.waterTemp>50&&(a="#32CD32"),this.gameState.waterTemp>70&&(a="#FFD700"),this.gameState.waterTemp>85&&(a="#FF4500"),this.gameState.waterTemp>95&&(a="#FF0000"),e.fillStyle=a,e.fillRect(t.x+2,t.y+t.height-s-2,t.width-4,s);const n=80/100,r=85/100,h=t.y+t.height*(1-n),o=t.y+t.height*(1-r);e.strokeStyle="#00FF00",e.lineWidth=3,e.beginPath(),e.moveTo(t.x-5,h),e.lineTo(t.x+t.width+5,h),e.moveTo(t.x-5,o),e.lineTo(t.x+t.width+5,o),e.stroke()}renderEffects(e){this.effects.steam.forEach(t=>{e.fillStyle=`rgba(255, 255, 255, ${t.opacity})`,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()}),this.effects.waterDrops.forEach(t=>{e.fillStyle=`rgba(30, 144, 255, ${t.life})`,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()}),this.effects.bubbles.forEach(t=>{e.strokeStyle=`rgba(255, 255, 255, ${t.opacity})`,e.lineWidth=1,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.stroke()})}renderCompletionMessage(e){const t=this.gameArea.x+this.gameArea.width/2,i=this.gameArea.y+this.gameArea.height/2;e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(this.gameArea.x,this.gameArea.y,this.gameArea.width,this.gameArea.height);const s=this.gameState.accuracy>=70;e.fillStyle=s?"#32CD32":"#FF6B6B",e.font="24px Arial",e.textAlign="center",e.fillText(s?"灌湯完成！":"需要重試",t,i-20),e.font="16px Arial",e.fillStyle="#FFFFFF",e.fillText(`精確度: ${Math.round(this.gameState.accuracy)}%`,t,i+20)}cleanup(){super.cleanup(),this.uiElements.forEach(e=>{this.gameEngine.uiManager&&this.gameEngine.uiManager.removeUIElement(e)}),this.uiElements=[],console.log("灌湯遊戲清理完成")}};window.WaterInjectionGame=WaterInjectionGame$1;let TemperatureControlGame$1=class extends MiniGame{constructor(e){super(e),this.name="溫度控制遊戲",this.gameArea={x:e.gameAreaX||100,y:e.gameAreaY||140,width:e.gameAreaWidth||600,height:e.gameAreaHeight||320},this.gameState={phase:"stage1",currentTemp:25,targetTemp:260,fuelLevel:100,airflow:50,timeInStage:0,totalTime:0,accuracy:100,stageComplete:!1},this.temperatureStages=[{name:"高溫定型",targetTemp:260,duration:15,tolerance:10,description:"快速升溫到260°C，定型鴨皮"},{name:"中溫烤製",targetTemp:210,duration:20,tolerance:8,description:"降溫到210°C，均勻烤製"},{name:"低溫收色",targetTemp:180,duration:10,tolerance:5,description:"降到180°C，完美上色"}],this.currentStageIndex=0,this.controls={fuelControl:{x:this.gameArea.x+50,y:this.gameArea.y+200,width:120,height:20,value:50,isDragging:!1},airflowControl:{x:this.gameArea.x+200,y:this.gameArea.y+200,width:120,height:20,value:50,isDragging:!1},emergencyStop:{x:this.gameArea.x+350,y:this.gameArea.y+180,width:80,height:40,isPressed:!1}},this.ovenDisplay={x:this.gameArea.x+450,y:this.gameArea.y+50,width:120,height:150,flameHeight:0,heatLevel:0},this.thermometer={x:this.gameArea.x+400,y:this.gameArea.y+50,width:30,height:150},this.effects={flames:[],smoke:[],sparks:[]},this.uiElements=[],console.log("溫度控制迷你遊戲初始化完成")}start(){super.start(),this.setupGameUI(),this.gameState.phase="stage1",this.currentStageIndex=0,this.updateTargetTemperature(),console.log("溫度控制遊戲開始")}setupGameUI(){const e=this.gameEngine.uiManager;this.titleLabel=e.createLabel({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y-20,text:"溫度控制 - 掌握烤製火候",fontSize:18,color:"#DC143C",align:"center"}),this.stageLabel=e.createLabel({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y+10,text:this.getCurrentStageDescription(),fontSize:14,color:"#8B0000",align:"center"}),this.currentTempLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+50,text:`當前溫度: ${Math.round(this.gameState.currentTemp)}°C`,fontSize:16,color:"#FF4500",align:"left"}),this.targetTempLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+80,text:`目標溫度: ${this.gameState.targetTemp}°C`,fontSize:16,color:"#32CD32",align:"left"}),this.fuelLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+110,text:`燃料水平: ${Math.round(this.gameState.fuelLevel)}%`,fontSize:14,color:"#DAA520",align:"left"}),this.airflowLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+130,text:`通風量: ${Math.round(this.gameState.airflow)}%`,fontSize:14,color:"#4682B4",align:"left"}),this.timeLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+150,text:this.getTimeDisplayText(),fontSize:14,color:"#2F4F4F",align:"left"}),this.accuracyLabel=e.createLabel({x:this.gameArea.x+250,y:this.gameArea.y+50,text:`精確度: ${Math.round(this.gameState.accuracy)}%`,fontSize:16,color:"#9932CC",align:"left"}),this.uiElements.push(this.titleLabel,this.stageLabel,this.currentTempLabel,this.targetTempLabel,this.fuelLabel,this.airflowLabel,this.timeLabel,this.accuracyLabel)}getCurrentStageDescription(){const e=this.temperatureStages[this.currentStageIndex];return e?`${e.name}: ${e.description}`:"完成"}getTimeDisplayText(){const e=this.temperatureStages[this.currentStageIndex];if(!e)return"完成";const t=Math.max(0,e.duration-this.gameState.timeInStage);return`階段時間: ${Math.ceil(t)}秒`}updateTargetTemperature(){const e=this.temperatureStages[this.currentStageIndex];e&&(this.gameState.targetTemp=e.targetTemp)}update(e){this.isActive&&(this.updateGameState(e),this.updateTemperatureSystem(e),this.updateEffects(e),this.updateUI(),this.checkStageCompletion())}updateGameState(e){this.gameState.timeInStage+=e,this.gameState.totalTime+=e;const t=this.controls.fuelControl.value*.5*e;this.gameState.fuelLevel=Math.max(0,this.gameState.fuelLevel-t),this.updateAccuracy()}updateTemperatureSystem(e){const t=this.controls.fuelControl.value/100,i=this.controls.airflowControl.value/100;let s=0;this.gameState.fuelLevel>0&&!this.controls.emergencyStop.isPressed&&(s=t*(.5+i*.5));const a=300,n=25;if(s>0){const r=s*100;this.gameState.currentTemp=Math.min(a,this.gameState.currentTemp+r*e)}else{const r=20+i*30;this.gameState.currentTemp=Math.max(n,this.gameState.currentTemp-r*e)}this.ovenDisplay.heatLevel=s,this.ovenDisplay.flameHeight=s*50,this.gameState.airflow=this.controls.airflowControl.value,s>.3&&this.generateFlameEffects(),this.gameState.currentTemp>200&&this.generateSmokeEffects()}updateAccuracy(){const e=this.temperatureStages[this.currentStageIndex];if(!e)return;const t=Math.abs(this.gameState.currentTemp-this.gameState.targetTemp),i=e.tolerance;let s=100;t>i&&(s-=(t-i)*2),this.gameState.fuelLevel>20&&(s+=5),this.gameState.timeInStage/e.duration<1.2&&(s+=10),this.gameState.accuracy=Math.max(0,Math.min(100,s))}generateFlameEffects(){Math.random()<.4&&this.effects.flames.push({x:this.ovenDisplay.x+20+Math.random()*80,y:this.ovenDisplay.y+this.ovenDisplay.height-10,height:10+Math.random()*this.ovenDisplay.flameHeight,life:.3+Math.random()*.4,intensity:this.ovenDisplay.heatLevel})}generateSmokeEffects(){Math.random()<.2&&this.effects.smoke.push({x:this.ovenDisplay.x+this.ovenDisplay.width/2,y:this.ovenDisplay.y,vx:(Math.random()-.5)*20,vy:-30-Math.random()*20,life:2+Math.random(),size:3+Math.random()*5,opacity:.6})}updateEffects(e){this.effects.flames=this.effects.flames.filter(t=>(t.life-=e*3,t.height*=.95,t.life>0)),this.effects.smoke=this.effects.smoke.filter(t=>(t.x+=t.vx*e,t.y+=t.vy*e,t.life-=e,t.opacity=t.life/3,t.size+=e*2,t.life>0))}checkStageCompletion(){const e=this.temperatureStages[this.currentStageIndex];if(!e)return;const t=Math.abs(this.gameState.currentTemp-this.gameState.targetTemp)<=e.tolerance,i=this.gameState.timeInStage>=e.duration;t&&i?this.completeCurrentStage():this.gameState.timeInStage>e.duration*1.5?this.completeGame(!1):this.gameState.fuelLevel<=0&&this.gameState.currentTemp<this.gameState.targetTemp*.8&&this.completeGame(!1)}completeCurrentStage(){console.log(`階段 ${this.currentStageIndex+1} 完成`),this.currentStageIndex++,this.currentStageIndex>=this.temperatureStages.length?this.completeGame(!0):(this.gameState.timeInStage=0,this.updateTargetTemperature(),this.stageLabel&&this.stageLabel.setText(this.getCurrentStageDescription()))}completeGame(e){if(this.gameState.phase==="completed")return;this.gameState.phase="completed";const t={score:Math.round(this.gameState.accuracy),tempControl:Math.round(this.gameState.accuracy),fuelEfficiency:Math.round(this.gameState.fuelLevel),timeUsed:this.gameState.totalTime,stagesCompleted:this.currentStageIndex};console.log("溫度控制遊戲完成:",e?"成功":"失敗",t),setTimeout(()=>{this.complete(e,t)},2e3)}updateUI(){this.currentTempLabel&&this.currentTempLabel.setText(`當前溫度: ${Math.round(this.gameState.currentTemp)}°C`),this.targetTempLabel&&this.targetTempLabel.setText(`目標溫度: ${this.gameState.targetTemp}°C`),this.fuelLabel&&this.fuelLabel.setText(`燃料水平: ${Math.round(this.gameState.fuelLevel)}%`),this.airflowLabel&&this.airflowLabel.setText(`通風量: ${Math.round(this.gameState.airflow)}%`),this.timeLabel&&this.timeLabel.setText(this.getTimeDisplayText()),this.accuracyLabel&&this.accuracyLabel.setText(`精確度: ${Math.round(this.gameState.accuracy)}%`)}handleInput(e){if(!this.isActive||this.gameState.phase==="completed")return!1;const t=this.gameEngine.canvas.getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top;if(e.type==="mousedown"||e.type==="touchstart"){if(this.isPointInSlider(i,s,this.controls.fuelControl))return this.controls.fuelControl.isDragging=!0,this.updateSliderValue(i,this.controls.fuelControl),!0;if(this.isPointInSlider(i,s,this.controls.airflowControl))return this.controls.airflowControl.isDragging=!0,this.updateSliderValue(i,this.controls.airflowControl),!0;if(this.isPointInRect(i,s,this.controls.emergencyStop))return this.controls.emergencyStop.isPressed=!this.controls.emergencyStop.isPressed,!0}else if(e.type==="mousemove"||e.type==="touchmove"){if(this.controls.fuelControl.isDragging)return this.updateSliderValue(i,this.controls.fuelControl),!0;if(this.controls.airflowControl.isDragging)return this.updateSliderValue(i,this.controls.airflowControl),!0}else if(e.type==="mouseup"||e.type==="touchend")return this.controls.fuelControl.isDragging=!1,this.controls.airflowControl.isDragging=!1,!0;return!1}isPointInSlider(e,t,i){return e>=i.x&&e<=i.x+i.width&&t>=i.y-10&&t<=i.y+i.height+10}isPointInRect(e,t,i){return e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height}updateSliderValue(e,t){const i=e-t.x,s=Math.max(0,Math.min(1,i/t.width));t.value=s*100}render(e){this.isActive&&(this.renderGameArea(e),this.renderOven(e),this.renderThermometer(e),this.renderControls(e),this.renderEffects(e),this.gameState.phase==="completed"&&this.renderCompletionMessage(e))}renderGameArea(e){e.fillStyle="rgba(139, 69, 19, 0.1)",e.fillRect(this.gameArea.x,this.gameArea.y,this.gameArea.width,this.gameArea.height),e.strokeStyle="#DC143C",e.lineWidth=2,e.strokeRect(this.gameArea.x,this.gameArea.y,this.gameArea.width,this.gameArea.height)}renderOven(e){const t=this.ovenDisplay;e.fillStyle="#8B4513",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#654321",e.lineWidth=3,e.strokeRect(t.x,t.y,t.width,t.height);const i=this.getHeatColor(this.gameState.currentTemp);e.fillStyle=i,e.fillRect(t.x+5,t.y+5,t.width-10,t.height-10),e.fillStyle="rgba(0, 0, 0, 0.3)",e.fillRect(t.x+10,t.y+10,t.width-20,t.height-20)}getHeatColor(e){return e<100?"#2F2F2F":e<150?"#8B0000":e<200?"#DC143C":e<250?"#FF4500":"#FF6347"}renderThermometer(e){const t=this.thermometer;e.fillStyle="#FFFFFF",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#000000",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height);const i=Math.min(1,this.gameState.currentTemp/300),s=t.height*i;e.fillStyle=this.getTemperatureColor(this.gameState.currentTemp),e.fillRect(t.x+2,t.y+t.height-s-2,t.width-4,s);const a=this.gameState.targetTemp/300,n=t.y+t.height*(1-a);e.strokeStyle="#00FF00",e.lineWidth=3,e.beginPath(),e.moveTo(t.x-5,n),e.lineTo(t.x+t.width+5,n),e.stroke()}getTemperatureColor(e){return e<50?"#4169E1":e<100?"#32CD32":e<150?"#FFD700":e<200?"#FF8C00":e<250?"#FF4500":"#FF0000"}renderControls(e){this.renderSlider(e,this.controls.fuelControl,"燃料控制","#DAA520"),this.renderSlider(e,this.controls.airflowControl,"通風控制","#4682B4");const t=this.controls.emergencyStop;e.fillStyle=t.isPressed?"#8B0000":"#FF0000",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#000000",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height),e.fillStyle="#FFFFFF",e.font="12px Arial",e.textAlign="center",e.fillText("緊急停止",t.x+t.width/2,t.y+t.height/2+4)}renderSlider(e,t,i,s){e.fillStyle="#CCCCCC",e.fillRect(t.x,t.y,t.width,t.height);const a=t.width*t.value/100;e.fillStyle=s,e.fillRect(t.x,t.y,a,t.height),e.strokeStyle="#000000",e.lineWidth=1,e.strokeRect(t.x,t.y,t.width,t.height);const n=t.x+a-5;e.fillStyle="#FFFFFF",e.fillRect(n,t.y-5,10,t.height+10),e.strokeRect(n,t.y-5,10,t.height+10),e.fillStyle="#000000",e.font="12px Arial",e.textAlign="left",e.fillText(i,t.x,t.y-5),e.textAlign="right",e.fillText(`${Math.round(t.value)}%`,t.x+t.width,t.y-5)}renderEffects(e){this.effects.flames.forEach(t=>{const i=t.life/.7;e.fillStyle=`rgba(255, ${Math.floor(100+155*t.intensity)}, 0, ${i})`,e.fillRect(t.x-3,t.y-t.height,6,t.height)}),this.effects.smoke.forEach(t=>{e.fillStyle=`rgba(105, 105, 105, ${t.opacity})`,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()})}renderCompletionMessage(e){const t=this.gameArea.x+this.gameArea.width/2,i=this.gameArea.y+this.gameArea.height/2;e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(this.gameArea.x,this.gameArea.y,this.gameArea.width,this.gameArea.height);const s=this.gameState.accuracy>=70;e.fillStyle=s?"#32CD32":"#FF6B6B",e.font="24px Arial",e.textAlign="center",e.fillText(s?"溫度控制完成！":"需要重試",t,i-30),e.font="16px Arial",e.fillStyle="#FFFFFF",e.fillText(`完成階段: ${this.currentStageIndex}/${this.temperatureStages.length}`,t,i),e.fillText(`精確度: ${Math.round(this.gameState.accuracy)}%`,t,i+30)}cleanup(){super.cleanup(),this.uiElements.forEach(e=>{this.gameEngine.uiManager&&this.gameEngine.uiManager.removeUIElement(e)}),this.uiElements=[],console.log("溫度控制遊戲清理完成")}};window.TemperatureControlGame=TemperatureControlGame$1;let RotationTimingGame$1=class extends MiniGame{constructor(e){super(e),this.name="翻轉時機遊戲",this.gameArea={x:e.gameAreaX||100,y:e.gameAreaY||140,width:e.gameAreaWidth||600,height:e.gameAreaHeight||320},this.gameState={phase:"waiting",currentRotation:0,totalRotations:3,roastingTime:0,lastRotationTime:0,accuracy:100,isRotating:!1,rotationProgress:0,timingScore:100},this.rotationTimings=[{name:"第一次翻轉",optimalTime:15,tolerance:3,description:"皮面金黃時進行第一次翻轉"},{name:"第二次翻轉",optimalTime:35,tolerance:4,description:"確保背面均勻受熱"},{name:"第三次翻轉",optimalTime:50,tolerance:3,description:"最後調整，完美上色"}],this.duckDisplay={x:this.gameArea.x+250,y:this.gameArea.y+120,width:120,height:80,rotation:0,targetRotation:0,skinColor:[50,50,50,50],heatLevel:[0,0,0,0],currentSide:0},this.timingIndicator={x:this.gameArea.x+50,y:this.gameArea.y+50,width:400,height:30,zones:[]},this.rotateButton={x:this.gameArea.x+480,y:this.gameArea.y+220,width:100,height:50,isPressed:!1,canRotate:!1},this.effects={rotationLines:[],heatIndicators:[],timingAlerts:[]},this.uiElements=[],this.initializeTimingZones(),console.log("翻轉時機迷你遊戲初始化完成")}initializeTimingZones(){const e=this.timingIndicator,t=60;this.rotationTimings.forEach((i,s)=>{const a=e.x+i.optimalTime/t*e.width,n=i.tolerance*2/t*e.width;e.zones.push({x:a-n/2,width:n,centerX:a,timing:i,index:s})})}start(){super.start(),this.setupGameUI(),this.gameState.phase="waiting",this.gameState.roastingTime=0,console.log("翻轉時機遊戲開始")}setupGameUI(){const e=this.gameEngine.uiManager;this.titleLabel=e.createLabel({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y-20,text:"翻轉時機 - 掌握烤製節奏",fontSize:18,color:"#8B4513",align:"center"}),this.instructionLabel=e.createLabel({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y+10,text:"在最佳時機翻轉鴨子，確保四面均勻烤製",fontSize:14,color:"#654321",align:"center"}),this.timeLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+100,text:`烤製時間: ${Math.floor(this.gameState.roastingTime)}秒`,fontSize:16,color:"#DC143C",align:"left"}),this.rotationLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+130,text:`翻轉次數: ${this.gameState.currentRotation}/${this.gameState.totalRotations}`,fontSize:16,color:"#4682B4",align:"left"}),this.stageLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+160,text:this.getCurrentStageText(),fontSize:14,color:"#2F4F4F",align:"left"}),this.timingScoreLabel=e.createLabel({x:this.gameArea.x+50,y:this.gameArea.y+190,text:`時機掌握: ${Math.round(this.gameState.timingScore)}%`,fontSize:16,color:"#32CD32",align:"left"}),this.uiElements.push(this.titleLabel,this.instructionLabel,this.timeLabel,this.rotationLabel,this.stageLabel,this.timingScoreLabel)}getCurrentStageText(){if(this.gameState.currentRotation>=this.gameState.totalRotations)return"烤製完成";const e=this.rotationTimings[this.gameState.currentRotation];return e?`下次翻轉: ${e.name}`:"等待中"}update(e){this.isActive&&(this.updateGameState(e),this.updateDuckState(e),this.updateRotationLogic(e),this.updateEffects(e),this.updateUI(),this.checkCompletion())}updateGameState(e){this.gameState.phase!=="completed"&&(this.gameState.roastingTime+=e),this.updateRotationAvailability(),this.updateTimingScore()}updateRotationAvailability(){if(this.gameState.currentRotation>=this.gameState.totalRotations){this.rotateButton.canRotate=!1;return}const e=this.rotationTimings[this.gameState.currentRotation];if(!e){this.rotateButton.canRotate=!1;return}const t=Math.abs(this.gameState.roastingTime-e.optimalTime);this.rotateButton.canRotate=t<=e.tolerance*2,this.rotateButton.canRotate&&this.gameState.phase==="waiting"&&(this.gameState.phase="ready",this.createTimingAlert())}updateTimingScore(){let e=0,t=0;for(let i=0;i<this.gameState.currentRotation;i++){const s=this.rotationTimings[i];if(s&&s.actualTime!==void 0){const a=Math.abs(s.actualTime-s.optimalTime),n=Math.max(0,100-a/s.tolerance*20);e+=n,t++}}t>0&&(this.gameState.timingScore=e/t),this.gameState.accuracy=this.gameState.timingScore}updateDuckState(e){const t=this.duckDisplay;if(this.gameState.isRotating)if(this.gameState.rotationProgress+=e*2,this.gameState.rotationProgress>=1)this.gameState.isRotating=!1,this.gameState.rotationProgress=0,t.rotation=t.targetRotation,t.currentSide=(t.currentSide+1)%4,console.log(`翻轉完成，當前面: ${t.currentSide}`);else{const i=t.targetRotation-90;t.rotation=i+this.gameState.rotationProgress*90}this.updateHeatDistribution(e),this.updateSkinColor(e)}updateHeatDistribution(e){const t=this.duckDisplay,i=10*e;t.heatLevel[t.currentSide]=Math.min(100,t.heatLevel[t.currentSide]+i*2);for(let s=0;s<4;s++)s!==t.currentSide&&(t.heatLevel[s]=Math.min(100,t.heatLevel[s]+i*.3))}updateSkinColor(e){const t=this.duckDisplay;for(let i=0;i<4;i++)if(t.heatLevel[i]>30){const s=(t.heatLevel[i]-30)/70;t.skinColor[i]=Math.min(100,t.skinColor[i]+s*15*e)}}updateRotationLogic(e){if(this.gameState.currentRotation<this.gameState.totalRotations){const t=this.rotationTimings[this.gameState.currentRotation];t&&this.gameState.roastingTime-t.optimalTime>t.tolerance*3&&(console.log(`錯過翻轉時機: ${t.name}`),t.actualTime=this.gameState.roastingTime,t.missed=!0,this.gameState.currentRotation++,this.gameState.phase="waiting")}}performRotation(){if(!this.rotateButton.canRotate||this.gameState.isRotating)return;const e=this.rotationTimings[this.gameState.currentRotation];e&&(console.log(`執行翻轉: ${e.name}`),e.actualTime=this.gameState.roastingTime,this.gameState.isRotating=!0,this.gameState.rotationProgress=0,this.duckDisplay.targetRotation+=90,this.gameState.currentRotation++,this.gameState.lastRotationTime=this.gameState.roastingTime,this.gameState.phase="rotating",this.createRotationEffect(),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("rotation_sound"))}createTimingAlert(){this.effects.timingAlerts.push({x:this.gameArea.x+this.gameArea.width/2,y:this.gameArea.y+50,life:2,opacity:1,scale:1})}createRotationEffect(){const e=this.duckDisplay;for(let t=0;t<8;t++){const i=t/8*Math.PI*2;this.effects.rotationLines.push({x:e.x+e.width/2,y:e.y+e.height/2,angle:i,length:30,life:1,opacity:.8})}}updateEffects(e){this.effects.rotationLines=this.effects.rotationLines.filter(t=>(t.life-=e*2,t.opacity=t.life,t.length+=e*20,t.life>0)),this.effects.timingAlerts=this.effects.timingAlerts.filter(t=>(t.life-=e,t.opacity=t.life/2,t.scale=1+(2-t.life)*.2,t.life>0)),Math.random()<.3&&this.createHeatIndicator(),this.effects.heatIndicators=this.effects.heatIndicators.filter(t=>(t.y-=t.vy*e,t.life-=e,t.opacity=t.life/1.5,t.life>0))}createHeatIndicator(){const e=this.duckDisplay,t=e.heatLevel[e.currentSide];t>50&&this.effects.heatIndicators.push({x:e.x+Math.random()*e.width,y:e.y+e.height,vy:20+Math.random()*10,life:1.5,opacity:.7,size:2+Math.random()*3,color:t>80?"#FF4500":"#FFD700"})}checkCompletion(){this.gameState.phase!=="completed"&&(this.gameState.currentRotation>=this.gameState.totalRotations&&(this.gameState.isRotating||this.completeGame(!0)),this.gameState.roastingTime>70&&this.completeGame(!1))}completeGame(e){if(this.gameState.phase==="completed")return;this.gameState.phase="completed";const t=this.calculateUniformity(),s={score:Math.round((this.gameState.timingScore+t)/2),rotationTiming:Math.round(this.gameState.timingScore),uniformity:Math.round(t),rotationsCompleted:this.gameState.currentRotation,totalTime:this.gameState.roastingTime};console.log("翻轉時機遊戲完成:",e?"成功":"失敗",s),setTimeout(()=>{this.complete(e,s)},2e3)}calculateUniformity(){const e=this.duckDisplay,t=e.heatLevel.reduce((a,n)=>a+n,0)/4;let i=0;return e.heatLevel.forEach(a=>{i+=Math.pow(a-t,2)}),i/=4,Math.max(0,100-i)}updateUI(){this.timeLabel&&this.timeLabel.setText(`烤製時間: ${Math.floor(this.gameState.roastingTime)}秒`),this.rotationLabel&&this.rotationLabel.setText(`翻轉次數: ${this.gameState.currentRotation}/${this.gameState.totalRotations}`),this.stageLabel&&this.stageLabel.setText(this.getCurrentStageText()),this.timingScoreLabel&&this.timingScoreLabel.setText(`時機掌握: ${Math.round(this.gameState.timingScore)}%`)}handleInput(e){if(!this.isActive||this.gameState.phase==="completed")return!1;const t=this.gameEngine.canvas.getBoundingClientRect(),i=e.clientX-t.left,s=e.clientY-t.top;if(e.type==="mousedown"||e.type==="touchstart"){if(this.isPointInRect(i,s,this.rotateButton))return this.rotateButton.canRotate&&(this.rotateButton.isPressed=!0,this.performRotation()),!0}else if(e.type==="mouseup"||e.type==="touchend")return this.rotateButton.isPressed=!1,!0;return!1}isPointInRect(e,t,i){return e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height}render(e){this.isActive&&(this.renderGameArea(e),this.renderTimingIndicator(e),this.renderDuck(e),this.renderControls(e),this.renderEffects(e),this.gameState.phase==="completed"&&this.renderCompletionMessage(e))}renderGameArea(e){e.fillStyle="rgba(222, 184, 135, 0.1)",e.fillRect(this.gameArea.x,this.gameArea.y,this.gameArea.width,this.gameArea.height),e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(this.gameArea.x,this.gameArea.y,this.gameArea.width,this.gameArea.height)}renderTimingIndicator(e){const t=this.timingIndicator,i=60;e.fillStyle="#F5F5DC",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height),t.zones.forEach((a,n)=>{const r=n<this.gameState.currentRotation,h=n===this.gameState.currentRotation;let o="#90EE90";if(r){const c=a.timing;c.missed?o="#FF6B6B":o=Math.abs(c.actualTime-c.optimalTime)<=c.tolerance?"#32CD32":"#FFD700"}else h&&this.rotateButton.canRotate&&(o="#00FF00");e.fillStyle=o,e.fillRect(a.x,t.y+5,a.width,t.height-10),e.strokeStyle="#000000",e.lineWidth=2,e.beginPath(),e.moveTo(a.centerX,t.y),e.lineTo(a.centerX,t.y+t.height),e.stroke()});const s=t.x+this.gameState.roastingTime/i*t.width;e.strokeStyle="#FF0000",e.lineWidth=3,e.beginPath(),e.moveTo(s,t.y-5),e.lineTo(s,t.y+t.height+5),e.stroke(),e.fillStyle="#000000",e.font="10px Arial",e.textAlign="center";for(let a=0;a<=6;a++){const n=a*10,r=t.x+n/i*t.width;e.fillText(`${n}s`,r,t.y+t.height+15)}}renderDuck(e){const t=this.duckDisplay;e.save(),e.translate(t.x+t.width/2,t.y+t.height/2),e.rotate(t.rotation*Math.PI/180);const s=t.skinColor[t.currentSide]/100,a=Math.floor(139+116*s),n=Math.floor(69+146*s),r=Math.floor(19+-19*s);e.fillStyle=`rgb(${a}, ${n}, ${r})`,e.fillRect(-t.width/2,-t.height/2,t.width,t.height),e.strokeStyle="#654321",e.lineWidth=2,e.strokeRect(-t.width/2,-t.height/2,t.width,t.height);const h=t.heatLevel[t.currentSide];h>30&&(e.fillStyle=`rgba(255, 69, 0, ${(h-30)/70*.5})`,e.fillRect(-t.width/2+5,-t.height/2+5,t.width-10,t.height-10)),e.restore(),this.renderHeatStatus(e,t)}renderHeatStatus(e,t){const i=t.x+t.width+20,s=t.y,a=15;e.font="12px Arial",e.textAlign="left",e.fillStyle="#000000",e.fillText("受熱狀態:",i,s-5);const n=["上","右","下","左"];for(let r=0;r<4;r++){const h=s+r*20,o=t.heatLevel[r]/100,c=t.skinColor[r]/100;e.fillStyle="#CCCCCC",e.fillRect(i,h,50,a),e.fillStyle=`rgb(${Math.floor(255*o)}, ${Math.floor(100+155*c)}, 0)`,e.fillRect(i,h,50*o,a),e.strokeStyle=r===t.currentSide?"#FF0000":"#000000",e.lineWidth=r===t.currentSide?2:1,e.strokeRect(i,h,50,a),e.fillStyle="#000000",e.fillText(n[r],i+55,h+12)}}renderControls(e){const t=this.rotateButton;let i="#CCCCCC";t.canRotate&&(i=t.isPressed?"#FF8C00":"#FFA500"),e.fillStyle=i,e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#000000",e.lineWidth=2,e.strokeRect(t.x,t.y,t.width,t.height),e.fillStyle=t.canRotate?"#000000":"#666666",e.font="16px Arial",e.textAlign="center",e.fillText("翻轉",t.x+t.width/2,t.y+t.height/2+6),t.canRotate&&(e.fillStyle="#32CD32",e.font="12px Arial",e.fillText("最佳時機！",t.x+t.width/2,t.y-10))}renderEffects(e){this.effects.rotationLines.forEach(t=>{e.strokeStyle=`rgba(255, 215, 0, ${t.opacity})`,e.lineWidth=2,e.beginPath(),e.moveTo(t.x,t.y),e.lineTo(t.x+Math.cos(t.angle)*t.length,t.y+Math.sin(t.angle)*t.length),e.stroke()}),this.effects.timingAlerts.forEach(t=>{e.save(),e.translate(t.x,t.y),e.scale(t.scale,t.scale),e.fillStyle=`rgba(0, 255, 0, ${t.opacity})`,e.font="20px Arial",e.textAlign="center",e.fillText("翻轉時機！",0,0),e.restore()}),this.effects.heatIndicators.forEach(t=>{e.fillStyle=`rgba(255, 165, 0, ${t.opacity})`,e.beginPath(),e.arc(t.x,t.y,t.size,0,Math.PI*2),e.fill()})}renderCompletionMessage(e){const t=this.gameArea.x+this.gameArea.width/2,i=this.gameArea.y+this.gameArea.height/2;e.fillStyle="rgba(0, 0, 0, 0.7)",e.fillRect(this.gameArea.x,this.gameArea.y,this.gameArea.width,this.gameArea.height);const s=this.gameState.accuracy>=70;e.fillStyle=s?"#32CD32":"#FF6B6B",e.font="24px Arial",e.textAlign="center",e.fillText(s?"翻轉完成！":"需要重試",t,i-40),e.font="16px Arial",e.fillStyle="#FFFFFF",e.fillText(`翻轉次數: ${this.gameState.currentRotation}/${this.gameState.totalRotations}`,t,i-10),e.fillText(`時機掌握: ${Math.round(this.gameState.timingScore)}%`,t,i+20);const a=this.calculateUniformity();e.fillText(`烤製均勻度: ${Math.round(a)}%`,t,i+50)}cleanup(){super.cleanup(),this.uiElements.forEach(e=>{this.gameEngine.uiManager&&this.gameEngine.uiManager.removeUIElement(e)}),this.uiElements=[],console.log("翻轉時機遊戲清理完成")}};window.RotationTimingGame=RotationTimingGame$1;let SkinSlicingGame$1=class extends MiniGame{constructor(e){super(e),this.name="片皮遊戲",this.gameAreaX=e.gameAreaX,this.gameAreaY=e.gameAreaY,this.gameAreaWidth=e.gameAreaWidth,this.gameAreaHeight=e.gameAreaHeight,this.slicingSystem=e.slicingSystem,this.workStation=e.workStation,this.gameState={phase:"instruction",targetSlices:24,currentSlices:0,timeLimit:120,timeRemaining:120,score:0,accuracy:100,speed:0},this.sliceTargets=[],this.generateSliceTargets(),this.knifeControl={x:this.workStation.knifeX,y:this.workStation.knifeY,angle:20,pressure:30,isSlicing:!1,sliceStartX:0,sliceStartY:0,sliceEndX:0,sliceEndY:0,trailPoints:[]},this.visualFeedback={showAngleGuide:!0,showPressureIndicator:!0,showAccuracyFeedback:!0,currentFeedback:null,feedbackTimer:0},this.inputHandler={mouseDown:!1,mouseX:0,mouseY:0,lastMouseX:0,lastMouseY:0,dragStartX:0,dragStartY:0},this.sounds={sliceSound:"slice_cut",successSound:"slice_success",failSound:"slice_fail"}}generateSliceTargets(){this.sliceTargets=[];const e=this.workStation.duckX,t=this.workStation.duckY,i=this.workStation.duckWidth,s=this.workStation.duckHeight,a=6,n=4;for(let r=0;r<a;r++)for(let h=0;h<n;h++){const o=e-i/2+(h+.5)*(i/n),c=t-s/2+(r+.5)*(s/a);this.sliceTargets.push({id:r*n+h,x:o,y:c,width:i/n*.8,height:s/a*.8,sliced:!1,quality:0,angle:0,pressure:0})}}start(){super.start(),this.setupGameUI(),this.setupInputHandlers(),console.log("片皮遊戲開始")}setupGameUI(){const e=this.gameEngine.uiManager;this.gameTitle=e.createLabel({x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY-20,text:"片皮技法 - 精確控制刀具角度和力度",fontSize:18,color:"#DC143C",align:"center"}),this.progressLabel=e.createLabel({x:this.gameAreaX+20,y:this.gameAreaY+20,text:this.getProgressText(),fontSize:14,color:"#8B4513",align:"left"}),this.timeLabel=e.createLabel({x:this.gameAreaX+this.gameAreaWidth-20,y:this.gameAreaY+20,text:this.getTimeText(),fontSize:14,color:"#FF4500",align:"right"}),this.angleSlider=this.createAngleSlider(),this.pressureSlider=this.createPressureSlider(),this.instructionLabel=e.createLabel({x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY+this.gameAreaHeight-60,text:"拖拽滑桿調整角度和壓力，然後在鴨皮上劃線切片",fontSize:14,color:"#4682B4",align:"center"}),this.addUIElement(this.gameTitle),this.addUIElement(this.progressLabel),this.addUIElement(this.timeLabel),this.addUIElement(this.instructionLabel)}createAngleSlider(){const e=this.gameAreaX+20,t=this.gameAreaY+60;return{x:e,y:t,width:150,height:20,minValue:10,maxValue:45,currentValue:20,isDragging:!1,label:"切片角度"}}createPressureSlider(){const e=this.gameAreaX+20,t=this.gameAreaY+100;return{x:e,y:t,width:150,height:20,minValue:10,maxValue:60,currentValue:30,isDragging:!1,label:"施力大小"}}setupInputHandlers(){const e=this.gameEngine.canvas;this.mouseDownHandler=t=>{const i=e.getBoundingClientRect(),s=t.clientX-i.left,a=t.clientY-i.top;this.inputHandler.mouseDown=!0,this.inputHandler.mouseX=s,this.inputHandler.mouseY=a,this.inputHandler.lastMouseX=s,this.inputHandler.lastMouseY=a,this.inputHandler.dragStartX=s,this.inputHandler.dragStartY=a,this.checkSliderClick(s,a),this.checkSliceStart(s,a)},this.mouseMoveHandler=t=>{const i=e.getBoundingClientRect(),s=t.clientX-i.left,a=t.clientY-i.top;this.inputHandler.lastMouseX=this.inputHandler.mouseX,this.inputHandler.lastMouseY=this.inputHandler.mouseY,this.inputHandler.mouseX=s,this.inputHandler.mouseY=a,this.inputHandler.mouseDown&&(this.updateSliders(s,a),this.updateSliceTrail(s,a))},this.mouseUpHandler=t=>{this.inputHandler.mouseDown=!1,this.angleSlider.isDragging=!1,this.pressureSlider.isDragging=!1,this.completeSlice()},e.addEventListener("mousedown",this.mouseDownHandler),e.addEventListener("mousemove",this.mouseMoveHandler),e.addEventListener("mouseup",this.mouseUpHandler)}checkSliderClick(e,t){this.isPointInSlider(e,t,this.angleSlider)&&(this.angleSlider.isDragging=!0),this.isPointInSlider(e,t,this.pressureSlider)&&(this.pressureSlider.isDragging=!0)}isPointInSlider(e,t,i){return e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height}checkSliceStart(e,t){const i={x:this.workStation.duckX-this.workStation.duckWidth/2,y:this.workStation.duckY-this.workStation.duckHeight/2,width:this.workStation.duckWidth,height:this.workStation.duckHeight};e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height&&(this.knifeControl.isSlicing=!0,this.knifeControl.sliceStartX=e,this.knifeControl.sliceStartY=t,this.knifeControl.trailPoints=[{x:e,y:t}])}updateSliders(e,t){if(this.angleSlider.isDragging){const i=Math.max(0,Math.min(1,(e-this.angleSlider.x)/this.angleSlider.width));this.angleSlider.currentValue=this.angleSlider.minValue+i*(this.angleSlider.maxValue-this.angleSlider.minValue),this.knifeControl.angle=this.angleSlider.currentValue}if(this.pressureSlider.isDragging){const i=Math.max(0,Math.min(1,(e-this.pressureSlider.x)/this.pressureSlider.width));this.pressureSlider.currentValue=this.pressureSlider.minValue+i*(this.pressureSlider.maxValue-this.pressureSlider.minValue),this.knifeControl.pressure=this.pressureSlider.currentValue}}updateSliceTrail(e,t){this.knifeControl.isSlicing&&(this.knifeControl.trailPoints.push({x:e,y:t}),this.knifeControl.sliceEndX=e,this.knifeControl.sliceEndY=t)}completeSlice(){if(!this.knifeControl.isSlicing)return;this.knifeControl.isSlicing=!1;const e=this.calculateSliceQuality(),t=this.checkTargetHits();t.length>0?this.processSuccessfulSlice(t,e):this.processFailedSlice(),this.knifeControl.trailPoints=[],this.checkGameCompletion()}calculateSliceQuality(){const e=this.knifeControl.angle,t=this.knifeControl.pressure,i=this.calculateTrailLength();let s=0;const n=Math.abs(e-20),r=Math.max(0,100-n*4);s+=r*.4;const o=Math.abs(t-30),c=Math.max(0,100-o*3);s+=c*.3;const u=Math.abs(i-60),d=Math.max(0,100-u*2);s+=d*.2;const m=this.calculateTrailSmoothness();return s+=m*.1,Math.round(s)}calculateTrailLength(){let e=0;const t=this.knifeControl.trailPoints;for(let i=1;i<t.length;i++){const s=t[i].x-t[i-1].x,a=t[i].y-t[i-1].y;e+=Math.sqrt(s*s+a*a)}return e}calculateTrailSmoothness(){const e=this.knifeControl.trailPoints;if(e.length<3)return 100;let t=0,i=0;for(let a=2;a<e.length;a++){const n=e[a-1].x-e[a-2].x,r=e[a-1].y-e[a-2].y,h=e[a].x-e[a-1].x,o=e[a].y-e[a-1].y,c=Math.atan2(r,n),g=Math.atan2(o,h);let u=Math.abs(g-c);u>Math.PI&&(u=2*Math.PI-u),t+=u,i++}const s=i>0?t/i:0;return Math.max(0,100-s*180/Math.PI*10)}checkTargetHits(){const e=[],t=this.knifeControl.trailPoints;return this.sliceTargets.forEach(i=>{if(!i.sliced){for(let s of t)if(s.x>=i.x-i.width/2&&s.x<=i.x+i.width/2&&s.y>=i.y-i.height/2&&s.y<=i.y+i.height/2){e.push(i);break}}}),e}processSuccessfulSlice(e,t){e.forEach(i=>{i.sliced=!0,i.quality=t,i.angle=this.knifeControl.angle,i.pressure=this.knifeControl.pressure,this.gameState.currentSlices++,this.gameState.score+=Math.round(t*10)}),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound(this.sounds.successSound),this.showQualityFeedback(t),console.log(`成功切片 ${e.length} 片，品質: ${t}`)}processFailedSlice(){this.gameState.score=Math.max(0,this.gameState.score-50),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound(this.sounds.failSound),this.showFailureFeedback(),console.log("切片失敗")}showQualityFeedback(e){let t="",i="";e>=90?(t="完美！刀工精湛！",i="#32CD32"):e>=75?(t="很好！技法熟練！",i="#FFD700"):e>=60?(t="不錯！繼續練習！",i="#FFA500"):(t="需要改進角度和力度",i="#FF6347"),this.visualFeedback.currentFeedback={text:t,color:i,x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY+this.gameAreaHeight/2},this.visualFeedback.feedbackTimer=2}showFailureFeedback(){this.visualFeedback.currentFeedback={text:"未命中目標區域！",color:"#FF4500",x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY+this.gameAreaHeight/2},this.visualFeedback.feedbackTimer=1.5}checkGameCompletion(){this.gameState.currentSlices>=this.gameState.targetSlices?this.completeGame(!0):this.gameState.timeRemaining<=0&&this.completeGame(!1)}completeGame(e){this.gameState.phase="complete";const t={success:e,score:this.gameState.score,sliceCount:this.gameState.currentSlices,accuracy:this.calculateAccuracy(),quality:this.calculateAverageQuality(),uniformity:this.calculateUniformity(),slicedWeight:this.gameState.currentSlices*8,wasteAmount:Math.max(0,(this.gameState.targetSlices-this.gameState.currentSlices)*2)};console.log("片皮遊戲完成:",t),this.cleanup(),setTimeout(()=>{this.scene.onMiniGameComplete(e,t)},1e3)}calculateAccuracy(){return Math.round(this.gameState.currentSlices/this.gameState.targetSlices*100)}calculateAverageQuality(){const e=this.sliceTargets.filter(i=>i.sliced);if(e.length===0)return 0;const t=e.reduce((i,s)=>i+s.quality,0);return Math.round(t/e.length)}calculateUniformity(){const e=this.sliceTargets.filter(n=>n.sliced);if(e.length<2)return 100;const t=e.map(n=>n.quality),i=t.reduce((n,r)=>n+r,0)/t.length,s=t.reduce((n,r)=>n+Math.pow(r-i,2),0)/t.length,a=Math.sqrt(s);return Math.max(0,Math.round(100-a))}getProgressText(){return`進度: ${this.gameState.currentSlices}/${this.gameState.targetSlices} 片 | 分數: ${this.gameState.score}`}getTimeText(){const e=Math.floor(this.gameState.timeRemaining/60),t=Math.floor(this.gameState.timeRemaining%60);return`時間: ${e}:${t.toString().padStart(2,"0")}`}update(e){super.update(e),this.gameState.phase==="slicing"&&(this.gameState.timeRemaining=Math.max(0,this.gameState.timeRemaining-e)),this.visualFeedback.feedbackTimer>0&&(this.visualFeedback.feedbackTimer-=e),this.updateUIDisplays(),this.gameState.phase==="slicing"&&this.checkGameCompletion()}updateUIDisplays(){this.progressLabel&&this.progressLabel.setText(this.getProgressText()),this.timeLabel&&this.timeLabel.setText(this.getTimeText())}render(e){super.render(e),this.renderGameArea(e),this.renderDuckAndTargets(e),this.renderControlPanel(e),this.renderKnifeTrail(e),this.renderVisualFeedback(e)}renderGameArea(e){e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(this.gameAreaX,this.gameAreaY,this.gameAreaWidth,this.gameAreaHeight)}renderDuckAndTargets(e){e.fillStyle="#DAA520";const t=this.workStation.duckX-this.workStation.duckWidth/2,i=this.workStation.duckY-this.workStation.duckHeight/2;e.fillRect(t,i,this.workStation.duckWidth,this.workStation.duckHeight),this.sliceTargets.forEach(s=>{s.sliced?(e.fillStyle="rgba(50, 205, 50, 0.3)",e.fillRect(s.x-s.width/2,s.y-s.height/2,s.width,s.height),e.fillStyle="#FFFFFF",e.font="10px Arial",e.textAlign="center",e.fillText(s.quality.toString(),s.x,s.y+3)):(e.strokeStyle="rgba(255, 255, 255, 0.5)",e.lineWidth=1,e.strokeRect(s.x-s.width/2,s.y-s.height/2,s.width,s.height))})}renderControlPanel(e){this.renderSlider(e,this.angleSlider),this.renderSlider(e,this.pressureSlider)}renderSlider(e,t){e.fillStyle="#D3D3D3",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle="#808080",e.lineWidth=1,e.strokeRect(t.x,t.y,t.width,t.height);const i=(t.currentValue-t.minValue)/(t.maxValue-t.minValue),s=t.x+i*t.width;e.fillStyle="#4682B4",e.fillRect(s-3,t.y-2,6,t.height+4),e.fillStyle="#000000",e.font="12px Arial",e.textAlign="left",e.fillText(`${t.label}: ${Math.round(t.currentValue)}`,t.x,t.y-5)}renderKnifeTrail(e){if(!(this.knifeControl.trailPoints.length<2)){e.strokeStyle="#C0C0C0",e.lineWidth=3,e.lineCap="round",e.lineJoin="round",e.beginPath(),e.moveTo(this.knifeControl.trailPoints[0].x,this.knifeControl.trailPoints[0].y);for(let t=1;t<this.knifeControl.trailPoints.length;t++)e.lineTo(this.knifeControl.trailPoints[t].x,this.knifeControl.trailPoints[t].y);e.stroke()}}renderVisualFeedback(e){if(this.visualFeedback.feedbackTimer>0&&this.visualFeedback.currentFeedback){const t=this.visualFeedback.currentFeedback;e.save(),e.globalAlpha=Math.min(1,this.visualFeedback.feedbackTimer),e.fillStyle=t.color,e.font="18px Arial",e.textAlign="center",e.fillText(t.text,t.x,t.y),e.restore()}}cleanup(){const e=this.gameEngine.canvas;this.mouseDownHandler&&e.removeEventListener("mousedown",this.mouseDownHandler),this.mouseMoveHandler&&e.removeEventListener("mousemove",this.mouseMoveHandler),this.mouseUpHandler&&e.removeEventListener("mouseup",this.mouseUpHandler),super.cleanup()}};window.SkinSlicingGame=SkinSlicingGame$1;let MeatSlicingGame$1=class extends MiniGame{constructor(e){super(e),this.name="片肉遊戲",this.gameAreaX=e.gameAreaX,this.gameAreaY=e.gameAreaY,this.gameAreaWidth=e.gameAreaWidth,this.gameAreaHeight=e.gameAreaHeight,this.slicingSystem=e.slicingSystem,this.workStation=e.workStation,this.gameState={phase:"instruction",targetSlices:36,currentSlices:0,timeLimit:150,timeRemaining:150,score:0,accuracy:100,speed:0},this.meatSections=[],this.generateMeatSections(),this.knifeControl={x:this.workStation.knifeX,y:this.workStation.knifeY,angle:90,pressure:50,speed:40,isSlicing:!1,sliceStartX:0,sliceStartY:0,sliceEndX:0,sliceEndY:0,trailPoints:[]},this.meatAnalysis={texture:85,tenderness:80,juiciness:75,temperature:60,fiberDirection:[]},this.slicingStandards={optimalThickness:4,minThickness:2,maxThickness:6,optimalLength:50,optimalWidth:30,againstGrain:!0},this.visualFeedback={showFiberDirection:!0,showThicknessGuide:!0,showQualityIndicator:!0,currentFeedback:null,feedbackTimer:0,slicePreview:null},this.inputHandler={mouseDown:!1,mouseX:0,mouseY:0,lastMouseX:0,lastMouseY:0,dragStartX:0,dragStartY:0,sliceDirection:{x:0,y:0}},this.sounds={sliceSound:"meat_slice",successSound:"slice_success",failSound:"slice_fail",perfectSound:"perfect_slice"}}generateMeatSections(){this.meatSections=[];const e=this.workStation.duckX,t=this.workStation.duckY,i=this.workStation.duckWidth,s=this.workStation.duckHeight;this.meatSections.push({id:"breast_left",name:"左胸肉",x:e-i*.25,y:t-s*.1,width:i*.3,height:s*.4,fiberDirection:Math.PI/6,slices:[],completed:!1,targetSlices:12}),this.meatSections.push({id:"breast_right",name:"右胸肉",x:e+i*.25,y:t-s*.1,width:i*.3,height:s*.4,fiberDirection:-Math.PI/6,slices:[],completed:!1,targetSlices:12}),this.meatSections.push({id:"leg_left",name:"左腿肉",x:e-i*.3,y:t+s*.2,width:i*.25,height:s*.3,fiberDirection:Math.PI/4,slices:[],completed:!1,targetSlices:6}),this.meatSections.push({id:"leg_right",name:"右腿肉",x:e+i*.3,y:t+s*.2,width:i*.25,height:s*.3,fiberDirection:-Math.PI/4,slices:[],completed:!1,targetSlices:6}),this.generateFiberDirections()}generateFiberDirections(){this.meatAnalysis.fiberDirection=[],this.meatSections.forEach(e=>{const t=[];for(let s=0;s<8;s++){const a=(s-4)*(e.width/8);t.push({startX:e.x+a,startY:e.y-e.height/2,endX:e.x+a+Math.cos(e.fiberDirection)*e.height,endY:e.y+e.height/2,direction:e.fiberDirection})}this.meatAnalysis.fiberDirection.push({sectionId:e.id,fibers:t})})}start(){super.start(),this.setupGameUI(),this.setupInputHandlers(),console.log("片肉遊戲開始")}setupGameUI(){const e=this.gameEngine.uiManager;this.gameTitle=e.createLabel({x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY-20,text:"片肉技巧 - 逆紋切片，厚度均勻",fontSize:18,color:"#DC143C",align:"center"}),this.progressLabel=e.createLabel({x:this.gameAreaX+20,y:this.gameAreaY+20,text:this.getProgressText(),fontSize:14,color:"#8B4513",align:"left"}),this.timeLabel=e.createLabel({x:this.gameAreaX+this.gameAreaWidth-20,y:this.gameAreaY+20,text:this.getTimeText(),fontSize:14,color:"#FF4500",align:"right"}),this.techniqueLabel=e.createLabel({x:this.gameAreaX+20,y:this.gameAreaY+50,text:"技巧：垂直切入，逆著纖維方向切片",fontSize:12,color:"#4682B4",align:"left"}),this.qualityLabel=e.createLabel({x:this.gameAreaX+this.gameAreaWidth-20,y:this.gameAreaY+50,text:this.getQualityText(),fontSize:12,color:"#228B22",align:"right"}),this.instructionLabel=e.createLabel({x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY+this.gameAreaHeight-40,text:"在肉塊上拖拽切片，注意纖維方向和厚度控制",fontSize:14,color:"#4682B4",align:"center"}),this.addUIElement(this.gameTitle),this.addUIElement(this.progressLabel),this.addUIElement(this.timeLabel),this.addUIElement(this.techniqueLabel),this.addUIElement(this.qualityLabel),this.addUIElement(this.instructionLabel)}setupInputHandlers(){const e=this.gameEngine.canvas;this.mouseDownHandler=t=>{const i=e.getBoundingClientRect(),s=t.clientX-i.left,a=t.clientY-i.top;this.inputHandler.mouseDown=!0,this.inputHandler.mouseX=s,this.inputHandler.mouseY=a,this.inputHandler.lastMouseX=s,this.inputHandler.lastMouseY=a,this.inputHandler.dragStartX=s,this.inputHandler.dragStartY=a,this.checkSliceStart(s,a)},this.mouseMoveHandler=t=>{const i=e.getBoundingClientRect(),s=t.clientX-i.left,a=t.clientY-i.top;this.inputHandler.lastMouseX=this.inputHandler.mouseX,this.inputHandler.lastMouseY=this.inputHandler.mouseY,this.inputHandler.mouseX=s,this.inputHandler.mouseY=a,this.inputHandler.mouseDown&&(this.updateSliceTrail(s,a),this.updateSliceDirection(),this.updateSlicePreview())},this.mouseUpHandler=t=>{this.inputHandler.mouseDown=!1,this.completeSlice()},e.addEventListener("mousedown",this.mouseDownHandler),e.addEventListener("mousemove",this.mouseMoveHandler),e.addEventListener("mouseup",this.mouseUpHandler)}checkSliceStart(e,t){for(let i of this.meatSections)if(!i.completed&&e>=i.x-i.width/2&&e<=i.x+i.width/2&&t>=i.y-i.height/2&&t<=i.y+i.height/2){this.knifeControl.isSlicing=!0,this.knifeControl.sliceStartX=e,this.knifeControl.sliceStartY=t,this.knifeControl.trailPoints=[{x:e,y:t}],this.currentSection=i;break}}updateSliceTrail(e,t){this.knifeControl.isSlicing&&(this.knifeControl.trailPoints.push({x:e,y:t}),this.knifeControl.sliceEndX=e,this.knifeControl.sliceEndY=t)}updateSliceDirection(){if(this.knifeControl.trailPoints.length>=2){const e=this.knifeControl.trailPoints[0],t=this.knifeControl.trailPoints[this.knifeControl.trailPoints.length-1],i=t.x-e.x,s=t.y-e.y,a=Math.sqrt(i*i+s*s);a>0&&(this.inputHandler.sliceDirection={x:i/a,y:s/a,angle:Math.atan2(s,i)})}}updateSlicePreview(){if(!this.knifeControl.isSlicing||!this.currentSection)return;const e=this.calculateSliceThickness(),t=this.calculateSliceQuality();this.visualFeedback.slicePreview={section:this.currentSection,thickness:e,quality:t,direction:this.inputHandler.sliceDirection}}completeSlice(){if(!this.knifeControl.isSlicing||!this.currentSection)return;this.knifeControl.isSlicing=!1;const e=this.calculateSliceQuality(),t=this.calculateSliceThickness();this.isValidSlice()?this.processSuccessfulSlice(e,t):this.processFailedSlice(),this.knifeControl.trailPoints=[],this.visualFeedback.slicePreview=null,this.currentSection=null,this.checkGameCompletion()}calculateSliceThickness(){if(!this.inputHandler.sliceDirection)return 0;const e=this.calculateSliceSpeed(),t=this.knifeControl.pressure;let i=this.slicingStandards.optimalThickness;return e>60&&(i+=(e-60)*.05),(t<40||t>60)&&(i+=Math.abs(t-50)*.02),Math.max(this.slicingStandards.minThickness,Math.min(this.slicingStandards.maxThickness,i))}calculateSliceSpeed(){if(this.knifeControl.trailPoints.length<2)return 0;const e=this.calculateTrailLength(),t=this.knifeControl.trailPoints.length*.016;return t>0?e/t:0}calculateTrailLength(){let e=0;const t=this.knifeControl.trailPoints;for(let i=1;i<t.length;i++){const s=t[i].x-t[i-1].x,a=t[i].y-t[i-1].y;e+=Math.sqrt(s*s+a*a)}return e}calculateSliceQuality(){if(!this.currentSection||!this.inputHandler.sliceDirection)return 0;let e=0;const t=this.currentSection.fiberDirection,i=this.inputHandler.sliceDirection.angle;let s=Math.abs(i-(t+Math.PI/2));s>Math.PI&&(s=2*Math.PI-s),s>Math.PI/2&&(s=Math.PI-s);const a=Math.max(0,100-s/(Math.PI/4)*50);e+=a*.4;const n=this.calculateSliceThickness(),r=Math.abs(n-this.slicingStandards.optimalThickness),h=Math.max(0,100-r*25);e+=h*.3;const o=this.calculateTrailLength(),c=Math.abs(o-this.slicingStandards.optimalLength),g=Math.max(0,100-c*2);e+=g*.2;const u=this.calculateTrailSmoothness();return e+=u*.1,Math.round(e)}calculateTrailSmoothness(){const e=this.knifeControl.trailPoints;if(e.length<3)return 100;let t=0,i=0;for(let a=2;a<e.length;a++){const n=e[a-1].x-e[a-2].x,r=e[a-1].y-e[a-2].y,h=e[a].x-e[a-1].x,o=e[a].y-e[a-1].y,c=Math.atan2(r,n),g=Math.atan2(o,h);let u=Math.abs(g-c);u>Math.PI&&(u=2*Math.PI-u),t+=u,i++}const s=i>0?t/i:0;return Math.max(0,100-s*180/Math.PI*15)}isValidSlice(){return!this.currentSection||this.knifeControl.trailPoints.length<3?!1:this.calculateTrailLength()>=20}processSuccessfulSlice(e,t){const i={id:this.currentSection.slices.length,quality:e,thickness:t,direction:{...this.inputHandler.sliceDirection},trail:[...this.knifeControl.trailPoints]};this.currentSection.slices.push(i),this.gameState.currentSlices++,this.gameState.score+=Math.round(e*15),this.currentSection.slices.length>=this.currentSection.targetSlices&&(this.currentSection.completed=!0),this.gameEngine.gameState.settings.soundEnabled&&(e>=95?this.gameEngine.audioManager.playSound(this.sounds.perfectSound):this.gameEngine.audioManager.playSound(this.sounds.successSound)),this.showQualityFeedback(e,t),console.log(`成功切片，品質: ${e}，厚度: ${t.toFixed(1)}mm`)}processFailedSlice(){this.gameState.score=Math.max(0,this.gameState.score-100),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound(this.sounds.failSound),this.showFailureFeedback(),console.log("切片失敗")}showQualityFeedback(e,t){let i="",s="";e>=95?(i=`完美！大師級刀工！
厚度: ${t.toFixed(1)}mm`,s="#32CD32"):e>=85?(i=`優秀！逆紋切片！
厚度: ${t.toFixed(1)}mm`,s="#FFD700"):e>=70?(i=`良好！繼續保持！
厚度: ${t.toFixed(1)}mm`,s="#FFA500"):e>=50?(i=`一般，注意纖維方向
厚度: ${t.toFixed(1)}mm`,s="#FF6347"):(i=`需要改進角度和厚度
厚度: ${t.toFixed(1)}mm`,s="#FF4500"),this.visualFeedback.currentFeedback={text:i,color:s,x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY+this.gameAreaHeight/2},this.visualFeedback.feedbackTimer=2.5}showFailureFeedback(){this.visualFeedback.currentFeedback={text:"切片太短或偏離目標！",color:"#FF4500",x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY+this.gameAreaHeight/2},this.visualFeedback.feedbackTimer=1.5}checkGameCompletion(){this.meatSections.every(t=>t.completed)||this.gameState.currentSlices>=this.gameState.targetSlices?this.completeGame(!0):this.gameState.timeRemaining<=0&&this.completeGame(!1)}completeGame(e){this.gameState.phase="complete";const t={success:e,score:this.gameState.score,sliceCount:this.gameState.currentSlices,accuracy:this.calculateAccuracy(),quality:this.calculateAverageQuality(),uniformity:this.calculateUniformity(),slicedWeight:this.gameState.currentSlices*22,wasteAmount:Math.max(0,(this.gameState.targetSlices-this.gameState.currentSlices)*5)};console.log("片肉遊戲完成:",t),this.cleanup(),setTimeout(()=>{this.scene.onMiniGameComplete(e,t)},1e3)}calculateAccuracy(){return Math.round(this.gameState.currentSlices/this.gameState.targetSlices*100)}calculateAverageQuality(){let e=0,t=0;return this.meatSections.forEach(i=>{i.slices.forEach(s=>{e+=s.quality,t++})}),t>0?Math.round(e/t):0}calculateUniformity(){let e=[];if(this.meatSections.forEach(a=>{a.slices.forEach(n=>{e.push(n.thickness)})}),e.length<2)return 100;const t=e.reduce((a,n)=>a+n,0)/e.length,i=e.reduce((a,n)=>a+Math.pow(n-t,2),0)/e.length,s=Math.sqrt(i);return Math.max(0,Math.round(100-s*20))}getProgressText(){return`進度: ${this.gameState.currentSlices}/${this.gameState.targetSlices} 片 | 分數: ${this.gameState.score}`}getTimeText(){const e=Math.floor(this.gameState.timeRemaining/60),t=Math.floor(this.gameState.timeRemaining%60);return`時間: ${e}:${t.toString().padStart(2,"0")}`}getQualityText(){return`平均品質: ${this.calculateAverageQuality()}%`}update(e){super.update(e),this.gameState.phase==="slicing"&&(this.gameState.timeRemaining=Math.max(0,this.gameState.timeRemaining-e)),this.updateMeatAnalysis(e),this.visualFeedback.feedbackTimer>0&&(this.visualFeedback.feedbackTimer-=e),this.updateUIDisplays(),this.gameState.phase==="slicing"&&this.checkGameCompletion()}updateMeatAnalysis(e){this.meatAnalysis.temperature>25&&(this.meatAnalysis.temperature=Math.max(25,this.meatAnalysis.temperature-1*e)),this.meatAnalysis.temperature<45&&(this.meatAnalysis.tenderness*=.999)}updateUIDisplays(){this.progressLabel&&this.progressLabel.setText(this.getProgressText()),this.timeLabel&&this.timeLabel.setText(this.getTimeText()),this.qualityLabel&&this.qualityLabel.setText(this.getQualityText())}render(e){super.render(e),this.renderGameArea(e),this.renderMeatSections(e),this.renderKnifeTrail(e),this.renderSlicePreview(e),this.renderVisualFeedback(e)}renderGameArea(e){e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(this.gameAreaX,this.gameAreaY,this.gameAreaWidth,this.gameAreaHeight)}renderMeatSections(e){this.meatSections.forEach(t=>{t.completed?e.fillStyle="rgba(205, 133, 63, 0.5)":e.fillStyle="#CD853F",e.fillRect(t.x-t.width/2,t.y-t.height/2,t.width,t.height),e.strokeStyle=t.completed?"#32CD32":"#8B4513",e.lineWidth=2,e.strokeRect(t.x-t.width/2,t.y-t.height/2,t.width,t.height),this.visualFeedback.showFiberDirection&&this.renderFiberDirection(e,t),this.renderExistingSlices(e,t),e.fillStyle="#FFFFFF",e.font="12px Arial",e.textAlign="center",e.fillText(`${t.name} (${t.slices.length}/${t.targetSlices})`,t.x,t.y-t.height/2-10)})}renderFiberDirection(e,t){const i=this.meatAnalysis.fiberDirection.find(s=>s.sectionId===t.id);i&&(e.strokeStyle="rgba(255, 255, 255, 0.3)",e.lineWidth=1,i.fibers.forEach(s=>{e.beginPath(),e.moveTo(s.startX,s.startY),e.lineTo(s.endX,s.endY),e.stroke()}))}renderExistingSlices(e,t){t.slices.forEach((i,s)=>{if(i.trail&&i.trail.length>1){e.strokeStyle=i.quality>=80?"#32CD32":i.quality>=60?"#FFD700":"#FF6347",e.lineWidth=2,e.lineCap="round",e.beginPath(),e.moveTo(i.trail[0].x,i.trail[0].y);for(let a=1;a<i.trail.length;a++)e.lineTo(i.trail[a].x,i.trail[a].y);e.stroke()}})}renderKnifeTrail(e){if(!(this.knifeControl.trailPoints.length<2)){e.strokeStyle="#C0C0C0",e.lineWidth=3,e.lineCap="round",e.lineJoin="round",e.beginPath(),e.moveTo(this.knifeControl.trailPoints[0].x,this.knifeControl.trailPoints[0].y);for(let t=1;t<this.knifeControl.trailPoints.length;t++)e.lineTo(this.knifeControl.trailPoints[t].x,this.knifeControl.trailPoints[t].y);e.stroke()}}renderSlicePreview(e){if(!this.visualFeedback.slicePreview)return;const t=this.visualFeedback.slicePreview;if(this.visualFeedback.showThicknessGuide){const i=t.thickness;let s="#32CD32";i<this.slicingStandards.minThickness||i>this.slicingStandards.maxThickness?s="#FF4500":Math.abs(i-this.slicingStandards.optimalThickness)>1&&(s="#FFD700"),e.fillStyle=s,e.font="14px Arial",e.textAlign="center",e.fillText(`厚度: ${i.toFixed(1)}mm`,this.inputHandler.mouseX,this.inputHandler.mouseY-20)}if(this.visualFeedback.showQualityIndicator){const i=t.quality;let s=i>=80?"#32CD32":i>=60?"#FFD700":"#FF6347";e.fillStyle=s,e.font="12px Arial",e.textAlign="center",e.fillText(`品質: ${Math.round(i)}%`,this.inputHandler.mouseX,this.inputHandler.mouseY+30)}}renderVisualFeedback(e){if(this.visualFeedback.feedbackTimer>0&&this.visualFeedback.currentFeedback){const t=this.visualFeedback.currentFeedback;e.save(),e.globalAlpha=Math.min(1,this.visualFeedback.feedbackTimer),e.fillStyle=t.color,e.font="16px Arial",e.textAlign="center",t.text.split(`
`).forEach((s,a)=>{e.fillText(s,t.x,t.y+a*20)}),e.restore()}}cleanup(){const e=this.gameEngine.canvas;this.mouseDownHandler&&e.removeEventListener("mousedown",this.mouseDownHandler),this.mouseMoveHandler&&e.removeEventListener("mousemove",this.mouseMoveHandler),this.mouseUpHandler&&e.removeEventListener("mouseup",this.mouseUpHandler),super.cleanup()}};window.MeatSlicingGame=MeatSlicingGame$1;let PlatingArrangementGame$1=class extends MiniGame{constructor(e){super(e),this.name="擺盤藝術遊戲",this.gameAreaX=e.gameAreaX,this.gameAreaY=e.gameAreaY,this.gameAreaWidth=e.gameAreaWidth,this.gameAreaHeight=e.gameAreaHeight,this.slicingSystem=e.slicingSystem,this.workStation=e.workStation,this.traditionalServing=e.traditionalServing,this.gameState={phase:"instruction",currentTask:"skin_arrangement",timeLimit:180,timeRemaining:180,score:0,creativity:0,symmetry:0,colorBalance:0},this.platingAreas={mainPlate:{x:this.workStation.plateX,y:this.workStation.plateY,radius:60,items:[],style:"traditional"},sidePlates:[{x:this.workStation.plateX-100,y:this.workStation.plateY+80,radius:30,items:[],type:"pancakes"},{x:this.workStation.plateX+100,y:this.workStation.plateY+80,radius:25,items:[],type:"vegetables"},{x:this.workStation.plateX,y:this.workStation.plateY+120,radius:20,items:[],type:"sauce"}]},this.draggableItems=[],this.generateDraggableItems(),this.platingTemplates={traditional:{name:"傳統擺盤",description:"皮片呈扇形排列，肉片圍繞中心",skinPattern:"fan",meatPattern:"circle",symmetry:90,bonus:100},modern:{name:"現代風格",description:"幾何圖形排列，注重視覺衝擊",skinPattern:"geometric",meatPattern:"linear",symmetry:85,bonus:120},artistic:{name:"藝術創意",description:"自由發揮，展現個人風格",skinPattern:"free",meatPattern:"free",symmetry:70,bonus:150}},this.selectedTemplate=this.platingTemplates.traditional,this.dragState={isDragging:!1,draggedItem:null,dragOffsetX:0,dragOffsetY:0,originalX:0,originalY:0},this.visualFeedback={showGrid:!0,showTemplateGuide:!0,showSymmetryLines:!0,currentFeedback:null,feedbackTimer:0,highlightedArea:null},this.scoringSystem={symmetryWeight:.3,colorBalanceWeight:.25,creativityWeight:.25,completenessWeight:.2,bonusMultiplier:1},this.inputHandler={mouseDown:!1,mouseX:0,mouseY:0,lastMouseX:0,lastMouseY:0},this.sounds={pickupSound:"item_pickup",placeSound:"item_place",successSound:"arrangement_success",completeSound:"plating_complete"}}generateDraggableItems(){this.draggableItems=[];const e=this.slicingSystem.slices.skin.count||24;for(let i=0;i<e;i++)this.draggableItems.push({id:`skin_${i}`,type:"skin",x:50+i%6*25,y:150+Math.floor(i/6)*15,width:20,height:8,color:"#DAA520",placed:!1,quality:85+Math.random()*15});const t=this.slicingSystem.slices.meat.count||36;for(let i=0;i<t;i++)this.draggableItems.push({id:`meat_${i}`,type:"meat",x:50+i%8*20,y:250+Math.floor(i/8)*12,width:16,height:6,color:"#CD853F",placed:!1,quality:80+Math.random()*20});this.generateAccompanimentItems()}generateAccompanimentItems(){for(let e=0;e<12;e++)this.draggableItems.push({id:`pancake_${e}`,type:"pancake",x:550+e%4*30,y:150+Math.floor(e/4)*25,width:25,height:25,color:"#F5DEB3",placed:!1,quality:90});for(let e=0;e<8;e++)this.draggableItems.push({id:`scallion_${e}`,type:"scallion",x:550+e%4*15,y:250+Math.floor(e/4)*10,width:12,height:3,color:"#228B22",placed:!1,quality:95});for(let e=0;e<8;e++)this.draggableItems.push({id:`cucumber_${e}`,type:"cucumber",x:550+e%4*15,y:290+Math.floor(e/4)*10,width:12,height:3,color:"#32CD32",placed:!1,quality:92});this.draggableItems.push({id:"sauce_bowl",type:"sauce",x:580,y:330,width:30,height:20,color:"#8B4513",placed:!1,quality:88})}start(){super.start(),this.setupGameUI(),this.setupInputHandlers(),console.log("擺盤藝術遊戲開始")}setupGameUI(){const e=this.gameEngine.uiManager;this.gameTitle=e.createLabel({x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY-20,text:"擺盤藝術 - 展現千年飲食美學",fontSize:18,color:"#DC143C",align:"center"}),this.taskLabel=e.createLabel({x:this.gameAreaX+20,y:this.gameAreaY+20,text:this.getTaskText(),fontSize:14,color:"#8B4513",align:"left"}),this.timeLabel=e.createLabel({x:this.gameAreaX+this.gameAreaWidth-20,y:this.gameAreaY+20,text:this.getTimeText(),fontSize:14,color:"#FF4500",align:"right"}),this.scoreLabel=e.createLabel({x:this.gameAreaX+20,y:this.gameAreaY+50,text:this.getScoreText(),fontSize:12,color:"#4682B4",align:"left"}),this.createTemplateButtons(),this.instructionLabel=e.createLabel({x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY+this.gameAreaHeight-20,text:"拖拽食材到盤子上進行擺盤，追求對稱美觀",fontSize:14,color:"#4682B4",align:"center"}),this.addUIElement(this.gameTitle),this.addUIElement(this.taskLabel),this.addUIElement(this.timeLabel),this.addUIElement(this.scoreLabel),this.addUIElement(this.instructionLabel)}createTemplateButtons(){const e=this.gameEngine.uiManager,t=this.gameAreaY+80;Object.keys(this.platingTemplates).forEach((i,s)=>{const a=this.platingTemplates[i],n=e.createButton({x:this.gameAreaX+20+s*100,y:t,width:90,height:30,text:a.name,onClick:()=>this.selectTemplate(i)});this.addUIElement(n)})}selectTemplate(e){this.selectedTemplate=this.platingTemplates[e],this.visualFeedback.showTemplateGuide=!0,this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound("button_click"),console.log(`選擇擺盤模板: ${this.selectedTemplate.name}`)}setupInputHandlers(){const e=this.gameEngine.canvas;this.mouseDownHandler=t=>{const i=e.getBoundingClientRect(),s=t.clientX-i.left,a=t.clientY-i.top;this.inputHandler.mouseDown=!0,this.inputHandler.mouseX=s,this.inputHandler.mouseY=a,this.inputHandler.lastMouseX=s,this.inputHandler.lastMouseY=a,this.checkItemClick(s,a)},this.mouseMoveHandler=t=>{const i=e.getBoundingClientRect(),s=t.clientX-i.left,a=t.clientY-i.top;this.inputHandler.lastMouseX=this.inputHandler.mouseX,this.inputHandler.lastMouseY=this.inputHandler.mouseY,this.inputHandler.mouseX=s,this.inputHandler.mouseY=a,this.dragState.isDragging&&this.updateDrag(s,a),this.updateHighlight(s,a)},this.mouseUpHandler=t=>{this.inputHandler.mouseDown=!1,this.completeDrag()},e.addEventListener("mousedown",this.mouseDownHandler),e.addEventListener("mousemove",this.mouseMoveHandler),e.addEventListener("mouseup",this.mouseUpHandler)}checkItemClick(e,t){for(let i=this.draggableItems.length-1;i>=0;i--){const s=this.draggableItems[i];if(e>=s.x&&e<=s.x+s.width&&t>=s.y&&t<=s.y+s.height){this.startDrag(s,e,t);break}}}startDrag(e,t,i){this.dragState.isDragging=!0,this.dragState.draggedItem=e,this.dragState.dragOffsetX=t-e.x,this.dragState.dragOffsetY=i-e.y,this.dragState.originalX=e.x,this.dragState.originalY=e.y,this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound(this.sounds.pickupSound)}updateDrag(e,t){if(!this.dragState.isDragging||!this.dragState.draggedItem)return;const i=this.dragState.draggedItem;i.x=e-this.dragState.dragOffsetX,i.y=t-this.dragState.dragOffsetY}updateHighlight(e,t){this.visualFeedback.highlightedArea=null;const i=this.platingAreas.mainPlate;if(Math.sqrt(Math.pow(e-i.x,2)+Math.pow(t-i.y,2))<=i.radius){this.visualFeedback.highlightedArea=i;return}for(let a of this.platingAreas.sidePlates)if(Math.sqrt(Math.pow(e-a.x,2)+Math.pow(t-a.y,2))<=a.radius){this.visualFeedback.highlightedArea=a;return}}completeDrag(){if(!this.dragState.isDragging||!this.dragState.draggedItem)return;const e=this.dragState.draggedItem;this.tryPlaceItem(e)?(e.placed=!0,this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound(this.sounds.placeSound),this.updateScoring(),this.checkTaskCompletion()):(e.x=this.dragState.originalX,e.y=this.dragState.originalY),this.dragState.isDragging=!1,this.dragState.draggedItem=null}tryPlaceItem(e){const t=this.platingAreas.mainPlate;if(Math.sqrt(Math.pow(e.x+e.width/2-t.x,2)+Math.pow(e.y+e.height/2-t.y,2))<=t.radius&&(e.type==="skin"||e.type==="meat"))return t.items.push({item:e,relativeX:e.x+e.width/2-t.x,relativeY:e.y+e.height/2-t.y,angle:Math.atan2(e.y+e.height/2-t.y,e.x+e.width/2-t.x)}),!0;for(let s of this.platingAreas.sidePlates)if(Math.sqrt(Math.pow(e.x+e.width/2-s.x,2)+Math.pow(e.y+e.height/2-s.y,2))<=s.radius&&this.isItemCompatible(e,s))return s.items.push({item:e,relativeX:e.x+e.width/2-s.x,relativeY:e.y+e.height/2-s.y}),!0;return!1}isItemCompatible(e,t){switch(t.type){case"pancakes":return e.type==="pancake";case"vegetables":return e.type==="scallion"||e.type==="cucumber";case"sauce":return e.type==="sauce";default:return!1}}updateScoring(){this.gameState.symmetry=this.calculateSymmetry(),this.gameState.colorBalance=this.calculateColorBalance(),this.gameState.creativity=this.calculateCreativity();const e=this.calculateCompleteness(),t=this.scoringSystem;this.gameState.score=Math.round((this.gameState.symmetry*t.symmetryWeight+this.gameState.colorBalance*t.colorBalanceWeight+this.gameState.creativity*t.creativityWeight+e*t.completenessWeight)*t.bonusMultiplier)}calculateSymmetry(){const t=this.platingAreas.mainPlate.items;if(t.length<4)return 0;switch(this.selectedTemplate.skinPattern){case"fan":return this.calculateFanSymmetry(t);case"circle":return this.calculateCircleSymmetry(t);case"geometric":return this.calculateGeometricSymmetry(t);default:return this.calculateGeneralSymmetry(t)}}calculateFanSymmetry(e){const t=e.filter(a=>a.item.type==="skin");if(t.length<6)return 0;let i=0;const s=Math.PI/6;return t.forEach((a,n)=>{const r=n*s-Math.PI/2,h=a.angle,o=Math.abs(h-r);i+=Math.max(0,100-o*180/Math.PI*5)}),Math.round(i/t.length)}calculateCircleSymmetry(e){const t=e.filter(a=>a.item.type==="meat");if(t.length<8)return 0;let i=0;const s=2*Math.PI/t.length;return t.forEach((a,n)=>{const r=n*s,h=a.angle+Math.PI,o=Math.abs(h-r);i+=Math.max(0,100-o*180/Math.PI*3)}),Math.round(i/t.length)}calculateGeometricSymmetry(e){let t=70,i=0;return e.forEach(s=>{const a=-s.relativeX,n=-s.relativeY;e.some(h=>Math.abs(h.relativeX-a)<10&&Math.abs(h.relativeY-n)<10&&h.item.type===s.item.type)&&(i+=10)}),Math.min(100,t+i)}calculateGeneralSymmetry(e){if(e.length<2)return 0;let t=0,i=0;e.forEach(n=>{t+=n.relativeX,i+=n.relativeY}),t/=e.length,i/=e.length;let s=0;const a=e.reduce((n,r)=>n+Math.sqrt(Math.pow(r.relativeX-t,2)+Math.pow(r.relativeY-i,2)),0)/e.length;return e.forEach(n=>{const r=Math.sqrt(Math.pow(n.relativeX-t,2)+Math.pow(n.relativeY-i,2)),h=Math.abs(r-a);s+=Math.max(0,100-h*2)}),Math.round(s/e.length)}calculateColorBalance(){const e=this.platingAreas.mainPlate,t=e.items.filter(h=>h.item.type==="skin"),i=e.items.filter(h=>h.item.type==="meat"),s=1.5,a=i.length>0?t.length/i.length:0,n=Math.max(0,100-Math.abs(a-s)*50);let r=0;if(t.length>0&&i.length>0){const h=[...t,...i].sort((c,g)=>c.angle-g.angle);let o=0;for(let c=0;c<h.length-1;c++)h[c].item.type!==h[c+1].item.type&&(o+=10);r=Math.min(100,o)}return Math.round((n+r)/2)}calculateCreativity(){let e=50;e+=this.selectedTemplate.bonus*.2;const t=this.calculateCompleteness();e+=t*.3;const i=this.calculateAccompanimentScore();return e+=i*.2,Math.min(100,Math.round(e))}calculateCompleteness(){const e=this.platingAreas.mainPlate,t=e.items.filter(h=>h.item.type==="skin").length,i=e.items.filter(h=>h.item.type==="meat").length,s=Math.min(24,this.slicingSystem.slices.skin.count||0),a=Math.min(36,this.slicingSystem.slices.meat.count||0),n=s>0?t/s*100:0,r=a>0?i/a*100:0;return Math.round((n+r)/2)}calculateAccompanimentScore(){let e=0;return this.platingAreas.sidePlates.forEach(t=>{const i=t.items.length;let s=0;switch(t.type){case"pancakes":s=12;break;case"vegetables":s=16;break;case"sauce":s=1;break}s>0&&(e+=Math.min(100,i/s*100))}),Math.round(e/this.platingAreas.sidePlates.length)}checkTaskCompletion(){switch(this.gameState.currentTask){case"skin_arrangement":this.platingAreas.mainPlate.items.filter(s=>s.item.type==="skin").length>=12&&(this.gameState.currentTask="meat_arrangement",this.showTaskFeedback("皮片擺盤完成！開始擺放肉片"));break;case"meat_arrangement":this.platingAreas.mainPlate.items.filter(s=>s.item.type==="meat").length>=18&&(this.gameState.currentTask="accompaniment_prep",this.showTaskFeedback("肉片擺盤完成！準備配菜"));break;case"accompaniment_prep":this.checkAccompanimentCompletion()&&this.completeGame(!0);break}}checkAccompanimentCompletion(){const e=this.platingAreas.sidePlates[0].items.length,t=this.platingAreas.sidePlates[1].items.length,i=this.platingAreas.sidePlates[2].items.length;return e>=8&&t>=8&&i>=1}showTaskFeedback(e){this.visualFeedback.currentFeedback={text:e,color:"#32CD32",x:this.gameAreaX+this.gameAreaWidth/2,y:this.gameAreaY+this.gameAreaHeight/2},this.visualFeedback.feedbackTimer=3,this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound(this.sounds.successSound)}completeGame(e){this.gameState.phase="complete",this.updateScoring();const t={success:e,score:this.gameState.score,style:this.selectedTemplate.name.toLowerCase(),symmetry:this.gameState.symmetry,colorBalance:this.gameState.colorBalance,creativity:this.gameState.creativity,overallScore:Math.round((this.gameState.symmetry+this.gameState.colorBalance+this.gameState.creativity)/3),pancakeCount:this.platingAreas.sidePlates[0].items.length,vegetableCount:this.platingAreas.sidePlates[1].items.length,sauceCount:this.platingAreas.sidePlates[2].items.length};this.traditionalServing.pancakes.count=t.pancakeCount,this.traditionalServing.pancakes.prepared=t.pancakeCount>0,this.traditionalServing.scallions.prepared=t.vegetableCount>0,this.traditionalServing.cucumber.prepared=t.vegetableCount>0,this.traditionalServing.sauce.prepared=t.sauceCount>0,console.log("擺盤藝術遊戲完成:",t),this.gameEngine.gameState.settings.soundEnabled&&this.gameEngine.audioManager.playSound(this.sounds.completeSound),this.cleanup(),setTimeout(()=>{this.scene.onMiniGameComplete(e,t)},1e3)}getTaskText(){return`當前任務: ${{skin_arrangement:"擺放鴨皮片",meat_arrangement:"擺放鴨肉片",accompaniment_prep:"準備傳統配菜"}[this.gameState.currentTask]||"未知任務"}`}getTimeText(){const e=Math.floor(this.gameState.timeRemaining/60),t=Math.floor(this.gameState.timeRemaining%60);return`時間: ${e}:${t.toString().padStart(2,"0")}`}getScoreText(){return`評分 - 對稱:${this.gameState.symmetry}% 色彩:${this.gameState.colorBalance}% 創意:${this.gameState.creativity}%`}update(e){super.update(e),this.gameState.phase==="plating"&&(this.gameState.timeRemaining=Math.max(0,this.gameState.timeRemaining-e)),this.visualFeedback.feedbackTimer>0&&(this.visualFeedback.feedbackTimer-=e),this.updateUIDisplays(),this.gameState.timeRemaining<=0&&this.gameState.phase!=="complete"&&this.completeGame(!1)}updateUIDisplays(){this.taskLabel&&this.taskLabel.setText(this.getTaskText()),this.timeLabel&&this.timeLabel.setText(this.getTimeText()),this.scoreLabel&&this.scoreLabel.setText(this.getScoreText())}render(e){super.render(e),this.renderGameArea(e),this.renderPlatingAreas(e),this.renderDraggableItems(e),this.renderTemplateGuide(e),this.renderVisualFeedback(e)}renderGameArea(e){e.strokeStyle="#8B4513",e.lineWidth=2,e.strokeRect(this.gameAreaX,this.gameAreaY,this.gameAreaWidth,this.gameAreaHeight),this.visualFeedback.showGrid&&this.renderGrid(e)}renderGrid(e){e.strokeStyle="rgba(200, 200, 200, 0.3)",e.lineWidth=1;const t=20;for(let i=this.gameAreaX;i<=this.gameAreaX+this.gameAreaWidth;i+=t)e.beginPath(),e.moveTo(i,this.gameAreaY),e.lineTo(i,this.gameAreaY+this.gameAreaHeight),e.stroke();for(let i=this.gameAreaY;i<=this.gameAreaY+this.gameAreaHeight;i+=t)e.beginPath(),e.moveTo(this.gameAreaX,i),e.lineTo(this.gameAreaX+this.gameAreaWidth,i),e.stroke()}renderPlatingAreas(e){const t=this.platingAreas.mainPlate;e.fillStyle=this.visualFeedback.highlightedArea===t?"rgba(255, 255, 255, 0.9)":"rgba(255, 255, 255, 0.7)",e.beginPath(),e.arc(t.x,t.y,t.radius,0,2*Math.PI),e.fill(),e.strokeStyle="#D3D3D3",e.lineWidth=2,e.stroke(),this.platingAreas.sidePlates.forEach(i=>{e.fillStyle=this.visualFeedback.highlightedArea===i?"rgba(245, 245, 245, 0.9)":"rgba(245, 245, 245, 0.7)",e.beginPath(),e.arc(i.x,i.y,i.radius,0,2*Math.PI),e.fill(),e.strokeStyle="#C0C0C0",e.lineWidth=1,e.stroke(),e.fillStyle="#666666",e.font="10px Arial",e.textAlign="center";const s={pancakes:"荷葉餅",vegetables:"蔥絲黃瓜",sauce:"甜麵醬"};e.fillText(s[i.type]||"",i.x,i.y+i.radius+15)})}renderDraggableItems(e){this.draggableItems.forEach(t=>{if(!t.placed&&(e.fillStyle=t.color,e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle=t===this.dragState.draggedItem?"#FF4500":"#8B4513",e.lineWidth=t===this.dragState.draggedItem?2:1,e.strokeRect(t.x,t.y,t.width,t.height),t.quality)){const i=t.quality>=90?"#32CD32":t.quality>=75?"#FFD700":"#FFA500";e.fillStyle=i,e.fillRect(t.x,t.y,t.width*(t.quality/100),2)}}),this.renderPlacedItems(e)}renderPlacedItems(e){const t=this.platingAreas.mainPlate;t.items.forEach(i=>{const s=i.item,a=t.x+i.relativeX-s.width/2,n=t.y+i.relativeY-s.height/2;e.fillStyle=s.color,e.fillRect(a,n,s.width,s.height),e.strokeStyle="#654321",e.lineWidth=1,e.strokeRect(a,n,s.width,s.height)}),this.platingAreas.sidePlates.forEach(i=>{i.items.forEach(s=>{const a=s.item,n=i.x+s.relativeX-a.width/2,r=i.y+s.relativeY-a.height/2;e.fillStyle=a.color,e.fillRect(n,r,a.width,a.height),e.strokeStyle="#654321",e.lineWidth=1,e.strokeRect(n,r,a.width,a.height)})})}renderTemplateGuide(e){if(!this.visualFeedback.showTemplateGuide)return;const t=this.platingAreas.mainPlate;switch(e.strokeStyle="rgba(255, 215, 0, 0.5)",e.lineWidth=1,e.setLineDash([5,5]),this.selectedTemplate.skinPattern){case"fan":for(let s=0;s<12;s++){const a=s*Math.PI/6-Math.PI/2,n=t.x+Math.cos(a)*(t.radius-10),r=t.y+Math.sin(a)*(t.radius-10);e.beginPath(),e.moveTo(t.x,t.y),e.lineTo(n,r),e.stroke()}break;case"circle":e.beginPath(),e.arc(t.x,t.y,t.radius-15,0,2*Math.PI),e.stroke();break;case"geometric":const i=t.radius-20;e.strokeRect(t.x-i/2,t.y-i/2,i,i);break}e.setLineDash([])}renderVisualFeedback(e){if(this.visualFeedback.showSymmetryLines){const t=this.platingAreas.mainPlate;e.strokeStyle="rgba(0, 255, 0, 0.3)",e.lineWidth=1,e.setLineDash([3,3]),e.beginPath(),e.moveTo(t.x,t.y-t.radius),e.lineTo(t.x,t.y+t.radius),e.stroke(),e.beginPath(),e.moveTo(t.x-t.radius,t.y),e.lineTo(t.x+t.radius,t.y),e.stroke(),e.setLineDash([])}if(this.visualFeedback.feedbackTimer>0&&this.visualFeedback.currentFeedback){const t=this.visualFeedback.currentFeedback;e.save(),e.globalAlpha=Math.min(1,this.visualFeedback.feedbackTimer),e.fillStyle=t.color,e.font="18px Arial",e.textAlign="center",e.fillText(t.text,t.x,t.y),e.restore()}}cleanup(){const e=this.gameEngine.canvas;this.mouseDownHandler&&e.removeEventListener("mousedown",this.mouseDownHandler),this.mouseMoveHandler&&e.removeEventListener("mousemove",this.mouseMoveHandler),this.mouseUpHandler&&e.removeEventListener("mouseup",this.mouseUpHandler),super.cleanup()}};window.PlatingArrangementGame=PlatingArrangementGame$1;let gameEngine=null;async function initializeGame(){try{console.log("開始初始化北京烤鴨料理遊戲...");const l=document.getElementById("gameContainer");if(l&&(l.innerHTML=`
                <canvas id="gameCanvas" width="800" height="600"></canvas>
                <div id="uiOverlay"></div>
            `),console.log("檢查必要類別..."),typeof GameEngine>"u")throw new Error("GameEngine 類別未定義");if(typeof Scene>"u")throw new Error("Scene 類別未定義");if(typeof WelcomeScene>"u")throw new Error("WelcomeScene 類別未定義");if(console.log("所有必要類別檢查通過"),console.log("創建遊戲引擎實例..."),gameEngine=new GameEngine,console.log("初始化遊戲引擎..."),!await gameEngine.init())throw new Error("遊戲引擎初始化失敗");console.log("遊戲引擎初始化成功"),console.log("初始化場景管理器..."),gameEngine.sceneManager.initializeScenes(),console.log("場景管理器初始化完成"),console.log("設置UI管理器..."),gameEngine.uiManager.setCanvas(gameEngine.canvas,gameEngine.context),console.log("UI管理器設置完成"),console.log("開始預載入音效..."),gameEngine.audioManager.preloadSounds().catch(t=>{console.warn("音效預載入失敗，遊戲將以靜音模式運行:",t)}),console.log("載入遊戲進度..."),gameEngine.loadGameProgress(),console.log("遊戲進度載入完成"),console.log("啟動遊戲..."),gameEngine.start(),console.log("遊戲初始化完成，開始運行！")}catch(l){console.error("遊戲初始化失敗:",l),console.error("錯誤堆疊:",l.stack),showErrorMessage(`遊戲載入失敗: ${l.message}<br>請檢查瀏覽器控制台獲取詳細資訊。`)}}function showErrorMessage(l){const e=document.getElementById("gameContainer");e&&(e.innerHTML=`
            <div style="
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                width: 800px;
                height: 600px;
                background: #FFF8DC;
                border: 3px solid #654321;
                border-radius: 10px;
                font-family: 'Microsoft JhengHei', Arial, sans-serif;
            ">
                <h2 style="color: #8B4513; margin-bottom: 20px;">遊戲載入錯誤</h2>
                <p style="color: #654321; margin-bottom: 30px;">${l}</p>
                <button onclick="location.reload()" style="
                    background: linear-gradient(145deg, #FFD700, #FFA500);
                    border: 2px solid #FF8C00;
                    border-radius: 8px;
                    color: #8B4513;
                    font-weight: bold;
                    font-size: 16px;
                    padding: 10px 20px;
                    cursor: pointer;
                ">重新載入</button>
            </div>
        `)}function checkBrowserCompatibility(){return document.createElement("canvas").getContext("2d")?(window.localStorage||console.warn("LocalStorage不可用，遊戲進度將無法保存"),window.Audio||console.warn("Audio API不可用，遊戲將無音效"),!0):(showErrorMessage("您的瀏覽器不支援HTML5 Canvas，請使用現代瀏覽器。"),!1)}function startGame(){if(console.log("開始載入遊戲..."),!checkBrowserCompatibility())return;const l=document.getElementById("gameContainer");l&&(l.innerHTML=`
            <div style="
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                width: 800px;
                height: 600px;
                background: linear-gradient(135deg, #FFF8DC 0%, #F5DEB3 100%);
                border: 3px solid #654321;
                border-radius: 10px;
                font-family: 'Microsoft JhengHei', Arial, sans-serif;
            ">
                <h1 style="color: #8B4513; margin-bottom: 30px;">北京烤鴨料理遊戲</h1>
                <div style="
                    width: 200px;
                    height: 20px;
                    background: #CCCCCC;
                    border-radius: 10px;
                    overflow: hidden;
                    margin-bottom: 20px;
                ">
                    <div id="loadingBar" style="
                        width: 0%;
                        height: 100%;
                        background: linear-gradient(90deg, #32CD32, #228B22);
                        transition: width 0.3s ease;
                    "></div>
                </div>
                <p style="color: #654321;">載入中...</p>
            </div>
        `);let e=0;const t=document.getElementById("loadingBar"),i=setInterval(()=>{e+=Math.random()*20,e>=100&&(e=100,clearInterval(i),setTimeout(()=>{initializeGame()},500)),t&&(t.style.width=e+"%")},200)}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",startGame):startGame();window.addEventListener("beforeunload",()=>{gameEngine&&(gameEngine.stop(),gameEngine.audioManager.cleanup(),console.log("遊戲資源已清理"))});document.addEventListener("visibilitychange",()=>{gameEngine&&(document.hidden?gameEngine.pause():gameEngine.resume())});window.addEventListener("error",l=>{var e;console.error("全域錯誤:",l.error),console.error("錯誤檔案:",l.filename),console.error("錯誤行號:",l.lineno),console.error("錯誤列號:",l.colno),showErrorMessage(`
        發生錯誤: ${((e=l.error)==null?void 0:e.message)||l.message}<br>
        檔案: ${l.filename}<br>
        行號: ${l.lineno}<br>
        請檢查瀏覽器控制台獲取更多資訊。
    `),gameEngine&&gameEngine.pause()});window.addEventListener("unhandledrejection",l=>{var e;console.error("未處理的Promise錯誤:",l.reason),showErrorMessage(`Promise錯誤: ${((e=l.reason)==null?void 0:e.message)||l.reason}`)});window.gameEngine=gameEngine;window.initializeGame=initializeGame;console.log("Main.js模組已載入");
